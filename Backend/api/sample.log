2023-06-10 17:49:11,219 | INFO: Adding job tentatively -- it will be properly scheduled when the scheduler starts
2023-06-10 17:49:11,220 | INFO: Added job "streamTickers" to job store "default"
2023-06-10 17:49:11,220 | INFO: Scheduler started
2023-06-10 17:49:11,220 | DEBUG: Looking for jobs to run
2023-06-10 17:49:11,220 | DEBUG: Next wakeup is due at 2023-06-10 18:34:11.218027+05:30 (in 2699.997493 seconds)
2023-06-10 17:49:11,220 | DEBUG: Stream Started
2023-06-10 17:49:11,227 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-06-10 17:49:11,227 | INFO: [33mPress CTRL+C to quit[0m
2023-06-10 17:49:51,719 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-06-10 17:49:51,719 | INFO: [33mPress CTRL+C to quit[0m
2023-06-10 17:50:07,643 | INFO: Adding job tentatively -- it will be properly scheduled when the scheduler starts
2023-06-10 17:50:07,643 | INFO: Added job "streamTickers" to job store "default"
2023-06-10 17:50:07,643 | INFO: Scheduler started
2023-06-10 17:50:07,644 | DEBUG: Looking for jobs to run
2023-06-10 17:50:07,644 | DEBUG: Next wakeup is due at 2023-06-10 18:35:07.643138+05:30 (in 2699.998249 seconds)
2023-06-10 17:50:07,644 | DEBUG: Stream Started
2023-06-10 17:50:16,848 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-06-10 17:50:16,849 | INFO: [33mPress CTRL+C to quit[0m
2023-06-10 17:50:34,101 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-06-10 17:50:34,101 | DEBUG: Data: None
2023-06-10 17:50:34,101 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-06-10 17:50:34,103 | DEBUG: Starting new HTTPS connection (1): www.reddit.com:443
2023-06-10 17:50:34,943 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 669
2023-06-10 17:50:34,958 | DEBUG: Starting new HTTPS connection (1): oauth.reddit.com:443
2023-06-10 17:50:35,677 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 19130
2023-06-10 17:50:35,866 | DEBUG: Response: 200 (19130 bytes)
2023-06-10 17:50:35,871 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/145frnx/
2023-06-10 17:50:35,872 | DEBUG: Data: None
2023-06-10 17:50:35,872 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 17:50:38,027 | DEBUG: https://oauth.reddit.com:443 "GET /comments/145frnx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 59447
2023-06-10 17:50:38,221 | DEBUG: Response: 200 (59447 bytes)
2023-06-10 17:50:38,349 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/145o913/
2023-06-10 17:50:38,350 | DEBUG: Data: None
2023-06-10 17:50:38,350 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 17:50:38,906 | DEBUG: https://oauth.reddit.com:443 "GET /comments/145o913/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 12142
2023-06-10 17:50:38,907 | DEBUG: Response: 200 (12142 bytes)
2023-06-10 17:50:38,914 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14568i8/
2023-06-10 17:50:38,914 | DEBUG: Data: None
2023-06-10 17:50:38,914 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 17:50:39,749 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14568i8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 13797
2023-06-10 17:50:39,751 | DEBUG: Response: 200 (13797 bytes)
2023-06-10 17:50:39,760 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/145hovo/
2023-06-10 17:50:39,761 | DEBUG: Data: None
2023-06-10 17:50:39,761 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 17:50:40,510 | DEBUG: https://oauth.reddit.com:443 "GET /comments/145hovo/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 24581
2023-06-10 17:50:40,513 | DEBUG: Response: 200 (24581 bytes)
2023-06-10 17:50:40,520 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/145byal/
2023-06-10 17:50:40,520 | DEBUG: Data: None
2023-06-10 17:50:40,520 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 17:50:40,962 | DEBUG: https://oauth.reddit.com:443 "GET /comments/145byal/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5812
2023-06-10 17:50:40,963 | DEBUG: Response: 200 (5812 bytes)
2023-06-10 17:50:40,967 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-06-10 17:50:40,967 | DEBUG: Data: None
2023-06-10 17:50:40,967 | DEBUG: Params: {'q': 'APPL', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-06-10 17:50:41,441 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=APPL&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6854
2023-06-10 17:50:41,442 | DEBUG: Response: 200 (6854 bytes)
2023-06-10 17:50:41,445 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/1453tou/
2023-06-10 17:50:41,445 | DEBUG: Data: None
2023-06-10 17:50:41,445 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 17:50:43,099 | DEBUG: https://oauth.reddit.com:443 "GET /comments/1453tou/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 69740
2023-06-10 17:50:43,307 | DEBUG: Response: 200 (69740 bytes)
2023-06-10 17:50:43,337 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/1457e33/
2023-06-10 17:50:43,338 | DEBUG: Data: None
2023-06-10 17:50:43,338 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 17:50:44,222 | DEBUG: https://oauth.reddit.com:443 "GET /comments/1457e33/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14359
2023-06-10 17:50:44,224 | DEBUG: Response: 200 (14359 bytes)
2023-06-10 17:50:44,233 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14575dz/
2023-06-10 17:50:44,233 | DEBUG: Data: None
2023-06-10 17:50:44,233 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 17:50:44,830 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14575dz/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 16574
2023-06-10 17:50:45,024 | DEBUG: Response: 200 (16574 bytes)
2023-06-10 17:50:45,033 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/145r5yd/
2023-06-10 17:50:45,033 | DEBUG: Data: None
2023-06-10 17:50:45,033 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 17:50:45,775 | DEBUG: https://oauth.reddit.com:443 "GET /comments/145r5yd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 15360
2023-06-10 17:50:45,778 | DEBUG: Response: 200 (15360 bytes)
2023-06-10 17:50:45,791 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/145qene/
2023-06-10 17:50:45,791 | DEBUG: Data: None
2023-06-10 17:50:45,791 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 17:50:46,100 | DEBUG: https://oauth.reddit.com:443 "GET /comments/145qene/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3543
2023-06-10 17:50:46,101 | DEBUG: Response: 200 (3543 bytes)
2023-06-10 17:50:46,102 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-06-10 17:50:46,103 | DEBUG: Data: None
2023-06-10 17:50:46,103 | DEBUG: Params: {'q': 'GME', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-06-10 17:50:46,446 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=GME&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-06-10 17:50:46,449 | DEBUG: Response: 200 (136 bytes)
2023-06-10 17:50:46,455 | INFO: 127.0.0.1 - - [10/Jun/2023 17:50:46] "GET /watchlist?tickSelector%5B0%5D=TSLA&tickSelector%5B1%5D=APPL&tickSelector%5B2%5D=GME HTTP/1.1" 200 -
2023-06-10 17:51:50,937 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-10 17:51:50,938 | DEBUG: Data: None
2023-06-10 17:51:50,938 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-10 17:51:51,427 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 3877
2023-06-10 17:51:51,427 | DEBUG: Response: 200 (3877 bytes)
2023-06-10 17:51:51,429 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/145yokr/
2023-06-10 17:51:51,429 | DEBUG: Data: None
2023-06-10 17:51:51,429 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 17:51:51,762 | DEBUG: https://oauth.reddit.com:443 "GET /comments/145yokr/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2740
2023-06-10 17:51:51,766 | DEBUG: Response: 200 (2740 bytes)
2023-06-10 17:51:51,768 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/145yge7/
2023-06-10 17:51:51,768 | DEBUG: Data: None
2023-06-10 17:51:51,768 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 17:51:52,081 | DEBUG: https://oauth.reddit.com:443 "GET /comments/145yge7/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2673
2023-06-10 17:51:52,085 | DEBUG: Response: 200 (2673 bytes)
2023-06-10 17:51:52,086 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/145ydvj/
2023-06-10 17:51:52,086 | DEBUG: Data: None
2023-06-10 17:51:52,086 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 17:51:52,377 | DEBUG: https://oauth.reddit.com:443 "GET /comments/145ydvj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2069
2023-06-10 17:51:52,378 | DEBUG: Response: 200 (2069 bytes)
2023-06-10 17:51:52,379 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/145y9ew/
2023-06-10 17:51:52,379 | DEBUG: Data: None
2023-06-10 17:51:52,379 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 17:51:52,748 | DEBUG: https://oauth.reddit.com:443 "GET /comments/145y9ew/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1509
2023-06-10 17:51:52,750 | DEBUG: Response: 200 (1509 bytes)
2023-06-10 17:51:52,752 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/145ybsa/
2023-06-10 17:51:52,752 | DEBUG: Data: None
2023-06-10 17:51:52,752 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 17:51:53,072 | DEBUG: https://oauth.reddit.com:443 "GET /comments/145ybsa/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2709
2023-06-10 17:51:53,077 | DEBUG: Response: 200 (2709 bytes)
2023-06-10 17:51:53,082 | INFO: 127.0.0.1 - - [10/Jun/2023 17:51:53] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-10 18:19:25,406 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-06-10 18:19:25,406 | INFO: [33mPress CTRL+C to quit[0m
2023-06-10 18:19:53,416 | INFO: 127.0.0.1 - - [10/Jun/2023 18:19:53] "[33mGET / HTTP/1.1[0m" 404 -
2023-06-10 18:19:53,713 | INFO: 127.0.0.1 - - [10/Jun/2023 18:19:53] "[33mGET /favicon.ico HTTP/1.1[0m" 404 -
2023-06-10 18:20:33,354 | INFO: 127.0.0.1 - - [10/Jun/2023 18:20:33] "[33mGET /index.html HTTP/1.1[0m" 404 -
2023-06-10 18:20:36,134 | INFO: 127.0.0.1 - - [10/Jun/2023 18:20:36] "[33mGET /index.html HTTP/1.1[0m" 404 -
2023-06-10 18:21:14,417 | INFO: Adding job tentatively -- it will be properly scheduled when the scheduler starts
2023-06-10 18:21:14,418 | INFO: Added job "streamTickers" to job store "default"
2023-06-10 18:21:14,418 | INFO: Scheduler started
2023-06-10 18:21:14,418 | DEBUG: Looking for jobs to run
2023-06-10 18:21:14,418 | DEBUG: Next wakeup is due at 2023-06-10 19:06:14.417863+05:30 (in 2699.998988 seconds)
2023-06-10 18:21:14,419 | DEBUG: Stream Started
2023-06-10 18:21:42,334 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-06-10 18:21:42,334 | INFO: [33mPress CTRL+C to quit[0m
2023-06-10 18:21:45,460 | INFO: 127.0.0.1 - - [10/Jun/2023 18:21:45] "[33mGET /index.html HTTP/1.1[0m" 404 -
2023-06-10 18:21:46,304 | INFO: 127.0.0.1 - - [10/Jun/2023 18:21:46] "[33mGET /index.html HTTP/1.1[0m" 404 -
2023-06-10 18:21:46,516 | INFO: 127.0.0.1 - - [10/Jun/2023 18:21:46] "[33mGET /index.html HTTP/1.1[0m" 404 -
2023-06-10 18:21:46,698 | INFO: 127.0.0.1 - - [10/Jun/2023 18:21:46] "[33mGET /index.html HTTP/1.1[0m" 404 -
2023-06-10 18:21:46,883 | INFO: 127.0.0.1 - - [10/Jun/2023 18:21:46] "[33mGET /index.html HTTP/1.1[0m" 404 -
2023-06-10 18:21:48,975 | INFO: Adding job tentatively -- it will be properly scheduled when the scheduler starts
2023-06-10 18:21:48,976 | INFO: Added job "streamTickers" to job store "default"
2023-06-10 18:21:48,976 | INFO: Scheduler started
2023-06-10 18:21:48,976 | DEBUG: Looking for jobs to run
2023-06-10 18:21:48,976 | DEBUG: Next wakeup is due at 2023-06-10 19:06:48.974131+05:30 (in 2699.997500 seconds)
2023-06-10 18:21:48,977 | DEBUG: Stream Started
2023-06-10 18:39:09,185 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-06-10 18:39:09,185 | INFO: [33mPress CTRL+C to quit[0m
2023-06-10 18:39:21,038 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:21] "GET / HTTP/1.1" 200 -
2023-06-10 18:39:21,060 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:21] "GET /path/to/c3.css HTTP/1.1" 200 -
2023-06-10 18:39:21,179 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:21] "GET /path/to/d3.v5.min.js HTTP/1.1" 200 -
2023-06-10 18:39:21,371 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:21] "GET /path/to/c3.min.js HTTP/1.1" 200 -
2023-06-10 18:39:22,046 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:22] "GET /%PUBLIC_URL%/favicon.ico HTTP/1.1" 200 -
2023-06-10 18:39:22,047 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:22] "GET /%PUBLIC_URL%/manifest.json HTTP/1.1" 200 -
2023-06-10 18:39:30,787 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:30] "[36mGET / HTTP/1.1[0m" 304 -
2023-06-10 18:39:31,105 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:31] "[36mGET /path/to/c3.css HTTP/1.1[0m" 304 -
2023-06-10 18:39:31,136 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:31] "[36mGET /path/to/d3.v5.min.js HTTP/1.1[0m" 304 -
2023-06-10 18:39:31,136 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:31] "[36mGET /path/to/c3.min.js HTTP/1.1[0m" 304 -
2023-06-10 18:39:31,193 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:31] "[36mGET /%PUBLIC_URL%/manifest.json HTTP/1.1[0m" 304 -
2023-06-10 18:39:31,493 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:31] "[36mGET /%PUBLIC_URL%/favicon.ico HTTP/1.1[0m" 304 -
2023-06-10 18:39:31,758 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:31] "[36mGET / HTTP/1.1[0m" 304 -
2023-06-10 18:39:32,056 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:32] "[36mGET /path/to/c3.css HTTP/1.1[0m" 304 -
2023-06-10 18:39:32,086 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:32] "[36mGET /path/to/c3.min.js HTTP/1.1[0m" 304 -
2023-06-10 18:39:32,086 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:32] "[36mGET /path/to/d3.v5.min.js HTTP/1.1[0m" 304 -
2023-06-10 18:39:32,125 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:32] "[36mGET /%PUBLIC_URL%/favicon.ico HTTP/1.1[0m" 304 -
2023-06-10 18:39:32,427 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:32] "[36mGET /%PUBLIC_URL%/manifest.json HTTP/1.1[0m" 304 -
2023-06-10 18:39:32,866 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:32] "[36mGET / HTTP/1.1[0m" 304 -
2023-06-10 18:39:32,879 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:32] "[36mGET /path/to/c3.css HTTP/1.1[0m" 304 -
2023-06-10 18:39:33,133 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:33] "[36mGET /path/to/d3.v5.min.js HTTP/1.1[0m" 304 -
2023-06-10 18:39:33,196 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:33] "[36mGET /path/to/c3.min.js HTTP/1.1[0m" 304 -
2023-06-10 18:39:33,233 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:33] "[36mGET /%PUBLIC_URL%/manifest.json HTTP/1.1[0m" 304 -
2023-06-10 18:39:33,539 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:33] "[36mGET /%PUBLIC_URL%/favicon.ico HTTP/1.1[0m" 304 -
2023-06-10 18:39:35,639 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:35] "[36mGET / HTTP/1.1[0m" 304 -
2023-06-10 18:39:35,945 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:35] "[36mGET /path/to/c3.css HTTP/1.1[0m" 304 -
2023-06-10 18:39:35,960 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:35] "[36mGET /path/to/d3.v5.min.js HTTP/1.1[0m" 304 -
2023-06-10 18:39:35,961 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:35] "[36mGET /path/to/c3.min.js HTTP/1.1[0m" 304 -
2023-06-10 18:39:36,305 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:36] "[36mGET /%PUBLIC_URL%/manifest.json HTTP/1.1[0m" 304 -
2023-06-10 18:39:36,306 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:36] "[36mGET / HTTP/1.1[0m" 304 -
2023-06-10 18:39:36,570 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:36] "[36mGET /path/to/c3.css HTTP/1.1[0m" 304 -
2023-06-10 18:39:36,617 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:36] "[36mGET /path/to/d3.v5.min.js HTTP/1.1[0m" 304 -
2023-06-10 18:39:36,648 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:36] "[36mGET /path/to/c3.min.js HTTP/1.1[0m" 304 -
2023-06-10 18:39:36,689 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:36] "[36mGET /%PUBLIC_URL%/manifest.json HTTP/1.1[0m" 304 -
2023-06-10 18:39:36,689 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:36] "GET /%PUBLIC_URL%/favicon.ico HTTP/1.1" 200 -
2023-06-10 18:39:37,269 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:37] "[36mGET / HTTP/1.1[0m" 304 -
2023-06-10 18:39:37,584 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:37] "[36mGET /path/to/c3.css HTTP/1.1[0m" 304 -
2023-06-10 18:39:37,603 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:37] "[36mGET /path/to/c3.min.js HTTP/1.1[0m" 304 -
2023-06-10 18:39:37,603 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:37] "[36mGET /path/to/d3.v5.min.js HTTP/1.1[0m" 304 -
2023-06-10 18:39:37,946 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:37] "[36mGET /%PUBLIC_URL%/manifest.json HTTP/1.1[0m" 304 -
2023-06-10 18:39:37,948 | INFO: 127.0.0.1 - - [10/Jun/2023 18:39:37] "[36mGET /%PUBLIC_URL%/favicon.ico HTTP/1.1[0m" 304 -
2023-06-10 18:41:06,698 | INFO: 127.0.0.1 - - [10/Jun/2023 18:41:06] "[36mGET / HTTP/1.1[0m" 304 -
2023-06-10 18:41:06,735 | INFO: 127.0.0.1 - - [10/Jun/2023 18:41:06] "[36mGET /path/to/c3.css HTTP/1.1[0m" 304 -
2023-06-10 18:41:06,963 | INFO: 127.0.0.1 - - [10/Jun/2023 18:41:06] "[36mGET /path/to/d3.v5.min.js HTTP/1.1[0m" 304 -
2023-06-10 18:41:07,041 | INFO: 127.0.0.1 - - [10/Jun/2023 18:41:07] "[36mGET /path/to/c3.min.js HTTP/1.1[0m" 304 -
2023-06-10 18:41:07,419 | INFO: 127.0.0.1 - - [10/Jun/2023 18:41:07] "[36mGET /%PUBLIC_URL%/favicon.ico HTTP/1.1[0m" 304 -
2023-06-10 18:41:07,420 | INFO: 127.0.0.1 - - [10/Jun/2023 18:41:07] "[36mGET /%PUBLIC_URL%/manifest.json HTTP/1.1[0m" 304 -
2023-06-10 18:41:09,538 | INFO: 127.0.0.1 - - [10/Jun/2023 18:41:09] "[36mGET / HTTP/1.1[0m" 304 -
2023-06-10 18:41:09,839 | INFO: 127.0.0.1 - - [10/Jun/2023 18:41:09] "[36mGET /path/to/c3.css HTTP/1.1[0m" 304 -
2023-06-10 18:41:09,873 | INFO: 127.0.0.1 - - [10/Jun/2023 18:41:09] "[36mGET /path/to/d3.v5.min.js HTTP/1.1[0m" 304 -
2023-06-10 18:41:09,874 | INFO: 127.0.0.1 - - [10/Jun/2023 18:41:09] "[36mGET /path/to/c3.min.js HTTP/1.1[0m" 304 -
2023-06-10 18:41:09,919 | INFO: 127.0.0.1 - - [10/Jun/2023 18:41:09] "[36mGET /%PUBLIC_URL%/manifest.json HTTP/1.1[0m" 304 -
2023-06-10 18:41:10,228 | INFO: 127.0.0.1 - - [10/Jun/2023 18:41:10] "[36mGET /%PUBLIC_URL%/favicon.ico HTTP/1.1[0m" 304 -
2023-06-10 18:56:03,963 | INFO: 127.0.0.1 - - [10/Jun/2023 18:56:03] "GET /predict HTTP/1.1" 200 -
2023-06-10 18:56:28,547 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-10 18:56:28,549 | DEBUG: Data: None
2023-06-10 18:56:28,549 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-10 18:56:28,577 | DEBUG: Starting new HTTPS connection (1): www.reddit.com:443
2023-06-10 18:56:29,446 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 669
2023-06-10 18:56:29,454 | DEBUG: Starting new HTTPS connection (1): oauth.reddit.com:443
2023-06-10 18:56:29,882 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 5860
2023-06-10 18:56:29,885 | DEBUG: Response: 200 (5860 bytes)
2023-06-10 18:56:29,891 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/145zl1r/
2023-06-10 18:56:29,891 | DEBUG: Data: None
2023-06-10 18:56:29,891 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 18:56:30,200 | DEBUG: https://oauth.reddit.com:443 "GET /comments/145zl1r/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3052
2023-06-10 18:56:30,202 | DEBUG: Response: 200 (3052 bytes)
2023-06-10 18:56:30,205 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/145zm8m/
2023-06-10 18:56:30,205 | DEBUG: Data: None
2023-06-10 18:56:30,205 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 18:56:30,554 | DEBUG: https://oauth.reddit.com:443 "GET /comments/145zm8m/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4748
2023-06-10 18:56:30,556 | DEBUG: Response: 200 (4748 bytes)
2023-06-10 18:56:30,557 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/145zdqe/
2023-06-10 18:56:30,557 | DEBUG: Data: None
2023-06-10 18:56:30,557 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 18:56:30,856 | DEBUG: https://oauth.reddit.com:443 "GET /comments/145zdqe/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1668
2023-06-10 18:56:30,857 | DEBUG: Response: 200 (1668 bytes)
2023-06-10 18:56:30,857 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14606wm/
2023-06-10 18:56:30,857 | DEBUG: Data: None
2023-06-10 18:56:30,857 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 18:56:31,147 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14606wm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1575
2023-06-10 18:56:31,148 | DEBUG: Response: 200 (1575 bytes)
2023-06-10 18:56:31,149 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/145zw5i/
2023-06-10 18:56:31,149 | DEBUG: Data: None
2023-06-10 18:56:31,149 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 18:56:31,424 | DEBUG: https://oauth.reddit.com:443 "GET /comments/145zw5i/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2084
2023-06-10 18:56:31,426 | DEBUG: Response: 200 (2084 bytes)
2023-06-10 18:56:31,431 | INFO: 127.0.0.1 - - [10/Jun/2023 18:56:31] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-10 18:58:41,133 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-06-10 18:58:41,133 | INFO: [33mPress CTRL+C to quit[0m
2023-06-10 18:58:54,998 | INFO: 127.0.0.1 - - [10/Jun/2023 18:58:54] "GET /predict HTTP/1.1" 200 -
2023-06-10 18:58:57,465 | INFO: 127.0.0.1 - - [10/Jun/2023 18:58:57] "GET /predict HTTP/1.1" 200 -
2023-06-10 18:59:20,953 | INFO: 127.0.0.1 - - [10/Jun/2023 18:59:20] "GET /predict HTTP/1.1" 200 -
2023-06-10 19:00:12,890 | INFO: Adding job tentatively -- it will be properly scheduled when the scheduler starts
2023-06-10 19:00:12,891 | INFO: Added job "streamTickers" to job store "default"
2023-06-10 19:00:12,892 | INFO: Scheduler started
2023-06-10 19:00:12,892 | DEBUG: Looking for jobs to run
2023-06-10 19:00:12,892 | DEBUG: Stream Started
2023-06-10 19:00:12,893 | DEBUG: Next wakeup is due at 2023-06-10 19:45:12.890620+05:30 (in 2699.998008 seconds)
2023-06-10 19:00:15,506 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-06-10 19:00:15,506 | INFO: [33mPress CTRL+C to quit[0m
2023-06-10 19:00:19,468 | INFO: 127.0.0.1 - - [10/Jun/2023 19:00:19] "GET /predict HTTP/1.1" 200 -
2023-06-10 19:00:20,476 | INFO: 127.0.0.1 - - [10/Jun/2023 19:00:20] "GET /predict HTTP/1.1" 200 -
2023-06-10 19:00:21,350 | INFO: 127.0.0.1 - - [10/Jun/2023 19:00:21] "GET /predict HTTP/1.1" 200 -
2023-06-10 19:00:21,962 | INFO: 127.0.0.1 - - [10/Jun/2023 19:00:21] "GET /predict HTTP/1.1" 200 -
2023-06-10 19:01:07,530 | ERROR: Exception on /topsubs/predict [GET]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 37, in get
    subs=redditbot.getSubmissionAllSubs(time)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\redditbot.py", line 51, in getSubmissionAllSubs
    top_posts = subreddit.top(time_filter=time_period, limit=5)
  File "C:\Python310\lib\site-packages\praw\util\deprecate_args.py", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File "C:\Python310\lib\site-packages\praw\models\listing\mixins\base.py", line 146, in top
    self._validate_time_filter(time_filter)
  File "C:\Python310\lib\site-packages\praw\models\listing\mixins\base.py", line 26, in _validate_time_filter
    raise ValueError(f"'time_filter' must be one of: {valid_time_filters}")
ValueError: 'time_filter' must be one of: 'all', 'month', 'hour', 'year', 'week', 'day'
2023-06-10 19:01:07,966 | INFO: 127.0.0.1 - - [10/Jun/2023 19:01:07] "[35m[1mGET /topsubs/predict HTTP/1.1[0m" 500 -
2023-06-10 19:02:06,583 | ERROR: Exception on /topsubs/predict [GET]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 37, in get
    subs=redditbot.getSubmissionAllSubs(time)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\redditbot.py", line 51, in getSubmissionAllSubs
    top_posts = subreddit.top(time_filter=time_period, limit=5)
  File "C:\Python310\lib\site-packages\praw\util\deprecate_args.py", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File "C:\Python310\lib\site-packages\praw\models\listing\mixins\base.py", line 146, in top
    self._validate_time_filter(time_filter)
  File "C:\Python310\lib\site-packages\praw\models\listing\mixins\base.py", line 26, in _validate_time_filter
    raise ValueError(f"'time_filter' must be one of: {valid_time_filters}")
ValueError: 'time_filter' must be one of: 'all', 'month', 'hour', 'year', 'week', 'day'
2023-06-10 19:02:06,584 | INFO: 127.0.0.1 - - [10/Jun/2023 19:02:06] "[35m[1mGET /topsubs/predict HTTP/1.1[0m" 500 -
2023-06-10 19:02:24,569 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-10 19:02:24,569 | DEBUG: Data: None
2023-06-10 19:02:24,569 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-10 19:02:24,921 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 5257
2023-06-10 19:02:24,923 | DEBUG: Response: 200 (5257 bytes)
2023-06-10 19:02:24,925 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/145zl1r/
2023-06-10 19:02:24,925 | DEBUG: Data: None
2023-06-10 19:02:24,925 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 19:02:25,283 | DEBUG: https://oauth.reddit.com:443 "GET /comments/145zl1r/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3050
2023-06-10 19:02:25,284 | DEBUG: Response: 200 (3050 bytes)
2023-06-10 19:02:25,285 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14606wm/
2023-06-10 19:02:25,285 | DEBUG: Data: None
2023-06-10 19:02:25,285 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 19:02:25,585 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14606wm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2569
2023-06-10 19:02:25,588 | DEBUG: Response: 200 (2569 bytes)
2023-06-10 19:02:25,588 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/145zm8m/
2023-06-10 19:02:25,588 | DEBUG: Data: None
2023-06-10 19:02:25,588 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 19:02:25,950 | DEBUG: https://oauth.reddit.com:443 "GET /comments/145zm8m/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5075
2023-06-10 19:02:25,951 | DEBUG: Response: 200 (5075 bytes)
2023-06-10 19:02:25,955 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/145zdqe/
2023-06-10 19:02:25,955 | DEBUG: Data: None
2023-06-10 19:02:25,955 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 19:02:26,247 | DEBUG: https://oauth.reddit.com:443 "GET /comments/145zdqe/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1668
2023-06-10 19:02:26,248 | DEBUG: Response: 200 (1668 bytes)
2023-06-10 19:02:26,248 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/1460a2z/
2023-06-10 19:02:26,248 | DEBUG: Data: None
2023-06-10 19:02:26,248 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 19:02:26,609 | DEBUG: https://oauth.reddit.com:443 "GET /comments/1460a2z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3062
2023-06-10 19:02:26,610 | DEBUG: Response: 200 (3062 bytes)
2023-06-10 19:02:26,611 | INFO: 127.0.0.1 - - [10/Jun/2023 19:02:26] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-10 19:03:13,157 | INFO: 127.0.0.1 - - [10/Jun/2023 19:03:13] "GET /predict HTTP/1.1" 200 -
2023-06-10 19:04:24,998 | INFO: 127.0.0.1 - - [10/Jun/2023 19:04:24] "GET /predict HTTP/1.1" 200 -
2023-06-10 19:04:26,111 | INFO: 127.0.0.1 - - [10/Jun/2023 19:04:26] "GET /predict HTTP/1.1" 200 -
2023-06-10 19:05:14,300 | INFO: 127.0.0.1 - - [10/Jun/2023 19:05:14] "GET /predict HTTP/1.1" 200 -
2023-06-10 19:05:42,828 | INFO: 127.0.0.1 - - [10/Jun/2023 19:05:42] "GET / HTTP/1.1" 200 -
2023-06-10 19:05:51,609 | INFO: 127.0.0.1 - - [10/Jun/2023 19:05:51] "GET /predict HTTP/1.1" 200 -
2023-06-10 19:07:21,399 | INFO: 127.0.0.1 - - [10/Jun/2023 19:07:21] "GET /predict HTTP/1.1" 200 -
2023-06-10 19:07:23,559 | INFO: 127.0.0.1 - - [10/Jun/2023 19:07:23] "GET /predict HTTP/1.1" 200 -
2023-06-10 19:07:24,739 | INFO: 127.0.0.1 - - [10/Jun/2023 19:07:24] "GET /predict HTTP/1.1" 200 -
2023-06-10 19:07:37,502 | INFO: Adding job tentatively -- it will be properly scheduled when the scheduler starts
2023-06-10 19:07:37,503 | INFO: Added job "streamTickers" to job store "default"
2023-06-10 19:07:37,503 | INFO: Scheduler started
2023-06-10 19:07:37,504 | DEBUG: Looking for jobs to run
2023-06-10 19:07:37,504 | DEBUG: Next wakeup is due at 2023-06-10 19:52:37.501256+05:30 (in 2699.996985 seconds)
2023-06-10 19:07:37,504 | DEBUG: Stream Started
2023-06-10 19:07:40,255 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-06-10 19:07:40,255 | INFO: [33mPress CTRL+C to quit[0m
2023-06-10 19:07:43,731 | INFO: 127.0.0.1 - - [10/Jun/2023 19:07:43] "GET /predict HTTP/1.1" 200 -
2023-06-10 19:07:50,866 | INFO: 127.0.0.1 - - [10/Jun/2023 19:07:50] "GET /saveme HTTP/1.1" 200 -
2023-06-10 19:09:02,819 | INFO: 127.0.0.1 - - [10/Jun/2023 19:09:02] "GET /saveme HTTP/1.1" 200 -
2023-06-10 19:09:30,056 | INFO: Adding job tentatively -- it will be properly scheduled when the scheduler starts
2023-06-10 19:09:30,057 | INFO: Added job "streamTickers" to job store "default"
2023-06-10 19:09:30,057 | INFO: Scheduler started
2023-06-10 19:09:30,058 | DEBUG: Looking for jobs to run
2023-06-10 19:09:30,058 | DEBUG: Next wakeup is due at 2023-06-10 19:54:30.056456+05:30 (in 2699.998266 seconds)
2023-06-10 19:09:30,058 | DEBUG: Stream Started
2023-06-10 19:09:42,609 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-06-10 19:09:42,609 | INFO: [33mPress CTRL+C to quit[0m
2023-06-10 19:10:01,792 | INFO: 127.0.0.1 - - [10/Jun/2023 19:10:01] "GET /saveme HTTP/1.1" 200 -
2023-06-10 19:10:10,177 | INFO: Adding job tentatively -- it will be properly scheduled when the scheduler starts
2023-06-10 19:10:10,178 | INFO: Added job "streamTickers" to job store "default"
2023-06-10 19:10:10,178 | INFO: Scheduler started
2023-06-10 19:10:10,178 | DEBUG: Looking for jobs to run
2023-06-10 19:10:10,178 | DEBUG: Next wakeup is due at 2023-06-10 19:55:10.177287+05:30 (in 2699.998359 seconds)
2023-06-10 19:10:10,179 | DEBUG: Stream Started
2023-06-10 19:10:40,142 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-06-10 19:10:40,142 | INFO: [33mPress CTRL+C to quit[0m
2023-06-10 19:10:44,305 | INFO: 127.0.0.1 - - [10/Jun/2023 19:10:44] "GET /saveme HTTP/1.1" 200 -
2023-06-10 19:10:53,413 | INFO: Adding job tentatively -- it will be properly scheduled when the scheduler starts
2023-06-10 19:10:53,414 | INFO: Added job "streamTickers" to job store "default"
2023-06-10 19:10:53,414 | INFO: Scheduler started
2023-06-10 19:10:53,414 | DEBUG: Looking for jobs to run
2023-06-10 19:10:53,414 | DEBUG: Next wakeup is due at 2023-06-10 19:55:53.413049+05:30 (in 2699.998361 seconds)
2023-06-10 19:10:53,414 | DEBUG: Stream Started
2023-06-10 19:13:31,451 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-06-10 19:13:31,716 | INFO: [33mPress CTRL+C to quit[0m
2023-06-10 19:13:32,535 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-10 19:13:32,535 | DEBUG: Data: None
2023-06-10 19:13:32,535 | DEBUG: Params: {'t': 'day', 'limit': 5, 'raw_json': 1}
2023-06-10 19:13:32,536 | DEBUG: Starting new HTTPS connection (1): www.reddit.com:443
2023-06-10 19:13:33,437 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 669
2023-06-10 19:13:33,454 | DEBUG: Starting new HTTPS connection (1): oauth.reddit.com:443
2023-06-10 19:13:34,007 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=day&limit=5&raw_json=1 HTTP/1.1" 200 5603
2023-06-10 19:13:34,008 | DEBUG: Response: 200 (5603 bytes)
2023-06-10 19:13:34,009 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/1456myv/
2023-06-10 19:13:34,009 | DEBUG: Data: None
2023-06-10 19:13:34,009 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 19:13:35,687 | DEBUG: https://oauth.reddit.com:443 "GET /comments/1456myv/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 61781
2023-06-10 19:13:35,875 | DEBUG: Response: 200 (61781 bytes)
2023-06-10 19:13:35,903 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/145cgcg/
2023-06-10 19:13:35,903 | DEBUG: Data: None
2023-06-10 19:13:35,903 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 19:13:37,898 | DEBUG: https://oauth.reddit.com:443 "GET /comments/145cgcg/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 56793
2023-06-10 19:13:38,092 | DEBUG: Response: 200 (56793 bytes)
2023-06-10 19:13:38,197 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/1457e33/
2023-06-10 19:13:38,197 | DEBUG: Data: None
2023-06-10 19:13:38,197 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 19:13:38,947 | DEBUG: https://oauth.reddit.com:443 "GET /comments/1457e33/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14467
2023-06-10 19:13:39,135 | DEBUG: Response: 200 (14467 bytes)
2023-06-10 19:13:39,146 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/145frnx/
2023-06-10 19:13:39,147 | DEBUG: Data: None
2023-06-10 19:13:39,147 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 19:13:41,363 | DEBUG: https://oauth.reddit.com:443 "GET /comments/145frnx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 60514
2023-06-10 19:13:41,556 | DEBUG: Response: 200 (60514 bytes)
2023-06-10 19:13:41,597 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/145fmuc/
2023-06-10 19:13:41,597 | DEBUG: Data: None
2023-06-10 19:13:41,598 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-10 19:13:43,522 | DEBUG: https://oauth.reddit.com:443 "GET /comments/145fmuc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 42628
2023-06-10 19:13:43,735 | DEBUG: Response: 200 (42628 bytes)
2023-06-10 19:13:43,763 | INFO: 127.0.0.1 - - [10/Jun/2023 19:13:43] "GET /saveme HTTP/1.1" 200 -
2023-06-10 19:13:52,967 | INFO: Adding job tentatively -- it will be properly scheduled when the scheduler starts
2023-06-10 19:13:52,973 | INFO: Added job "streamTickers" to job store "default"
2023-06-10 19:13:52,973 | INFO: Scheduler started
2023-06-10 19:13:52,973 | DEBUG: Looking for jobs to run
2023-06-10 19:13:52,973 | DEBUG: Stream Started
2023-06-10 19:13:52,973 | DEBUG: Next wakeup is due at 2023-06-10 19:58:52.967543+05:30 (in 2699.994307 seconds)
2023-06-30 15:36:00,981 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-06-30 15:36:01,027 | INFO: [33mPress CTRL+C to quit[0m
2023-06-30 15:46:32,376 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 15:46:32,377 | DEBUG: Data: None
2023-06-30 15:46:32,718 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 15:46:32,726 | DEBUG: Starting new HTTPS connection (1): www.reddit.com:443
2023-06-30 15:46:34,753 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 667
2023-06-30 15:46:34,756 | DEBUG: Starting new HTTPS connection (1): oauth.reddit.com:443
2023-06-30 15:46:36,330 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 6665
2023-06-30 15:46:36,332 | DEBUG: Response: 200 (6665 bytes)
2023-06-30 15:46:36,339 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mvpxz/
2023-06-30 15:46:36,339 | DEBUG: Data: None
2023-06-30 15:46:36,339 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 15:46:36,651 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mvpxz/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3648
2023-06-30 15:46:36,653 | DEBUG: Response: 200 (3648 bytes)
2023-06-30 15:46:36,656 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mvm2m/
2023-06-30 15:46:36,656 | DEBUG: Data: None
2023-06-30 15:46:36,656 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 15:46:36,975 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mvm2m/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6841
2023-06-30 15:46:36,977 | DEBUG: Response: 200 (6841 bytes)
2023-06-30 15:46:36,978 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwcx1/
2023-06-30 15:46:36,978 | DEBUG: Data: None
2023-06-30 15:46:36,978 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 15:46:37,330 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwcx1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2081
2023-06-30 15:46:37,332 | DEBUG: Response: 200 (2081 bytes)
2023-06-30 15:46:37,333 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwcvk/
2023-06-30 15:46:37,333 | DEBUG: Data: None
2023-06-30 15:46:37,333 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 15:46:37,635 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwcvk/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1635
2023-06-30 15:46:37,637 | DEBUG: Response: 200 (1635 bytes)
2023-06-30 15:46:37,638 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mw5sl/
2023-06-30 15:46:37,638 | DEBUG: Data: None
2023-06-30 15:46:37,638 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 15:46:37,967 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mw5sl/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2406
2023-06-30 15:46:37,969 | DEBUG: Response: 200 (2406 bytes)
2023-06-30 15:46:37,974 | INFO: 127.0.0.1 - - [30/Jun/2023 15:46:37] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 15:46:51,642 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-06-30 15:46:51,643 | DEBUG: Data: None
2023-06-30 15:46:51,643 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-06-30 15:46:52,016 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6747
2023-06-30 15:46:52,017 | DEBUG: Response: 200 (6747 bytes)
2023-06-30 15:46:52,018 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14m91j1/
2023-06-30 15:46:52,018 | DEBUG: Data: None
2023-06-30 15:46:52,018 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 15:46:52,379 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14m91j1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4152
2023-06-30 15:46:52,471 | DEBUG: Response: 200 (4152 bytes)
2023-06-30 15:46:52,477 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-06-30 15:46:52,477 | DEBUG: Data: None
2023-06-30 15:46:52,477 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 15:46:52,809 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1799
2023-06-30 15:46:52,811 | DEBUG: Response: 200 (1799 bytes)
2023-06-30 15:46:52,814 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14m7j22/
2023-06-30 15:46:52,815 | DEBUG: Data: None
2023-06-30 15:46:52,815 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 15:46:53,151 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14m7j22/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5014
2023-06-30 15:46:53,154 | DEBUG: Response: 200 (5014 bytes)
2023-06-30 15:46:53,157 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-06-30 15:46:53,158 | DEBUG: Data: None
2023-06-30 15:46:53,158 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 15:46:53,488 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4437
2023-06-30 15:46:53,490 | DEBUG: Response: 200 (4437 bytes)
2023-06-30 15:46:53,493 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-06-30 15:46:53,494 | DEBUG: Data: None
2023-06-30 15:46:53,494 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 15:46:53,850 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3746
2023-06-30 15:46:53,851 | DEBUG: Response: 200 (3746 bytes)
2023-06-30 15:46:53,852 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-06-30 15:46:53,852 | DEBUG: Data: None
2023-06-30 15:46:53,852 | DEBUG: Params: {'q': 'APPL', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-06-30 15:46:54,609 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=APPL&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 7423
2023-06-30 15:46:54,613 | DEBUG: Response: 200 (7423 bytes)
2023-06-30 15:46:54,614 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14m1hah/
2023-06-30 15:46:54,615 | DEBUG: Data: None
2023-06-30 15:46:54,615 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 15:46:54,975 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14m1hah/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3293
2023-06-30 15:46:54,976 | DEBUG: Response: 200 (3293 bytes)
2023-06-30 15:46:54,977 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mr848/
2023-06-30 15:46:54,977 | DEBUG: Data: None
2023-06-30 15:46:54,977 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 15:46:55,391 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mr848/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7559
2023-06-30 15:46:55,392 | DEBUG: Response: 200 (7559 bytes)
2023-06-30 15:46:55,394 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mqhpt/
2023-06-30 15:46:55,394 | DEBUG: Data: None
2023-06-30 15:46:55,394 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 15:46:55,768 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mqhpt/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4378
2023-06-30 15:46:55,769 | DEBUG: Response: 200 (4378 bytes)
2023-06-30 15:46:55,773 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14m728j/
2023-06-30 15:46:55,773 | DEBUG: Data: None
2023-06-30 15:46:55,773 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 15:46:56,201 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14m728j/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9089
2023-06-30 15:46:56,204 | DEBUG: Response: 200 (9089 bytes)
2023-06-30 15:46:56,208 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14m7yoj/
2023-06-30 15:46:56,209 | DEBUG: Data: None
2023-06-30 15:46:56,209 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 15:46:56,529 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14m7yoj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4000
2023-06-30 15:46:56,530 | DEBUG: Response: 200 (4000 bytes)
2023-06-30 15:46:56,531 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-06-30 15:46:56,531 | DEBUG: Data: None
2023-06-30 15:46:56,531 | DEBUG: Params: {'q': 'GME', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-06-30 15:46:56,863 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=GME&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-06-30 15:46:56,864 | DEBUG: Response: 200 (136 bytes)
2023-06-30 15:46:56,864 | INFO: 127.0.0.1 - - [30/Jun/2023 15:46:56] "GET /watchlist?tickSelector%5B0%5D=TSLA&tickSelector%5B1%5D=APPL&tickSelector%5B2%5D=GME HTTP/1.1" 200 -
2023-06-30 15:50:47,901 | INFO: 127.0.0.1 - - [30/Jun/2023 15:50:47] "[33mPUT /accnts HTTP/1.1[0m" 404 -
2023-06-30 15:51:57,930 | INFO: 127.0.0.1 - - [30/Jun/2023 15:51:57] "[33mPUT /accnts HTTP/1.1[0m" 404 -
2023-06-30 15:52:28,287 | INFO: 127.0.0.1 - - [30/Jun/2023 15:52:28] "[33mPUT /accnts HTTP/1.1[0m" 404 -
2023-06-30 15:53:00,942 | ERROR: Exception on /accnt [PUT]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 47, in put
    if(data['option']==1):
TypeError: list indices must be integers or slices, not str
2023-06-30 15:53:01,123 | INFO: 127.0.0.1 - - [30/Jun/2023 15:53:01] "[35m[1mPUT /accnt HTTP/1.1[0m" 500 -
2023-06-30 15:53:47,636 | INFO: 127.0.0.1 - - [30/Jun/2023 15:53:47] "PUT /accnt HTTP/1.1" 200 -
2023-06-30 15:54:05,415 | INFO: 127.0.0.1 - - [30/Jun/2023 15:54:05] "PUT /accnt HTTP/1.1" 200 -
2023-06-30 16:08:09,911 | INFO: 127.0.0.1 - - [30/Jun/2023 16:08:09] "[33mGET /api/watchlist?tickSelector%5B0%5D=TSLA&tickSelector%5B1%5D=APPL&tickSelector%5B2%5D=GME HTTP/1.1[0m" 404 -
2023-06-30 16:08:20,090 | INFO: 127.0.0.1 - - [30/Jun/2023 16:08:20] "[33mGET /api/topsubs/hour HTTP/1.1[0m" 404 -
2023-06-30 16:08:38,971 | INFO: 127.0.0.1 - - [30/Jun/2023 16:08:38] "[33mGET /api/topsubs/hour HTTP/1.1[0m" 404 -
2023-06-30 16:08:47,374 | INFO: 127.0.0.1 - - [30/Jun/2023 16:08:47] "[33mPUT /api/accnt HTTP/1.1[0m" 404 -
2023-06-30 16:08:51,882 | INFO: 127.0.0.1 - - [30/Jun/2023 16:08:51] "[33mPUT /api/accnt HTTP/1.1[0m" 404 -
2023-06-30 16:09:04,973 | INFO: 127.0.0.1 - - [30/Jun/2023 16:09:04] "[33mGET /api/watchlist?tickSelector%5B0%5D=TSLA&tickSelector%5B1%5D=APPL&tickSelector%5B2%5D=GME HTTP/1.1[0m" 404 -
2023-06-30 16:09:07,970 | INFO: 127.0.0.1 - - [30/Jun/2023 16:09:07] "[33mGET /api/watchlist?tickSelector%5B0%5D=TSLA&tickSelector%5B1%5D=APPL&tickSelector%5B2%5D=GME HTTP/1.1[0m" 404 -
2023-06-30 16:10:03,129 | INFO: 127.0.0.1 - - [30/Jun/2023 16:10:03] "[33mGET /api/watchlist?tickSelector%5B0%5D=TSLA&tickSelector%5B1%5D=APPL&tickSelector%5B2%5D=GME HTTP/1.1[0m" 404 -
2023-06-30 16:10:12,769 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 16:10:12,770 | DEBUG: Data: None
2023-06-30 16:10:12,770 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 16:10:12,776 | DEBUG: Resetting dropped connection: oauth.reddit.com
2023-06-30 16:10:13,486 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 4067
2023-06-30 16:10:13,488 | DEBUG: Response: 200 (4067 bytes)
2023-06-30 16:10:13,490 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mw4uz/
2023-06-30 16:10:13,490 | DEBUG: Data: None
2023-06-30 16:10:13,490 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 16:10:14,145 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mw4uz/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14420
2023-06-30 16:10:14,327 | DEBUG: Response: 200 (14420 bytes)
2023-06-30 16:10:14,431 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwqpi/
2023-06-30 16:10:14,432 | DEBUG: Data: None
2023-06-30 16:10:14,432 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 16:10:14,736 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwqpi/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2268
2023-06-30 16:10:14,742 | DEBUG: Response: 200 (2268 bytes)
2023-06-30 16:10:14,744 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwp8t/
2023-06-30 16:10:14,745 | DEBUG: Data: None
2023-06-30 16:10:14,745 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 16:10:15,057 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwp8t/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2124
2023-06-30 16:10:15,060 | DEBUG: Response: 200 (2124 bytes)
2023-06-30 16:10:15,062 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwol6/
2023-06-30 16:10:15,063 | DEBUG: Data: None
2023-06-30 16:10:15,063 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 16:10:15,414 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwol6/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2443
2023-06-30 16:10:15,422 | DEBUG: Response: 200 (2443 bytes)
2023-06-30 16:10:15,426 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwlds/
2023-06-30 16:10:15,427 | DEBUG: Data: None
2023-06-30 16:10:15,427 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 16:10:15,758 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwlds/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1940
2023-06-30 16:10:15,761 | DEBUG: Response: 200 (1940 bytes)
2023-06-30 16:10:15,769 | INFO: 127.0.0.1 - - [30/Jun/2023 16:10:15] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 16:10:20,344 | INFO: 127.0.0.1 - - [30/Jun/2023 16:10:20] "[33mGET /api/watchlist?tickSelector%5B0%5D=TSLA&tickSelector%5B1%5D=APPL&tickSelector%5B2%5D=GME HTTP/1.1[0m" 404 -
2023-06-30 16:10:38,819 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-06-30 16:10:38,820 | DEBUG: Data: None
2023-06-30 16:10:38,820 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-06-30 16:10:39,415 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 7956
2023-06-30 16:10:39,506 | DEBUG: Response: 200 (7956 bytes)
2023-06-30 16:10:39,511 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14m91j1/
2023-06-30 16:10:39,512 | DEBUG: Data: None
2023-06-30 16:10:39,512 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 16:10:39,895 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14m91j1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4152
2023-06-30 16:10:39,899 | DEBUG: Response: 200 (4152 bytes)
2023-06-30 16:10:39,903 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-06-30 16:10:39,903 | DEBUG: Data: None
2023-06-30 16:10:39,903 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 16:10:40,242 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-06-30 16:10:40,244 | DEBUG: Response: 200 (1801 bytes)
2023-06-30 16:10:40,244 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-06-30 16:10:40,245 | DEBUG: Data: None
2023-06-30 16:10:40,245 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 16:10:40,642 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5126
2023-06-30 16:10:40,644 | DEBUG: Response: 200 (5126 bytes)
2023-06-30 16:10:40,646 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14m7j22/
2023-06-30 16:10:40,646 | DEBUG: Data: None
2023-06-30 16:10:40,646 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 16:10:40,993 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14m7j22/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5014
2023-06-30 16:10:40,996 | DEBUG: Response: 200 (5014 bytes)
2023-06-30 16:10:40,998 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-06-30 16:10:40,998 | DEBUG: Data: None
2023-06-30 16:10:40,998 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 16:10:41,456 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4438
2023-06-30 16:10:41,457 | DEBUG: Response: 200 (4438 bytes)
2023-06-30 16:10:41,458 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-06-30 16:10:41,458 | DEBUG: Data: None
2023-06-30 16:10:41,458 | DEBUG: Params: {'q': 'APPL', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-06-30 16:10:41,886 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=APPL&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 7402
2023-06-30 16:10:41,892 | DEBUG: Response: 200 (7402 bytes)
2023-06-30 16:10:41,892 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14m1hah/
2023-06-30 16:10:41,892 | DEBUG: Data: None
2023-06-30 16:10:41,893 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 16:10:42,228 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14m1hah/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3519
2023-06-30 16:10:42,229 | DEBUG: Response: 200 (3519 bytes)
2023-06-30 16:10:42,230 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mr848/
2023-06-30 16:10:42,230 | DEBUG: Data: None
2023-06-30 16:10:42,230 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 16:10:42,644 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mr848/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7538
2023-06-30 16:10:42,647 | DEBUG: Response: 200 (7538 bytes)
2023-06-30 16:10:42,650 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mqhpt/
2023-06-30 16:10:42,650 | DEBUG: Data: None
2023-06-30 16:10:42,650 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 16:10:42,997 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mqhpt/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4935
2023-06-30 16:10:42,998 | DEBUG: Response: 200 (4935 bytes)
2023-06-30 16:10:42,999 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14m728j/
2023-06-30 16:10:43,000 | DEBUG: Data: None
2023-06-30 16:10:43,000 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 16:10:43,439 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14m728j/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9091
2023-06-30 16:10:43,440 | DEBUG: Response: 200 (9091 bytes)
2023-06-30 16:10:43,443 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14m7yoj/
2023-06-30 16:10:43,443 | DEBUG: Data: None
2023-06-30 16:10:43,443 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 16:10:43,766 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14m7yoj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3999
2023-06-30 16:10:43,767 | DEBUG: Response: 200 (3999 bytes)
2023-06-30 16:10:43,768 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-06-30 16:10:43,768 | DEBUG: Data: None
2023-06-30 16:10:43,768 | DEBUG: Params: {'q': 'GME', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-06-30 16:10:44,242 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=GME&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-06-30 16:10:44,242 | DEBUG: Response: 200 (136 bytes)
2023-06-30 16:10:44,243 | INFO: 127.0.0.1 - - [30/Jun/2023 16:10:44] "GET /watchlist?tickSelector%5B0%5D=TSLA&tickSelector%5B1%5D=APPL&tickSelector%5B2%5D=GME HTTP/1.1" 200 -
2023-06-30 16:10:48,696 | INFO: 127.0.0.1 - - [30/Jun/2023 16:10:48] "PUT /accnt HTTP/1.1" 200 -
2023-06-30 16:10:59,858 | INFO: 127.0.0.1 - - [30/Jun/2023 16:10:59] "PUT /accnt HTTP/1.1" 200 -
2023-06-30 16:35:16,443 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-06-30 16:35:16,800 | DEBUG: Data: None
2023-06-30 16:35:16,800 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-06-30 16:35:16,820 | DEBUG: Resetting dropped connection: oauth.reddit.com
2023-06-30 16:35:17,335 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 7932
2023-06-30 16:35:17,340 | DEBUG: Response: 200 (7932 bytes)
2023-06-30 16:35:17,343 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14m91j1/
2023-06-30 16:35:17,343 | DEBUG: Data: None
2023-06-30 16:35:17,344 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 16:35:17,688 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14m91j1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4152
2023-06-30 16:35:17,692 | DEBUG: Response: 200 (4152 bytes)
2023-06-30 16:35:17,693 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-06-30 16:35:17,693 | DEBUG: Data: None
2023-06-30 16:35:17,693 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 16:35:18,026 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-06-30 16:35:18,027 | DEBUG: Response: 200 (1801 bytes)
2023-06-30 16:35:18,028 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14m7j22/
2023-06-30 16:35:18,028 | DEBUG: Data: None
2023-06-30 16:35:18,028 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 16:35:18,397 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14m7j22/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5014
2023-06-30 16:35:18,398 | DEBUG: Response: 200 (5014 bytes)
2023-06-30 16:35:18,400 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-06-30 16:35:18,400 | DEBUG: Data: None
2023-06-30 16:35:18,400 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 16:35:18,765 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6245
2023-06-30 16:35:18,767 | DEBUG: Response: 200 (6245 bytes)
2023-06-30 16:35:18,770 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-06-30 16:35:18,770 | DEBUG: Data: None
2023-06-30 16:35:18,770 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 16:35:19,101 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4436
2023-06-30 16:35:19,102 | DEBUG: Response: 200 (4436 bytes)
2023-06-30 16:35:19,102 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-06-30 16:35:19,103 | DEBUG: Data: None
2023-06-30 16:35:19,103 | DEBUG: Params: {'q': 'APPL', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-06-30 16:35:19,523 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=APPL&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 10158
2023-06-30 16:35:19,523 | DEBUG: Response: 200 (10158 bytes)
2023-06-30 16:35:19,527 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mr848/
2023-06-30 16:35:19,527 | DEBUG: Data: None
2023-06-30 16:35:19,527 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 16:35:19,922 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mr848/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7792
2023-06-30 16:35:19,923 | DEBUG: Response: 200 (7792 bytes)
2023-06-30 16:35:19,926 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14m728j/
2023-06-30 16:35:19,926 | DEBUG: Data: None
2023-06-30 16:35:19,926 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 16:35:20,364 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14m728j/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9095
2023-06-30 16:35:20,365 | DEBUG: Response: 200 (9095 bytes)
2023-06-30 16:35:20,368 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14m7yoj/
2023-06-30 16:35:20,368 | DEBUG: Data: None
2023-06-30 16:35:20,368 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 16:35:20,688 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14m7yoj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3998
2023-06-30 16:35:20,689 | DEBUG: Response: 200 (3998 bytes)
2023-06-30 16:35:20,689 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14m6x92/
2023-06-30 16:35:20,689 | DEBUG: Data: None
2023-06-30 16:35:20,690 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 16:35:21,018 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14m6x92/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6667
2023-06-30 16:35:21,019 | DEBUG: Response: 200 (6667 bytes)
2023-06-30 16:35:21,021 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14m7ezp/
2023-06-30 16:35:21,022 | DEBUG: Data: None
2023-06-30 16:35:21,022 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 16:35:21,355 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14m7ezp/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1964
2023-06-30 16:35:21,356 | DEBUG: Response: 200 (1964 bytes)
2023-06-30 16:35:21,356 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-06-30 16:35:21,357 | DEBUG: Data: None
2023-06-30 16:35:21,357 | DEBUG: Params: {'q': 'GME', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-06-30 16:35:21,697 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=GME&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-06-30 16:35:21,697 | DEBUG: Response: 200 (136 bytes)
2023-06-30 16:35:21,699 | INFO: 127.0.0.1 - - [30/Jun/2023 16:35:21] "GET /watchlist?tickSelector%5B0%5D=TSLA&tickSelector%5B1%5D=APPL&tickSelector%5B2%5D=GME HTTP/1.1" 200 -
2023-06-30 16:35:21,872 | INFO: 127.0.0.1 - - [30/Jun/2023 16:35:21] "[33mGET /favicon.ico HTTP/1.1[0m" 404 -
2023-06-30 19:24:20,328 | INFO: Adding job tentatively -- it will be properly scheduled when the scheduler starts
2023-06-30 19:24:20,336 | INFO: Added job "streamTickers" to job store "default"
2023-06-30 19:24:20,336 | INFO: Scheduler started
2023-06-30 19:24:20,336 | DEBUG: Looking for jobs to run
2023-06-30 19:24:20,336 | DEBUG: Next wakeup is due at 2023-06-30 20:09:20.327148+05:30 (in 2699.990290 seconds)
2023-06-30 19:24:20,337 | DEBUG: Stream Started
2023-06-30 19:24:30,195 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-06-30 19:24:30,195 | INFO: [33mPress CTRL+C to quit[0m
2023-06-30 19:24:41,445 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-06-30 19:24:41,445 | DEBUG: Data: None
2023-06-30 19:24:41,445 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-06-30 19:24:41,447 | DEBUG: Starting new HTTPS connection (1): www.reddit.com:443
2023-06-30 19:24:42,471 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 668
2023-06-30 19:24:42,473 | DEBUG: Starting new HTTPS connection (1): oauth.reddit.com:443
2023-06-30 19:24:43,075 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 7947
2023-06-30 19:24:43,077 | DEBUG: Response: 200 (7947 bytes)
2023-06-30 19:24:43,079 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14m91j1/
2023-06-30 19:24:43,079 | DEBUG: Data: None
2023-06-30 19:24:43,079 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 19:24:43,472 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14m91j1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4154
2023-06-30 19:24:43,476 | DEBUG: Response: 200 (4154 bytes)
2023-06-30 19:24:43,477 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-06-30 19:24:43,477 | DEBUG: Data: None
2023-06-30 19:24:43,477 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 19:24:43,825 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-06-30 19:24:43,826 | DEBUG: Response: 200 (1801 bytes)
2023-06-30 19:24:43,826 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14m7j22/
2023-06-30 19:24:43,826 | DEBUG: Data: None
2023-06-30 19:24:43,826 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 19:24:44,358 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14m7j22/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5015
2023-06-30 19:24:44,359 | DEBUG: Response: 200 (5015 bytes)
2023-06-30 19:24:44,360 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-06-30 19:24:44,360 | DEBUG: Data: None
2023-06-30 19:24:44,360 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 19:24:44,707 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4440
2023-06-30 19:24:44,708 | DEBUG: Response: 200 (4440 bytes)
2023-06-30 19:24:44,711 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-06-30 19:24:44,711 | DEBUG: Data: None
2023-06-30 19:24:44,711 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 19:24:45,211 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7674
2023-06-30 19:24:45,214 | DEBUG: Response: 200 (7674 bytes)
2023-06-30 19:24:45,218 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-06-30 19:24:45,219 | DEBUG: Data: None
2023-06-30 19:24:45,219 | DEBUG: Params: {'q': 'APPL', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-06-30 19:24:45,636 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=APPL&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 10773
2023-06-30 19:24:45,641 | DEBUG: Response: 200 (10773 bytes)
2023-06-30 19:24:45,642 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14my829/
2023-06-30 19:24:45,643 | DEBUG: Data: None
2023-06-30 19:24:45,643 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 19:24:46,215 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14my829/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7350
2023-06-30 19:24:46,217 | DEBUG: Response: 200 (7350 bytes)
2023-06-30 19:24:46,220 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mr848/
2023-06-30 19:24:46,220 | DEBUG: Data: None
2023-06-30 19:24:46,220 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 19:24:46,713 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mr848/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10852
2023-06-30 19:24:46,714 | DEBUG: Response: 200 (10852 bytes)
2023-06-30 19:24:46,719 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14m728j/
2023-06-30 19:24:46,719 | DEBUG: Data: None
2023-06-30 19:24:46,719 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 19:24:47,139 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14m728j/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8918
2023-06-30 19:24:47,142 | DEBUG: Response: 200 (8918 bytes)
2023-06-30 19:24:47,146 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14m7yoj/
2023-06-30 19:24:47,146 | DEBUG: Data: None
2023-06-30 19:24:47,146 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 19:24:47,525 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14m7yoj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4000
2023-06-30 19:24:47,526 | DEBUG: Response: 200 (4000 bytes)
2023-06-30 19:24:47,527 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14m6x92/
2023-06-30 19:24:47,527 | DEBUG: Data: None
2023-06-30 19:24:47,527 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 19:24:47,897 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14m6x92/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6667
2023-06-30 19:24:47,898 | DEBUG: Response: 200 (6667 bytes)
2023-06-30 19:24:47,899 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-06-30 19:24:47,899 | DEBUG: Data: None
2023-06-30 19:24:47,900 | DEBUG: Params: {'q': 'GME', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-06-30 19:24:48,214 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=GME&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-06-30 19:24:48,215 | DEBUG: Response: 200 (136 bytes)
2023-06-30 19:24:48,215 | INFO: 127.0.0.1 - - [30/Jun/2023 19:24:48] "GET /api/watchlist?tickSelector%5B0%5D=TSLA&tickSelector%5B1%5D=APPL&tickSelector%5B2%5D=GME HTTP/1.1" 200 -
2023-06-30 19:25:00,595 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 19:25:00,596 | DEBUG: Data: None
2023-06-30 19:25:00,596 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 19:25:01,148 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 6757
2023-06-30 19:25:01,149 | DEBUG: Response: 200 (6757 bytes)
2023-06-30 19:25:01,151 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzs9z/
2023-06-30 19:25:01,151 | DEBUG: Data: None
2023-06-30 19:25:01,151 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 19:25:01,590 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzs9z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5250
2023-06-30 19:25:01,591 | DEBUG: Response: 200 (5250 bytes)
2023-06-30 19:25:01,593 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n0mg0/
2023-06-30 19:25:01,593 | DEBUG: Data: None
2023-06-30 19:25:01,593 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 19:25:01,918 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n0mg0/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2323
2023-06-30 19:25:01,919 | DEBUG: Response: 200 (2323 bytes)
2023-06-30 19:25:01,920 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n0sqr/
2023-06-30 19:25:01,920 | DEBUG: Data: None
2023-06-30 19:25:01,920 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 19:25:02,482 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n0sqr/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3215
2023-06-30 19:25:02,483 | DEBUG: Response: 200 (3215 bytes)
2023-06-30 19:25:02,484 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n0f17/
2023-06-30 19:25:02,484 | DEBUG: Data: None
2023-06-30 19:25:02,484 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 19:25:02,879 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n0f17/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4490
2023-06-30 19:25:02,880 | DEBUG: Response: 200 (4490 bytes)
2023-06-30 19:25:02,881 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n07ob/
2023-06-30 19:25:02,881 | DEBUG: Data: None
2023-06-30 19:25:02,881 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 19:25:03,277 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n07ob/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2661
2023-06-30 19:25:03,278 | DEBUG: Response: 200 (2661 bytes)
2023-06-30 19:25:03,280 | INFO: 127.0.0.1 - - [30/Jun/2023 19:25:03] "GET /api/topsubs/hour HTTP/1.1" 200 -
2023-06-30 20:15:26,353 | INFO: 127.0.0.1 - - [30/Jun/2023 20:15:26] "[33mGET / HTTP/1.1[0m" 404 -
2023-06-30 20:15:26,496 | INFO: 127.0.0.1 - - [30/Jun/2023 20:15:26] "[33mGET /favicon.ico HTTP/1.1[0m" 404 -
2023-06-30 20:15:33,511 | INFO: 127.0.0.1 - - [30/Jun/2023 20:15:33] "[33mGET /saveme HTTP/1.1[0m" 404 -
2023-06-30 20:15:42,175 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 20:15:42,176 | DEBUG: Data: None
2023-06-30 20:15:42,176 | DEBUG: Params: {'t': 'day', 'limit': 5, 'raw_json': 1}
2023-06-30 20:15:42,193 | DEBUG: Resetting dropped connection: oauth.reddit.com
2023-06-30 20:15:42,954 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=day&limit=5&raw_json=1 HTTP/1.1" 200 11168
2023-06-30 20:15:42,956 | DEBUG: Response: 200 (11168 bytes)
2023-06-30 20:15:42,962 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mo2g0/
2023-06-30 20:15:42,962 | DEBUG: Data: None
2023-06-30 20:15:42,962 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 20:15:46,140 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mo2g0/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 77637
2023-06-30 20:15:46,341 | DEBUG: Response: 200 (77637 bytes)
2023-06-30 20:15:46,484 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14m93i9/
2023-06-30 20:15:46,484 | DEBUG: Data: None
2023-06-30 20:15:46,484 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 20:15:48,188 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14m93i9/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 70260
2023-06-30 20:15:48,371 | DEBUG: Response: 200 (70260 bytes)
2023-06-30 20:15:48,392 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mmxw2/
2023-06-30 20:15:48,392 | DEBUG: Data: None
2023-06-30 20:15:48,392 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 20:15:49,823 | INFO: 127.0.0.1 - - [30/Jun/2023 20:15:49] "[33mGET /api/topsubs HTTP/1.1[0m" 404 -
2023-06-30 20:15:49,866 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mmxw2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 38967
2023-06-30 20:15:49,878 | DEBUG: Response: 200 (38967 bytes)
2023-06-30 20:15:49,901 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mavc7/
2023-06-30 20:15:49,901 | DEBUG: Data: None
2023-06-30 20:15:49,901 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 20:15:51,243 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mavc7/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 36300
2023-06-30 20:15:51,247 | DEBUG: Response: 200 (36300 bytes)
2023-06-30 20:15:51,261 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mc0cq/
2023-06-30 20:15:51,261 | DEBUG: Data: None
2023-06-30 20:15:51,261 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 20:15:52,686 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mc0cq/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34534
2023-06-30 20:15:52,693 | DEBUG: Response: 200 (34534 bytes)
2023-06-30 20:15:52,726 | INFO: 127.0.0.1 - - [30/Jun/2023 20:15:52] "GET /api/saveme HTTP/1.1" 200 -
2023-06-30 20:15:58,718 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 20:15:58,718 | DEBUG: Data: None
2023-06-30 20:15:58,718 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 20:15:59,093 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 4956
2023-06-30 20:15:59,093 | DEBUG: Response: 200 (4956 bytes)
2023-06-30 20:15:59,094 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n1h15/
2023-06-30 20:15:59,094 | DEBUG: Data: None
2023-06-30 20:15:59,094 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 20:15:59,410 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n1h15/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3009
2023-06-30 20:15:59,412 | DEBUG: Response: 200 (3009 bytes)
2023-06-30 20:15:59,413 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n1p32/
2023-06-30 20:15:59,413 | DEBUG: Data: None
2023-06-30 20:15:59,413 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 20:15:59,739 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n1p32/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2316
2023-06-30 20:15:59,740 | DEBUG: Response: 200 (2316 bytes)
2023-06-30 20:15:59,740 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n12x7/
2023-06-30 20:15:59,740 | DEBUG: Data: None
2023-06-30 20:15:59,740 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 20:16:00,104 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n12x7/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3199
2023-06-30 20:16:00,105 | DEBUG: Response: 200 (3199 bytes)
2023-06-30 20:16:00,106 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n1r4s/
2023-06-30 20:16:00,106 | DEBUG: Data: None
2023-06-30 20:16:00,106 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 20:16:00,529 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n1r4s/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3853
2023-06-30 20:16:00,530 | DEBUG: Response: 200 (3853 bytes)
2023-06-30 20:16:00,530 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n1fbv/
2023-06-30 20:16:00,531 | DEBUG: Data: None
2023-06-30 20:16:00,531 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 20:16:00,881 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n1fbv/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3190
2023-06-30 20:16:00,884 | DEBUG: Response: 200 (3190 bytes)
2023-06-30 20:16:00,888 | INFO: 127.0.0.1 - - [30/Jun/2023 20:16:00] "GET /api/topsubs/hour HTTP/1.1" 200 -
2023-06-30 20:20:16,782 | INFO: Adding job tentatively -- it will be properly scheduled when the scheduler starts
2023-06-30 20:20:16,786 | INFO: Added job "streamTickers" to job store "default"
2023-06-30 20:20:16,786 | INFO: Scheduler started
2023-06-30 20:20:16,786 | DEBUG: Looking for jobs to run
2023-06-30 20:20:16,786 | DEBUG: Next wakeup is due at 2023-06-30 21:05:16.782899+05:30 (in 2699.996002 seconds)
2023-06-30 20:20:16,786 | DEBUG: Stream Started
2023-06-30 20:20:35,496 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-06-30 20:20:35,497 | INFO: [33mPress CTRL+C to quit[0m
2023-06-30 20:40:04,713 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-06-30 20:40:04,716 | DEBUG: Data: None
2023-06-30 20:40:04,716 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-06-30 20:40:04,726 | DEBUG: Starting new HTTPS connection (1): www.reddit.com:443
2023-06-30 20:40:05,821 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 668
2023-06-30 20:40:05,836 | DEBUG: Starting new HTTPS connection (1): oauth.reddit.com:443
2023-06-30 20:40:06,834 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 7938
2023-06-30 20:40:06,836 | DEBUG: Response: 200 (7938 bytes)
2023-06-30 20:40:06,840 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14m91j1/
2023-06-30 20:40:06,840 | DEBUG: Data: None
2023-06-30 20:40:06,840 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 20:40:07,273 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14m91j1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4154
2023-06-30 20:40:07,274 | DEBUG: Response: 200 (4154 bytes)
2023-06-30 20:40:07,277 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-06-30 20:40:07,277 | DEBUG: Data: None
2023-06-30 20:40:07,277 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 20:40:07,637 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-06-30 20:40:07,638 | DEBUG: Response: 200 (1801 bytes)
2023-06-30 20:40:07,638 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14m7j22/
2023-06-30 20:40:07,638 | DEBUG: Data: None
2023-06-30 20:40:07,638 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 20:40:08,014 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14m7j22/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5014
2023-06-30 20:40:08,017 | DEBUG: Response: 200 (5014 bytes)
2023-06-30 20:40:08,022 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-06-30 20:40:08,023 | DEBUG: Data: None
2023-06-30 20:40:08,023 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 20:40:08,390 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4441
2023-06-30 20:40:08,391 | DEBUG: Response: 200 (4441 bytes)
2023-06-30 20:40:08,392 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-06-30 20:40:08,392 | DEBUG: Data: None
2023-06-30 20:40:08,392 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 20:40:08,877 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8897
2023-06-30 20:40:08,880 | DEBUG: Response: 200 (8897 bytes)
2023-06-30 20:40:08,883 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-06-30 20:40:08,883 | DEBUG: Data: None
2023-06-30 20:40:08,883 | DEBUG: Params: {'q': 'APPL', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-06-30 20:40:09,266 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=APPL&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 11342
2023-06-30 20:40:09,268 | DEBUG: Response: 200 (11342 bytes)
2023-06-30 20:40:09,270 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14my829/
2023-06-30 20:40:09,270 | DEBUG: Data: None
2023-06-30 20:40:09,270 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 20:40:09,911 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14my829/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 11661
2023-06-30 20:40:09,914 | DEBUG: Response: 200 (11661 bytes)
2023-06-30 20:40:09,918 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mr848/
2023-06-30 20:40:09,918 | DEBUG: Data: None
2023-06-30 20:40:09,919 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 20:40:10,979 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mr848/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 12715
2023-06-30 20:40:10,980 | DEBUG: Response: 200 (12715 bytes)
2023-06-30 20:40:10,985 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n0mg0/
2023-06-30 20:40:10,985 | DEBUG: Data: None
2023-06-30 20:40:10,985 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 20:40:11,364 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n0mg0/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4189
2023-06-30 20:40:11,365 | DEBUG: Response: 200 (4189 bytes)
2023-06-30 20:40:11,367 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14m7yoj/
2023-06-30 20:40:11,367 | DEBUG: Data: None
2023-06-30 20:40:11,367 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 20:40:11,731 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14m7yoj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3999
2023-06-30 20:40:11,732 | DEBUG: Response: 200 (3999 bytes)
2023-06-30 20:40:11,734 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14my7gm/
2023-06-30 20:40:11,734 | DEBUG: Data: None
2023-06-30 20:40:11,734 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 20:40:12,070 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14my7gm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5171
2023-06-30 20:40:12,071 | DEBUG: Response: 200 (5171 bytes)
2023-06-30 20:40:12,072 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-06-30 20:40:12,072 | DEBUG: Data: None
2023-06-30 20:40:12,072 | DEBUG: Params: {'q': 'GME', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-06-30 20:40:12,421 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=GME&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-06-30 20:40:12,422 | DEBUG: Response: 200 (136 bytes)
2023-06-30 20:40:12,425 | INFO: 127.0.0.1 - - [30/Jun/2023 20:40:12] "GET /watchlist?tickSelector%5B0%5D=TSLA&tickSelector%5B1%5D=APPL&tickSelector%5B2%5D=GME HTTP/1.1" 200 -
2023-06-30 20:40:17,212 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 20:40:17,212 | DEBUG: Data: None
2023-06-30 20:40:17,213 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 20:40:17,648 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 4995
2023-06-30 20:40:17,649 | DEBUG: Response: 200 (4995 bytes)
2023-06-30 20:40:17,650 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n1p32/
2023-06-30 20:40:17,650 | DEBUG: Data: None
2023-06-30 20:40:17,650 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 20:40:18,014 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n1p32/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2481
2023-06-30 20:40:18,015 | DEBUG: Response: 200 (2481 bytes)
2023-06-30 20:40:18,016 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n1r4s/
2023-06-30 20:40:18,016 | DEBUG: Data: None
2023-06-30 20:40:18,016 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 20:40:18,425 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n1r4s/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4043
2023-06-30 20:40:18,426 | DEBUG: Response: 200 (4043 bytes)
2023-06-30 20:40:18,427 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n2gxh/
2023-06-30 20:40:18,427 | DEBUG: Data: None
2023-06-30 20:40:18,427 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 20:40:18,806 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n2gxh/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3664
2023-06-30 20:40:18,807 | DEBUG: Response: 200 (3664 bytes)
2023-06-30 20:40:18,808 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n2lmi/
2023-06-30 20:40:18,808 | DEBUG: Data: None
2023-06-30 20:40:18,808 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 20:40:19,125 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n2lmi/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3154
2023-06-30 20:40:19,127 | DEBUG: Response: 200 (3154 bytes)
2023-06-30 20:40:19,127 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n2afy/
2023-06-30 20:40:19,127 | DEBUG: Data: None
2023-06-30 20:40:19,127 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 20:40:19,485 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n2afy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3714
2023-06-30 20:40:19,487 | DEBUG: Response: 200 (3714 bytes)
2023-06-30 20:40:19,495 | INFO: 127.0.0.1 - - [30/Jun/2023 20:40:19] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 21:08:56,032 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 21:08:56,033 | DEBUG: Data: None
2023-06-30 21:08:56,034 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 21:08:56,048 | DEBUG: Resetting dropped connection: oauth.reddit.com
2023-06-30 21:08:56,767 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 5647
2023-06-30 21:08:56,776 | DEBUG: Response: 200 (5647 bytes)
2023-06-30 21:08:56,780 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n2gxh/
2023-06-30 21:08:56,780 | DEBUG: Data: None
2023-06-30 21:08:56,780 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 21:08:57,462 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n2gxh/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3825
2023-06-30 21:08:57,479 | DEBUG: Response: 200 (3825 bytes)
2023-06-30 21:08:57,531 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n2lmi/
2023-06-30 21:08:57,904 | DEBUG: Data: None
2023-06-30 21:08:57,904 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 21:08:58,575 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n2lmi/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4005
2023-06-30 21:08:58,580 | DEBUG: Response: 200 (4005 bytes)
2023-06-30 21:08:58,766 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n378b/
2023-06-30 21:08:58,766 | DEBUG: Data: None
2023-06-30 21:08:58,767 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 21:08:59,265 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n378b/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6141
2023-06-30 21:08:59,268 | DEBUG: Response: 200 (6141 bytes)
2023-06-30 21:08:59,389 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n2zad/
2023-06-30 21:08:59,406 | DEBUG: Data: None
2023-06-30 21:08:59,407 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 21:08:59,916 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n2zad/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3834
2023-06-30 21:08:59,916 | DEBUG: Response: 200 (3834 bytes)
2023-06-30 21:08:59,918 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n2saa/
2023-06-30 21:08:59,918 | DEBUG: Data: None
2023-06-30 21:08:59,918 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 21:09:00,247 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n2saa/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3330
2023-06-30 21:09:00,249 | DEBUG: Response: 200 (3330 bytes)
2023-06-30 21:09:00,273 | INFO: 127.0.0.1 - - [30/Jun/2023 21:09:00] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 21:51:01,255 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 21:51:01,255 | DEBUG: Data: None
2023-06-30 21:51:01,255 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 21:51:01,260 | DEBUG: Resetting dropped connection: oauth.reddit.com
2023-06-30 21:51:03,331 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 8338
2023-06-30 21:51:03,336 | DEBUG: Response: 200 (8338 bytes)
2023-06-30 21:51:03,339 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n3dz3/
2023-06-30 21:51:03,340 | DEBUG: Data: None
2023-06-30 21:51:03,340 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 21:51:03,770 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n3dz3/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7194
2023-06-30 21:51:03,777 | DEBUG: Response: 200 (7194 bytes)
2023-06-30 21:51:03,781 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n41la/
2023-06-30 21:51:03,781 | DEBUG: Data: None
2023-06-30 21:51:03,781 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 21:51:04,321 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n41la/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7438
2023-06-30 21:51:04,322 | DEBUG: Response: 200 (7438 bytes)
2023-06-30 21:51:04,641 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4aep/
2023-06-30 21:51:04,641 | DEBUG: Data: None
2023-06-30 21:51:04,641 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 21:51:04,972 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4aep/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2841
2023-06-30 21:51:04,973 | DEBUG: Response: 200 (2841 bytes)
2023-06-30 21:51:04,974 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4aw7/
2023-06-30 21:51:04,974 | DEBUG: Data: None
2023-06-30 21:51:04,974 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 21:51:05,366 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4aw7/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5539
2023-06-30 21:51:05,369 | DEBUG: Response: 200 (5539 bytes)
2023-06-30 21:51:05,371 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4jcm/
2023-06-30 21:51:05,371 | DEBUG: Data: None
2023-06-30 21:51:05,371 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 21:51:06,090 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4jcm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3090
2023-06-30 21:51:06,091 | DEBUG: Response: 200 (3090 bytes)
2023-06-30 21:51:06,101 | INFO: 127.0.0.1 - - [30/Jun/2023 21:51:06] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 22:02:08,022 | INFO: Adding job tentatively -- it will be properly scheduled when the scheduler starts
2023-06-30 22:02:08,033 | INFO: Added job "streamTickers" to job store "default"
2023-06-30 22:02:08,033 | INFO: Scheduler started
2023-06-30 22:02:08,034 | DEBUG: Looking for jobs to run
2023-06-30 22:02:08,035 | DEBUG: Stream Started
2023-06-30 22:02:08,035 | DEBUG: Next wakeup is due at 2023-06-30 22:47:08.022555+05:30 (in 2699.987285 seconds)
2023-06-30 22:04:22,446 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-06-30 22:04:22,447 | INFO: [33mPress CTRL+C to quit[0m
2023-06-30 22:04:30,784 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 22:04:30,784 | DEBUG: Data: None
2023-06-30 22:04:30,784 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 22:04:30,788 | DEBUG: Starting new HTTPS connection (1): www.reddit.com:443
2023-06-30 22:04:32,081 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 672
2023-06-30 22:04:32,090 | DEBUG: Starting new HTTPS connection (1): oauth.reddit.com:443
2023-06-30 22:04:32,572 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 5468
2023-06-30 22:04:32,578 | DEBUG: Response: 200 (5468 bytes)
2023-06-30 22:04:32,581 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4jcm/
2023-06-30 22:04:32,581 | DEBUG: Data: None
2023-06-30 22:04:32,581 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:04:32,961 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4jcm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4621
2023-06-30 22:04:32,962 | DEBUG: Response: 200 (4621 bytes)
2023-06-30 22:04:32,965 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4aep/
2023-06-30 22:04:32,965 | DEBUG: Data: None
2023-06-30 22:04:32,965 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:04:33,378 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4aep/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3488
2023-06-30 22:04:33,379 | DEBUG: Response: 200 (3488 bytes)
2023-06-30 22:04:33,382 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n45te/
2023-06-30 22:04:33,383 | DEBUG: Data: None
2023-06-30 22:04:33,383 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:04:33,755 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n45te/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4886
2023-06-30 22:04:33,757 | DEBUG: Response: 200 (4886 bytes)
2023-06-30 22:04:33,761 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4xoo/
2023-06-30 22:04:33,761 | DEBUG: Data: None
2023-06-30 22:04:33,761 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:04:34,113 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4xoo/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2274
2023-06-30 22:04:34,115 | DEBUG: Response: 200 (2274 bytes)
2023-06-30 22:04:34,115 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4wdq/
2023-06-30 22:04:34,115 | DEBUG: Data: None
2023-06-30 22:04:34,115 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:04:34,576 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4wdq/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4679
2023-06-30 22:04:34,578 | DEBUG: Response: 200 (4679 bytes)
2023-06-30 22:04:34,584 | INFO: 127.0.0.1 - - [30/Jun/2023 22:04:34] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 22:04:34,592 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 22:04:34,592 | DEBUG: Data: None
2023-06-30 22:04:34,592 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 22:04:34,989 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 5468
2023-06-30 22:04:34,990 | DEBUG: Response: 200 (5468 bytes)
2023-06-30 22:04:34,992 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4jcm/
2023-06-30 22:04:34,992 | DEBUG: Data: None
2023-06-30 22:04:34,992 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:04:35,394 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4jcm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4611
2023-06-30 22:04:35,396 | DEBUG: Response: 200 (4611 bytes)
2023-06-30 22:04:35,398 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4aep/
2023-06-30 22:04:35,398 | DEBUG: Data: None
2023-06-30 22:04:35,398 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:04:35,761 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4aep/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3488
2023-06-30 22:04:35,763 | DEBUG: Response: 200 (3488 bytes)
2023-06-30 22:04:35,765 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n45te/
2023-06-30 22:04:35,765 | DEBUG: Data: None
2023-06-30 22:04:35,765 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:04:36,169 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n45te/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4886
2023-06-30 22:04:36,170 | DEBUG: Response: 200 (4886 bytes)
2023-06-30 22:04:36,172 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4xoo/
2023-06-30 22:04:36,172 | DEBUG: Data: None
2023-06-30 22:04:36,172 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:04:36,507 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4xoo/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2274
2023-06-30 22:04:36,509 | DEBUG: Response: 200 (2274 bytes)
2023-06-30 22:04:36,511 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4wdq/
2023-06-30 22:04:36,511 | DEBUG: Data: None
2023-06-30 22:04:36,511 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:04:37,282 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4wdq/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4679
2023-06-30 22:04:37,283 | DEBUG: Response: 200 (4679 bytes)
2023-06-30 22:04:37,287 | INFO: 127.0.0.1 - - [30/Jun/2023 22:04:37] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 22:04:37,294 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 22:04:37,294 | DEBUG: Data: None
2023-06-30 22:04:37,295 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 22:04:37,665 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 5468
2023-06-30 22:04:37,666 | DEBUG: Response: 200 (5468 bytes)
2023-06-30 22:04:37,667 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4jcm/
2023-06-30 22:04:37,667 | DEBUG: Data: None
2023-06-30 22:04:37,667 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:04:38,423 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4jcm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4611
2023-06-30 22:04:38,425 | DEBUG: Response: 200 (4611 bytes)
2023-06-30 22:04:38,428 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4aep/
2023-06-30 22:04:38,428 | DEBUG: Data: None
2023-06-30 22:04:38,428 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:04:38,788 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4aep/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3488
2023-06-30 22:04:38,790 | DEBUG: Response: 200 (3488 bytes)
2023-06-30 22:04:38,793 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n45te/
2023-06-30 22:04:38,794 | DEBUG: Data: None
2023-06-30 22:04:38,794 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:04:39,185 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n45te/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4886
2023-06-30 22:04:39,186 | DEBUG: Response: 200 (4886 bytes)
2023-06-30 22:04:39,187 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4xoo/
2023-06-30 22:04:39,187 | DEBUG: Data: None
2023-06-30 22:04:39,187 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:04:39,521 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4xoo/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2274
2023-06-30 22:04:39,522 | DEBUG: Response: 200 (2274 bytes)
2023-06-30 22:04:39,522 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4wdq/
2023-06-30 22:04:39,522 | DEBUG: Data: None
2023-06-30 22:04:39,523 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:04:39,941 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4wdq/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4679
2023-06-30 22:04:39,948 | DEBUG: Response: 200 (4679 bytes)
2023-06-30 22:04:39,952 | INFO: 127.0.0.1 - - [30/Jun/2023 22:04:39] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 22:05:16,704 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 22:05:16,705 | DEBUG: Data: None
2023-06-30 22:05:16,705 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 22:05:17,108 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 5487
2023-06-30 22:05:17,109 | DEBUG: Response: 200 (5487 bytes)
2023-06-30 22:05:17,111 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4jcm/
2023-06-30 22:05:17,112 | DEBUG: Data: None
2023-06-30 22:05:17,112 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:05:18,487 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4jcm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4629
2023-06-30 22:05:18,489 | DEBUG: Response: 200 (4629 bytes)
2023-06-30 22:05:18,493 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4aep/
2023-06-30 22:05:18,494 | DEBUG: Data: None
2023-06-30 22:05:18,494 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:05:18,830 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4aep/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3488
2023-06-30 22:05:18,832 | DEBUG: Response: 200 (3488 bytes)
2023-06-30 22:05:18,835 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n45te/
2023-06-30 22:05:18,836 | DEBUG: Data: None
2023-06-30 22:05:18,836 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:05:19,190 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n45te/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4887
2023-06-30 22:05:19,192 | DEBUG: Response: 200 (4887 bytes)
2023-06-30 22:05:19,194 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4xoo/
2023-06-30 22:05:19,194 | DEBUG: Data: None
2023-06-30 22:05:19,194 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:05:19,535 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4xoo/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2274
2023-06-30 22:05:19,536 | DEBUG: Response: 200 (2274 bytes)
2023-06-30 22:05:19,537 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4wdq/
2023-06-30 22:05:19,537 | DEBUG: Data: None
2023-06-30 22:05:19,537 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:05:19,977 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4wdq/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4679
2023-06-30 22:05:19,979 | DEBUG: Response: 200 (4679 bytes)
2023-06-30 22:05:19,985 | INFO: 127.0.0.1 - - [30/Jun/2023 22:05:19] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 22:06:04,238 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 22:06:04,239 | DEBUG: Data: None
2023-06-30 22:06:04,240 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 22:06:04,711 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 6750
2023-06-30 22:06:04,715 | DEBUG: Response: 200 (6750 bytes)
2023-06-30 22:06:04,721 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4wdq/
2023-06-30 22:06:04,722 | DEBUG: Data: None
2023-06-30 22:06:04,722 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:06:05,501 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4wdq/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4704
2023-06-30 22:06:05,503 | DEBUG: Response: 200 (4704 bytes)
2023-06-30 22:06:05,506 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4jcm/
2023-06-30 22:06:05,506 | DEBUG: Data: None
2023-06-30 22:06:05,506 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:06:05,908 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4jcm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4631
2023-06-30 22:06:05,909 | DEBUG: Response: 200 (4631 bytes)
2023-06-30 22:06:05,913 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n45te/
2023-06-30 22:06:05,913 | DEBUG: Data: None
2023-06-30 22:06:05,913 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:06:06,278 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n45te/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4886
2023-06-30 22:06:06,284 | DEBUG: Response: 200 (4886 bytes)
2023-06-30 22:06:06,286 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4aw7/
2023-06-30 22:06:06,286 | DEBUG: Data: None
2023-06-30 22:06:06,286 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:06:06,721 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4aw7/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6417
2023-06-30 22:06:06,722 | DEBUG: Response: 200 (6417 bytes)
2023-06-30 22:06:06,724 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4aep/
2023-06-30 22:06:06,724 | DEBUG: Data: None
2023-06-30 22:06:06,724 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:06:07,148 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4aep/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3487
2023-06-30 22:06:07,149 | DEBUG: Response: 200 (3487 bytes)
2023-06-30 22:06:07,153 | INFO: 127.0.0.1 - - [30/Jun/2023 22:06:07] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 22:29:19,081 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 22:29:19,081 | DEBUG: Data: None
2023-06-30 22:29:19,081 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 22:29:19,085 | DEBUG: Resetting dropped connection: oauth.reddit.com
2023-06-30 22:29:19,695 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 4940
2023-06-30 22:29:19,696 | DEBUG: Response: 200 (4940 bytes)
2023-06-30 22:29:19,699 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4wdq/
2023-06-30 22:29:19,699 | DEBUG: Data: None
2023-06-30 22:29:19,700 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:29:20,408 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4wdq/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6551
2023-06-30 22:29:20,504 | DEBUG: Response: 200 (6551 bytes)
2023-06-30 22:29:20,511 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4jcm/
2023-06-30 22:29:20,512 | DEBUG: Data: None
2023-06-30 22:29:20,512 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:29:21,094 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4jcm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10633
2023-06-30 22:29:21,143 | DEBUG: Response: 200 (10633 bytes)
2023-06-30 22:29:21,149 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5dhe/
2023-06-30 22:29:21,149 | DEBUG: Data: None
2023-06-30 22:29:21,149 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:29:21,570 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5dhe/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3763
2023-06-30 22:29:21,571 | DEBUG: Response: 200 (3763 bytes)
2023-06-30 22:29:21,573 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 22:29:21,573 | DEBUG: Data: None
2023-06-30 22:29:21,574 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:29:21,923 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2978
2023-06-30 22:29:21,927 | DEBUG: Response: 200 (2978 bytes)
2023-06-30 22:29:21,928 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n51ws/
2023-06-30 22:29:21,929 | DEBUG: Data: None
2023-06-30 22:29:21,929 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:29:22,293 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n51ws/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2379
2023-06-30 22:29:22,294 | DEBUG: Response: 200 (2379 bytes)
2023-06-30 22:29:22,298 | INFO: 127.0.0.1 - - [30/Jun/2023 22:29:22] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 22:29:41,238 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 22:29:41,238 | DEBUG: Data: None
2023-06-30 22:29:41,238 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 22:29:42,050 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 5651
2023-06-30 22:29:42,064 | DEBUG: Response: 200 (5651 bytes)
2023-06-30 22:29:42,069 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4wdq/
2023-06-30 22:29:42,070 | DEBUG: Data: None
2023-06-30 22:29:42,070 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:29:42,545 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4wdq/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6552
2023-06-30 22:29:42,613 | DEBUG: Response: 200 (6552 bytes)
2023-06-30 22:29:42,620 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4jcm/
2023-06-30 22:29:42,620 | DEBUG: Data: None
2023-06-30 22:29:42,621 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:29:43,178 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4jcm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10811
2023-06-30 22:29:43,204 | DEBUG: Response: 200 (10811 bytes)
2023-06-30 22:29:43,213 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5dhe/
2023-06-30 22:29:43,213 | DEBUG: Data: None
2023-06-30 22:29:43,214 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:29:43,605 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5dhe/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3762
2023-06-30 22:29:43,609 | DEBUG: Response: 200 (3762 bytes)
2023-06-30 22:29:43,611 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 22:29:43,611 | DEBUG: Data: None
2023-06-30 22:29:43,612 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:29:43,995 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2978
2023-06-30 22:29:44,004 | DEBUG: Response: 200 (2978 bytes)
2023-06-30 22:29:44,005 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n51ws/
2023-06-30 22:29:44,005 | DEBUG: Data: None
2023-06-30 22:29:44,005 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:29:44,393 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n51ws/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2376
2023-06-30 22:29:44,397 | DEBUG: Response: 200 (2376 bytes)
2023-06-30 22:29:44,400 | INFO: 127.0.0.1 - - [30/Jun/2023 22:29:44] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 22:33:43,801 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 22:33:43,806 | DEBUG: Data: None
2023-06-30 22:33:43,806 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 22:33:44,306 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 5473
2023-06-30 22:33:44,317 | DEBUG: Response: 200 (5473 bytes)
2023-06-30 22:33:44,320 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4jcm/
2023-06-30 22:33:44,321 | DEBUG: Data: None
2023-06-30 22:33:44,321 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:33:45,077 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4jcm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 11539
2023-06-30 22:33:45,110 | DEBUG: Response: 200 (11539 bytes)
2023-06-30 22:33:45,114 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4wdq/
2023-06-30 22:33:45,114 | DEBUG: Data: None
2023-06-30 22:33:45,114 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:33:45,621 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4wdq/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6572
2023-06-30 22:33:45,632 | DEBUG: Response: 200 (6572 bytes)
2023-06-30 22:33:45,635 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5dhe/
2023-06-30 22:33:45,635 | DEBUG: Data: None
2023-06-30 22:33:45,635 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:33:45,991 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5dhe/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3725
2023-06-30 22:33:47,777 | DEBUG: Response: 200 (3725 bytes)
2023-06-30 22:33:47,778 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5ohy/
2023-06-30 22:33:47,778 | DEBUG: Data: None
2023-06-30 22:33:47,778 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:33:48,101 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5ohy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2845
2023-06-30 22:33:48,421 | DEBUG: Response: 200 (2845 bytes)
2023-06-30 22:33:48,422 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 22:33:48,422 | DEBUG: Data: None
2023-06-30 22:33:48,422 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:33:48,768 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2978
2023-06-30 22:33:48,944 | DEBUG: Response: 200 (2978 bytes)
2023-06-30 22:33:48,947 | INFO: 127.0.0.1 - - [30/Jun/2023 22:33:48] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 22:36:19,240 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 22:36:19,240 | DEBUG: Data: None
2023-06-30 22:36:19,240 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 22:36:19,644 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 4896
2023-06-30 22:36:19,672 | DEBUG: Response: 200 (4896 bytes)
2023-06-30 22:36:19,674 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4wdq/
2023-06-30 22:36:19,674 | DEBUG: Data: None
2023-06-30 22:36:19,674 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:36:20,126 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4wdq/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6805
2023-06-30 22:36:20,165 | DEBUG: Response: 200 (6805 bytes)
2023-06-30 22:36:20,167 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5ohy/
2023-06-30 22:36:20,167 | DEBUG: Data: None
2023-06-30 22:36:20,167 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:36:20,521 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5ohy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3047
2023-06-30 22:36:20,527 | DEBUG: Response: 200 (3047 bytes)
2023-06-30 22:36:20,528 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5dhe/
2023-06-30 22:36:20,528 | DEBUG: Data: None
2023-06-30 22:36:20,528 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:36:20,924 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5dhe/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3721
2023-06-30 22:36:20,929 | DEBUG: Response: 200 (3721 bytes)
2023-06-30 22:36:20,930 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 22:36:20,930 | DEBUG: Data: None
2023-06-30 22:36:20,930 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:36:21,306 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2978
2023-06-30 22:36:21,312 | DEBUG: Response: 200 (2978 bytes)
2023-06-30 22:36:21,313 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4vrh/
2023-06-30 22:36:21,313 | DEBUG: Data: None
2023-06-30 22:36:21,313 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:36:21,645 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4vrh/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1331
2023-06-30 22:36:21,650 | DEBUG: Response: 200 (1331 bytes)
2023-06-30 22:36:21,657 | INFO: 127.0.0.1 - - [30/Jun/2023 22:36:21] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 22:36:37,658 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 22:36:37,658 | DEBUG: Data: None
2023-06-30 22:36:37,658 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 22:36:38,072 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 4909
2023-06-30 22:36:38,152 | DEBUG: Response: 200 (4909 bytes)
2023-06-30 22:36:38,155 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4wdq/
2023-06-30 22:36:38,156 | DEBUG: Data: None
2023-06-30 22:36:38,156 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:36:38,886 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4wdq/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6805
2023-06-30 22:36:38,920 | DEBUG: Response: 200 (6805 bytes)
2023-06-30 22:36:38,922 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5ohy/
2023-06-30 22:36:38,922 | DEBUG: Data: None
2023-06-30 22:36:38,922 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:36:39,552 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5ohy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3047
2023-06-30 22:36:39,559 | DEBUG: Response: 200 (3047 bytes)
2023-06-30 22:36:39,560 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5dhe/
2023-06-30 22:36:39,560 | DEBUG: Data: None
2023-06-30 22:36:39,560 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:36:39,902 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5dhe/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3721
2023-06-30 22:36:39,909 | DEBUG: Response: 200 (3721 bytes)
2023-06-30 22:36:39,910 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 22:36:39,910 | DEBUG: Data: None
2023-06-30 22:36:39,910 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:36:40,255 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2978
2023-06-30 22:36:40,262 | DEBUG: Response: 200 (2978 bytes)
2023-06-30 22:36:40,263 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4vrh/
2023-06-30 22:36:40,263 | DEBUG: Data: None
2023-06-30 22:36:40,263 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:36:40,642 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4vrh/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1330
2023-06-30 22:36:40,645 | DEBUG: Response: 200 (1330 bytes)
2023-06-30 22:36:40,647 | INFO: 127.0.0.1 - - [30/Jun/2023 22:36:40] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 22:36:40,653 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 22:36:40,653 | DEBUG: Data: None
2023-06-30 22:36:40,653 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 22:36:41,094 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 4909
2023-06-30 22:36:42,805 | DEBUG: Response: 200 (4909 bytes)
2023-06-30 22:36:42,806 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4wdq/
2023-06-30 22:36:42,806 | DEBUG: Data: None
2023-06-30 22:36:42,806 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:36:43,269 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4wdq/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6805
2023-06-30 22:36:43,309 | DEBUG: Response: 200 (6805 bytes)
2023-06-30 22:36:43,312 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5ohy/
2023-06-30 22:36:43,312 | DEBUG: Data: None
2023-06-30 22:36:43,312 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:36:43,653 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5ohy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3047
2023-06-30 22:36:43,656 | DEBUG: Response: 200 (3047 bytes)
2023-06-30 22:36:43,659 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5dhe/
2023-06-30 22:36:43,660 | DEBUG: Data: None
2023-06-30 22:36:43,660 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:36:44,002 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5dhe/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3721
2023-06-30 22:36:44,005 | DEBUG: Response: 200 (3721 bytes)
2023-06-30 22:36:44,006 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 22:36:44,007 | DEBUG: Data: None
2023-06-30 22:36:44,007 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:36:44,336 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2978
2023-06-30 22:36:44,423 | DEBUG: Response: 200 (2978 bytes)
2023-06-30 22:36:44,423 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4vrh/
2023-06-30 22:36:44,423 | DEBUG: Data: None
2023-06-30 22:36:44,423 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:36:44,959 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4vrh/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1330
2023-06-30 22:36:44,979 | DEBUG: Response: 200 (1330 bytes)
2023-06-30 22:36:44,981 | INFO: 127.0.0.1 - - [30/Jun/2023 22:36:44] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 22:42:14,243 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 22:42:14,244 | DEBUG: Data: None
2023-06-30 22:42:14,244 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 22:42:15,228 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 4923
2023-06-30 22:42:15,285 | DEBUG: Response: 200 (4923 bytes)
2023-06-30 22:42:15,287 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4wdq/
2023-06-30 22:42:15,287 | DEBUG: Data: None
2023-06-30 22:42:15,287 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:42:15,810 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4wdq/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7103
2023-06-30 22:42:15,895 | DEBUG: Response: 200 (7103 bytes)
2023-06-30 22:42:15,899 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5ohy/
2023-06-30 22:42:15,900 | DEBUG: Data: None
2023-06-30 22:42:15,900 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:42:16,609 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5ohy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3055
2023-06-30 22:42:16,628 | DEBUG: Response: 200 (3055 bytes)
2023-06-30 22:42:16,629 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5dhe/
2023-06-30 22:42:16,629 | DEBUG: Data: None
2023-06-30 22:42:16,629 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:42:17,314 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5dhe/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3721
2023-06-30 22:42:17,327 | DEBUG: Response: 200 (3721 bytes)
2023-06-30 22:42:17,330 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 22:42:17,330 | DEBUG: Data: None
2023-06-30 22:42:17,331 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:42:17,771 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2978
2023-06-30 22:42:17,771 | DEBUG: Response: 200 (2978 bytes)
2023-06-30 22:42:17,772 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4vrh/
2023-06-30 22:42:17,772 | DEBUG: Data: None
2023-06-30 22:42:17,772 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:42:18,521 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4vrh/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1743
2023-06-30 22:42:18,544 | DEBUG: Response: 200 (1743 bytes)
2023-06-30 22:42:18,547 | INFO: 127.0.0.1 - - [30/Jun/2023 22:42:18] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 22:43:51,236 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 22:43:51,237 | DEBUG: Data: None
2023-06-30 22:43:51,237 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 22:43:51,676 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 4924
2023-06-30 22:43:51,704 | DEBUG: Response: 200 (4924 bytes)
2023-06-30 22:43:51,705 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4wdq/
2023-06-30 22:43:51,705 | DEBUG: Data: None
2023-06-30 22:43:51,705 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:43:52,182 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4wdq/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7104
2023-06-30 22:43:52,206 | DEBUG: Response: 200 (7104 bytes)
2023-06-30 22:43:52,209 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5ohy/
2023-06-30 22:43:52,209 | DEBUG: Data: None
2023-06-30 22:43:52,209 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:43:52,538 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5ohy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3055
2023-06-30 22:43:52,783 | DEBUG: Response: 200 (3055 bytes)
2023-06-30 22:43:52,785 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5dhe/
2023-06-30 22:43:52,785 | DEBUG: Data: None
2023-06-30 22:43:52,785 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:43:53,132 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5dhe/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3724
2023-06-30 22:43:53,185 | DEBUG: Response: 200 (3724 bytes)
2023-06-30 22:43:53,189 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 22:43:53,189 | DEBUG: Data: None
2023-06-30 22:43:53,189 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:43:53,510 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2978
2023-06-30 22:43:53,515 | DEBUG: Response: 200 (2978 bytes)
2023-06-30 22:43:53,518 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4vrh/
2023-06-30 22:43:53,518 | DEBUG: Data: None
2023-06-30 22:43:53,518 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:43:53,831 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4vrh/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1742
2023-06-30 22:43:53,839 | DEBUG: Response: 200 (1742 bytes)
2023-06-30 22:43:53,849 | INFO: 127.0.0.1 - - [30/Jun/2023 22:43:53] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 22:44:54,257 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 22:44:54,257 | DEBUG: Data: None
2023-06-30 22:44:54,257 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 22:44:54,671 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 4928
2023-06-30 22:44:54,718 | DEBUG: Response: 200 (4928 bytes)
2023-06-30 22:44:54,724 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4wdq/
2023-06-30 22:44:54,724 | DEBUG: Data: None
2023-06-30 22:44:54,724 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:44:55,230 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4wdq/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7250
2023-06-30 22:44:55,484 | DEBUG: Response: 200 (7250 bytes)
2023-06-30 22:44:55,489 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5ohy/
2023-06-30 22:44:55,489 | DEBUG: Data: None
2023-06-30 22:44:55,489 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:44:55,791 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5ohy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3057
2023-06-30 22:44:55,805 | DEBUG: Response: 200 (3057 bytes)
2023-06-30 22:44:55,806 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5dhe/
2023-06-30 22:44:55,806 | DEBUG: Data: None
2023-06-30 22:44:55,806 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:44:56,172 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5dhe/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3724
2023-06-30 22:44:56,186 | DEBUG: Response: 200 (3724 bytes)
2023-06-30 22:44:56,187 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 22:44:56,188 | DEBUG: Data: None
2023-06-30 22:44:56,188 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:44:56,515 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2978
2023-06-30 22:44:56,515 | DEBUG: Response: 200 (2978 bytes)
2023-06-30 22:44:56,518 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n4vrh/
2023-06-30 22:44:56,518 | DEBUG: Data: None
2023-06-30 22:44:56,518 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 22:44:56,881 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n4vrh/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1742
2023-06-30 22:44:56,949 | DEBUG: Response: 200 (1742 bytes)
2023-06-30 22:44:56,960 | INFO: 127.0.0.1 - - [30/Jun/2023 22:44:56] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:04:47,596 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-06-30 23:04:47,596 | DEBUG: Data: None
2023-06-30 23:04:47,596 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-06-30 23:04:47,601 | DEBUG: Resetting dropped connection: oauth.reddit.com
2023-06-30 23:04:48,746 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5915
2023-06-30 23:04:48,747 | DEBUG: Response: 200 (5915 bytes)
2023-06-30 23:04:48,749 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-06-30 23:04:48,749 | DEBUG: Data: None
2023-06-30 23:04:48,749 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:04:49,082 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-06-30 23:04:49,082 | DEBUG: Response: 200 (1801 bytes)
2023-06-30 23:04:49,083 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-06-30 23:04:49,083 | DEBUG: Data: None
2023-06-30 23:04:49,083 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:04:49,442 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4442
2023-06-30 23:04:49,443 | DEBUG: Response: 200 (4442 bytes)
2023-06-30 23:04:49,444 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-06-30 23:04:49,444 | DEBUG: Data: None
2023-06-30 23:04:49,444 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:04:49,774 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3786
2023-06-30 23:04:49,774 | DEBUG: Response: 200 (3786 bytes)
2023-06-30 23:04:49,775 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-06-30 23:04:49,775 | DEBUG: Data: None
2023-06-30 23:04:49,775 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:04:50,283 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9583
2023-06-30 23:04:50,289 | DEBUG: Response: 200 (9583 bytes)
2023-06-30 23:04:50,301 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-06-30 23:04:50,301 | DEBUG: Data: None
2023-06-30 23:04:50,301 | DEBUG: Params: {'q': 'APPL', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-06-30 23:04:50,816 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=APPL&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 7036
2023-06-30 23:04:50,828 | DEBUG: Response: 200 (7036 bytes)
2023-06-30 23:04:50,830 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14my829/
2023-06-30 23:04:50,830 | DEBUG: Data: None
2023-06-30 23:04:50,830 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:04:51,882 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14my829/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 21702
2023-06-30 23:04:51,895 | DEBUG: Response: 200 (21702 bytes)
2023-06-30 23:04:51,903 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mr848/
2023-06-30 23:04:51,903 | DEBUG: Data: None
2023-06-30 23:04:51,903 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:04:52,553 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mr848/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 13187
2023-06-30 23:04:52,556 | DEBUG: Response: 200 (13187 bytes)
2023-06-30 23:04:52,560 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n0mg0/
2023-06-30 23:04:52,560 | DEBUG: Data: None
2023-06-30 23:04:52,560 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:04:52,963 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n0mg0/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5349
2023-06-30 23:04:52,964 | DEBUG: Response: 200 (5349 bytes)
2023-06-30 23:04:52,967 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5lfi/
2023-06-30 23:04:52,967 | DEBUG: Data: None
2023-06-30 23:04:52,967 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:04:53,334 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5lfi/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2359
2023-06-30 23:04:53,335 | DEBUG: Response: 200 (2359 bytes)
2023-06-30 23:04:53,336 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5oq0/
2023-06-30 23:04:53,336 | DEBUG: Data: None
2023-06-30 23:04:53,336 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:04:53,679 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5oq0/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3232
2023-06-30 23:04:53,683 | DEBUG: Response: 200 (3232 bytes)
2023-06-30 23:04:53,684 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-06-30 23:04:53,684 | DEBUG: Data: None
2023-06-30 23:04:53,684 | DEBUG: Params: {'q': 'GME', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-06-30 23:04:54,001 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=GME&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-06-30 23:04:54,002 | DEBUG: Response: 200 (136 bytes)
2023-06-30 23:04:54,004 | INFO: 127.0.0.1 - - [30/Jun/2023 23:04:54] "GET /watchlist?tickSelector%5B0%5D=TSLA&tickSelector%5B1%5D=APPL&tickSelector%5B2%5D=GME HTTP/1.1" 200 -
2023-06-30 23:05:45,794 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-06-30 23:05:45,794 | DEBUG: Data: None
2023-06-30 23:05:45,794 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-06-30 23:05:46,141 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5914
2023-06-30 23:05:46,143 | DEBUG: Response: 200 (5914 bytes)
2023-06-30 23:05:46,144 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-06-30 23:05:46,144 | DEBUG: Data: None
2023-06-30 23:05:46,144 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:05:46,471 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-06-30 23:05:46,472 | DEBUG: Response: 200 (1801 bytes)
2023-06-30 23:05:46,472 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-06-30 23:05:46,473 | DEBUG: Data: None
2023-06-30 23:05:46,473 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:05:46,889 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4442
2023-06-30 23:05:46,892 | DEBUG: Response: 200 (4442 bytes)
2023-06-30 23:05:46,893 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-06-30 23:05:46,893 | DEBUG: Data: None
2023-06-30 23:05:46,894 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:05:47,238 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3783
2023-06-30 23:05:47,239 | DEBUG: Response: 200 (3783 bytes)
2023-06-30 23:05:47,241 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-06-30 23:05:47,241 | DEBUG: Data: None
2023-06-30 23:05:47,241 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:05:47,995 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9589
2023-06-30 23:05:47,996 | DEBUG: Response: 200 (9589 bytes)
2023-06-30 23:05:47,999 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-06-30 23:05:47,999 | DEBUG: Data: None
2023-06-30 23:05:47,999 | DEBUG: Params: {'q': 'APPL', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-06-30 23:05:48,377 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=APPL&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 7035
2023-06-30 23:05:48,378 | DEBUG: Response: 200 (7035 bytes)
2023-06-30 23:05:48,379 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14my829/
2023-06-30 23:05:48,379 | DEBUG: Data: None
2023-06-30 23:05:48,379 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:05:49,614 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14my829/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 21711
2023-06-30 23:05:49,622 | DEBUG: Response: 200 (21711 bytes)
2023-06-30 23:05:49,629 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mr848/
2023-06-30 23:05:49,629 | DEBUG: Data: None
2023-06-30 23:05:49,629 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:05:50,190 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mr848/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 13207
2023-06-30 23:05:50,191 | DEBUG: Response: 200 (13207 bytes)
2023-06-30 23:05:50,195 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n0mg0/
2023-06-30 23:05:50,195 | DEBUG: Data: None
2023-06-30 23:05:50,195 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:05:50,634 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n0mg0/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5354
2023-06-30 23:05:50,635 | DEBUG: Response: 200 (5354 bytes)
2023-06-30 23:05:50,636 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5lfi/
2023-06-30 23:05:50,637 | DEBUG: Data: None
2023-06-30 23:05:50,637 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:05:50,976 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5lfi/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2359
2023-06-30 23:05:50,976 | DEBUG: Response: 200 (2359 bytes)
2023-06-30 23:05:50,977 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5oq0/
2023-06-30 23:05:50,977 | DEBUG: Data: None
2023-06-30 23:05:50,977 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:05:51,321 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5oq0/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3233
2023-06-30 23:05:51,322 | DEBUG: Response: 200 (3233 bytes)
2023-06-30 23:05:51,323 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-06-30 23:05:51,323 | DEBUG: Data: None
2023-06-30 23:05:51,323 | DEBUG: Params: {'q': 'GME', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-06-30 23:05:51,627 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=GME&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-06-30 23:05:51,627 | DEBUG: Response: 200 (136 bytes)
2023-06-30 23:05:51,630 | INFO: 127.0.0.1 - - [30/Jun/2023 23:05:51] "GET /watchlist?tickSelector%5B0%5D=TSLA&tickSelector%5B1%5D=APPL&tickSelector%5B2%5D=GME HTTP/1.1" 200 -
2023-06-30 23:06:55,797 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-06-30 23:06:55,798 | DEBUG: Data: None
2023-06-30 23:06:55,798 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-06-30 23:06:56,373 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6581
2023-06-30 23:06:56,378 | DEBUG: Response: 200 (6581 bytes)
2023-06-30 23:06:56,381 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-06-30 23:06:56,382 | DEBUG: Data: None
2023-06-30 23:06:56,382 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:06:56,717 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-06-30 23:06:56,718 | DEBUG: Response: 200 (1801 bytes)
2023-06-30 23:06:56,718 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6rit/
2023-06-30 23:06:56,718 | DEBUG: Data: None
2023-06-30 23:06:56,719 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:06:57,054 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6rit/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2944
2023-06-30 23:06:57,057 | DEBUG: Response: 200 (2944 bytes)
2023-06-30 23:06:57,058 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-06-30 23:06:57,058 | DEBUG: Data: None
2023-06-30 23:06:57,058 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:06:57,401 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4442
2023-06-30 23:06:57,402 | DEBUG: Response: 200 (4442 bytes)
2023-06-30 23:06:57,403 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-06-30 23:06:57,403 | DEBUG: Data: None
2023-06-30 23:06:57,403 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:06:57,742 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3782
2023-06-30 23:06:57,744 | DEBUG: Response: 200 (3782 bytes)
2023-06-30 23:06:57,745 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-06-30 23:06:57,745 | DEBUG: Data: None
2023-06-30 23:06:57,745 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:06:58,256 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9589
2023-06-30 23:06:58,261 | DEBUG: Response: 200 (9589 bytes)
2023-06-30 23:06:58,267 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-06-30 23:06:58,268 | DEBUG: Data: None
2023-06-30 23:06:58,268 | DEBUG: Params: {'q': 'APPL', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-06-30 23:06:58,629 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=APPL&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 7041
2023-06-30 23:06:58,631 | DEBUG: Response: 200 (7041 bytes)
2023-06-30 23:06:58,633 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14my829/
2023-06-30 23:06:58,633 | DEBUG: Data: None
2023-06-30 23:06:58,633 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:06:59,883 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14my829/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 21717
2023-06-30 23:06:59,895 | DEBUG: Response: 200 (21717 bytes)
2023-06-30 23:06:59,904 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mr848/
2023-06-30 23:06:59,904 | DEBUG: Data: None
2023-06-30 23:06:59,904 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:07:00,531 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mr848/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 13204
2023-06-30 23:07:00,534 | DEBUG: Response: 200 (13204 bytes)
2023-06-30 23:07:00,538 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n0mg0/
2023-06-30 23:07:00,538 | DEBUG: Data: None
2023-06-30 23:07:00,538 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:07:01,298 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n0mg0/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5336
2023-06-30 23:07:01,300 | DEBUG: Response: 200 (5336 bytes)
2023-06-30 23:07:01,305 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5lfi/
2023-06-30 23:07:01,305 | DEBUG: Data: None
2023-06-30 23:07:01,305 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:07:01,690 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5lfi/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2359
2023-06-30 23:07:01,693 | DEBUG: Response: 200 (2359 bytes)
2023-06-30 23:07:01,693 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5oq0/
2023-06-30 23:07:01,693 | DEBUG: Data: None
2023-06-30 23:07:01,693 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:07:02,035 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5oq0/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3232
2023-06-30 23:07:02,036 | DEBUG: Response: 200 (3232 bytes)
2023-06-30 23:07:02,037 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-06-30 23:07:02,037 | DEBUG: Data: None
2023-06-30 23:07:02,037 | DEBUG: Params: {'q': 'GME', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-06-30 23:07:02,343 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=GME&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-06-30 23:07:02,344 | DEBUG: Response: 200 (136 bytes)
2023-06-30 23:07:02,345 | INFO: 127.0.0.1 - - [30/Jun/2023 23:07:02] "GET /watchlist?tickSelector%5B0%5D=TSLA&tickSelector%5B1%5D=APPL&tickSelector%5B2%5D=GME HTTP/1.1" 200 -
2023-06-30 23:08:14,421 | INFO: Adding job tentatively -- it will be properly scheduled when the scheduler starts
2023-06-30 23:08:14,434 | INFO: Added job "streamTickers" to job store "default"
2023-06-30 23:08:14,434 | INFO: Scheduler started
2023-06-30 23:08:14,434 | DEBUG: Looking for jobs to run
2023-06-30 23:08:14,434 | DEBUG: Next wakeup is due at 2023-06-30 23:53:14.419070+05:30 (in 2699.984403 seconds)
2023-06-30 23:08:14,434 | DEBUG: Stream Started
2023-06-30 23:08:20,305 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-06-30 23:08:20,306 | INFO: [33mPress CTRL+C to quit[0m
2023-06-30 23:08:47,239 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:08:47,240 | DEBUG: Data: None
2023-06-30 23:08:47,240 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:08:47,245 | DEBUG: Starting new HTTPS connection (1): www.reddit.com:443
2023-06-30 23:08:48,256 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 669
2023-06-30 23:08:48,268 | DEBUG: Starting new HTTPS connection (1): oauth.reddit.com:443
2023-06-30 23:08:48,691 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 3781
2023-06-30 23:08:48,775 | DEBUG: Response: 200 (3781 bytes)
2023-06-30 23:08:48,778 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5ohy/
2023-06-30 23:08:48,779 | DEBUG: Data: None
2023-06-30 23:08:48,779 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:08:49,125 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5ohy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3428
2023-06-30 23:08:49,126 | DEBUG: Response: 200 (3428 bytes)
2023-06-30 23:08:49,127 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 23:08:49,127 | DEBUG: Data: None
2023-06-30 23:08:49,127 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:08:49,511 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3540
2023-06-30 23:08:49,584 | DEBUG: Response: 200 (3540 bytes)
2023-06-30 23:08:49,585 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5dhe/
2023-06-30 23:08:49,585 | DEBUG: Data: None
2023-06-30 23:08:49,585 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:08:50,011 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5dhe/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3949
2023-06-30 23:08:50,012 | DEBUG: Response: 200 (3949 bytes)
2023-06-30 23:08:50,013 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6asu/
2023-06-30 23:08:50,013 | DEBUG: Data: None
2023-06-30 23:08:50,013 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:08:50,348 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6asu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2729
2023-06-30 23:08:50,349 | DEBUG: Response: 200 (2729 bytes)
2023-06-30 23:08:50,349 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5g6j/
2023-06-30 23:08:50,349 | DEBUG: Data: None
2023-06-30 23:08:50,349 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:08:50,752 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5g6j/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5853
2023-06-30 23:08:50,862 | DEBUG: Response: 200 (5853 bytes)
2023-06-30 23:08:50,864 | ERROR: Exception on /topsubs/hour [GET]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 39, in get
    subs=redditbot.getSubmissionAllSubs(time)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\redditbot.py", line 57, in getSubmissionAllSubs
    ob['Permalink']="https://www.reddit.com"+reddit.submission(post.id).permalink
AttributeError: 'str' object has no attribute 'id'
2023-06-30 23:08:50,873 | INFO: 127.0.0.1 - - [30/Jun/2023 23:08:50] "[35m[1mGET /topsubs/hour HTTP/1.1[0m" 500 -
2023-06-30 23:09:03,114 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:09:03,114 | DEBUG: Data: None
2023-06-30 23:09:03,114 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:09:03,694 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 3781
2023-06-30 23:09:03,695 | DEBUG: Response: 200 (3781 bytes)
2023-06-30 23:09:03,696 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5ohy/
2023-06-30 23:09:03,696 | DEBUG: Data: None
2023-06-30 23:09:03,696 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:09:04,272 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5ohy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3428
2023-06-30 23:09:04,273 | DEBUG: Response: 200 (3428 bytes)
2023-06-30 23:09:04,274 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 23:09:04,274 | DEBUG: Data: None
2023-06-30 23:09:04,274 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:09:04,859 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3540
2023-06-30 23:09:04,912 | DEBUG: Response: 200 (3540 bytes)
2023-06-30 23:09:04,914 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5dhe/
2023-06-30 23:09:04,914 | DEBUG: Data: None
2023-06-30 23:09:04,914 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:09:05,287 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5dhe/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3949
2023-06-30 23:09:05,313 | DEBUG: Response: 200 (3949 bytes)
2023-06-30 23:09:05,315 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6asu/
2023-06-30 23:09:05,315 | DEBUG: Data: None
2023-06-30 23:09:05,315 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:09:05,635 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6asu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2729
2023-06-30 23:09:05,920 | DEBUG: Response: 200 (2729 bytes)
2023-06-30 23:09:05,921 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5g6j/
2023-06-30 23:09:05,922 | DEBUG: Data: None
2023-06-30 23:09:05,922 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:09:06,380 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5g6j/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5853
2023-06-30 23:09:06,382 | DEBUG: Response: 200 (5853 bytes)
2023-06-30 23:09:06,385 | ERROR: Exception on /topsubs/hour [GET]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 39, in get
    subs=redditbot.getSubmissionAllSubs(time)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\redditbot.py", line 57, in getSubmissionAllSubs
    ob['Permalink']="https://www.reddit.com"+reddit.submission(post.id).permalink
AttributeError: 'str' object has no attribute 'id'
2023-06-30 23:09:06,386 | INFO: 127.0.0.1 - - [30/Jun/2023 23:09:06] "[35m[1mGET /topsubs/hour HTTP/1.1[0m" 500 -
2023-06-30 23:10:42,159 | INFO: Adding job tentatively -- it will be properly scheduled when the scheduler starts
2023-06-30 23:10:42,160 | INFO: Added job "streamTickers" to job store "default"
2023-06-30 23:10:42,160 | INFO: Scheduler started
2023-06-30 23:10:42,160 | DEBUG: Looking for jobs to run
2023-06-30 23:10:42,161 | DEBUG: Next wakeup is due at 2023-06-30 23:55:42.159617+05:30 (in 2699.998299 seconds)
2023-06-30 23:10:42,161 | DEBUG: Stream Started
2023-06-30 23:10:44,409 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-06-30 23:10:44,409 | INFO: [33mPress CTRL+C to quit[0m
2023-06-30 23:10:57,313 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:10:57,313 | DEBUG: Data: None
2023-06-30 23:10:57,314 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:10:57,316 | DEBUG: Starting new HTTPS connection (1): www.reddit.com:443
2023-06-30 23:10:58,178 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 667
2023-06-30 23:10:58,184 | DEBUG: Starting new HTTPS connection (1): oauth.reddit.com:443
2023-06-30 23:10:59,010 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 4266
2023-06-30 23:10:59,011 | DEBUG: Response: 200 (4266 bytes)
2023-06-30 23:10:59,012 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5ohy/
2023-06-30 23:10:59,012 | DEBUG: Data: None
2023-06-30 23:10:59,012 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:10:59,580 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5ohy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3618
2023-06-30 23:10:59,581 | DEBUG: Response: 200 (3618 bytes)
2023-06-30 23:10:59,582 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 23:10:59,582 | DEBUG: Data: None
2023-06-30 23:10:59,582 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:10:59,912 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3539
2023-06-30 23:10:59,912 | DEBUG: Response: 200 (3539 bytes)
2023-06-30 23:10:59,913 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6asu/
2023-06-30 23:10:59,913 | DEBUG: Data: None
2023-06-30 23:10:59,913 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:11:00,219 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6asu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2728
2023-06-30 23:11:00,220 | DEBUG: Response: 200 (2728 bytes)
2023-06-30 23:11:00,221 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5g6j/
2023-06-30 23:11:00,221 | DEBUG: Data: None
2023-06-30 23:11:00,221 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:11:00,866 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5g6j/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5852
2023-06-30 23:11:00,867 | DEBUG: Response: 200 (5852 bytes)
2023-06-30 23:11:00,869 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5rk6/
2023-06-30 23:11:00,869 | DEBUG: Data: None
2023-06-30 23:11:00,869 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:11:01,344 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5rk6/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4206
2023-06-30 23:11:01,345 | DEBUG: Response: 200 (4206 bytes)
2023-06-30 23:11:01,346 | ERROR: Exception on /topsubs/hour [GET]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 493, in wrapper
    return self.make_response(data, code, headers=headers)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 522, in make_response
    resp = self.representations[mediatype](data, *args, **kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\representations\json.py", line 21, in output_json
    dumped = dumps(data, **settings) + "\n"
  File "C:\Python310\lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "C:\Python310\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Python310\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Python310\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type Submission is not JSON serializable
2023-06-30 23:11:01,391 | INFO: 127.0.0.1 - - [30/Jun/2023 23:11:01] "[35m[1mGET /topsubs/hour HTTP/1.1[0m" 500 -
2023-06-30 23:11:01,396 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:11:01,396 | DEBUG: Data: None
2023-06-30 23:11:01,396 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:11:01,810 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 4276
2023-06-30 23:11:01,811 | DEBUG: Response: 200 (4276 bytes)
2023-06-30 23:11:01,812 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5ohy/
2023-06-30 23:11:01,812 | DEBUG: Data: None
2023-06-30 23:11:01,812 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:11:02,130 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5ohy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3619
2023-06-30 23:11:02,131 | DEBUG: Response: 200 (3619 bytes)
2023-06-30 23:11:02,132 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 23:11:02,132 | DEBUG: Data: None
2023-06-30 23:11:02,132 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:11:02,531 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3539
2023-06-30 23:11:02,562 | DEBUG: Response: 200 (3539 bytes)
2023-06-30 23:11:02,563 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6asu/
2023-06-30 23:11:02,563 | DEBUG: Data: None
2023-06-30 23:11:02,563 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:11:02,912 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6asu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2728
2023-06-30 23:11:02,912 | DEBUG: Response: 200 (2728 bytes)
2023-06-30 23:11:02,913 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5g6j/
2023-06-30 23:11:02,913 | DEBUG: Data: None
2023-06-30 23:11:02,914 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:11:03,310 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5g6j/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5850
2023-06-30 23:11:03,311 | DEBUG: Response: 200 (5850 bytes)
2023-06-30 23:11:03,313 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5rk6/
2023-06-30 23:11:03,313 | DEBUG: Data: None
2023-06-30 23:11:03,313 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:11:03,746 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5rk6/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4206
2023-06-30 23:11:03,748 | DEBUG: Response: 200 (4206 bytes)
2023-06-30 23:11:03,749 | ERROR: Exception on /topsubs/hour [GET]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 493, in wrapper
    return self.make_response(data, code, headers=headers)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 522, in make_response
    resp = self.representations[mediatype](data, *args, **kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\representations\json.py", line 21, in output_json
    dumped = dumps(data, **settings) + "\n"
  File "C:\Python310\lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "C:\Python310\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Python310\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Python310\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type Submission is not JSON serializable
2023-06-30 23:11:03,750 | INFO: 127.0.0.1 - - [30/Jun/2023 23:11:03] "[35m[1mGET /topsubs/hour HTTP/1.1[0m" 500 -
2023-06-30 23:11:03,753 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:11:03,753 | DEBUG: Data: None
2023-06-30 23:11:03,753 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:11:04,118 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 4266
2023-06-30 23:11:04,124 | DEBUG: Response: 200 (4266 bytes)
2023-06-30 23:11:04,125 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5ohy/
2023-06-30 23:11:04,125 | DEBUG: Data: None
2023-06-30 23:11:04,125 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:11:04,485 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5ohy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3618
2023-06-30 23:11:04,486 | DEBUG: Response: 200 (3618 bytes)
2023-06-30 23:11:04,487 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 23:11:04,487 | DEBUG: Data: None
2023-06-30 23:11:04,487 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:11:04,823 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3540
2023-06-30 23:11:04,870 | DEBUG: Response: 200 (3540 bytes)
2023-06-30 23:11:04,871 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6asu/
2023-06-30 23:11:04,872 | DEBUG: Data: None
2023-06-30 23:11:04,872 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:11:05,238 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6asu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2728
2023-06-30 23:11:05,239 | DEBUG: Response: 200 (2728 bytes)
2023-06-30 23:11:05,240 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5g6j/
2023-06-30 23:11:05,240 | DEBUG: Data: None
2023-06-30 23:11:05,240 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:11:05,642 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5g6j/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5852
2023-06-30 23:11:05,644 | DEBUG: Response: 200 (5852 bytes)
2023-06-30 23:11:05,649 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5rk6/
2023-06-30 23:11:05,649 | DEBUG: Data: None
2023-06-30 23:11:05,650 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:11:06,041 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5rk6/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4206
2023-06-30 23:11:06,042 | DEBUG: Response: 200 (4206 bytes)
2023-06-30 23:11:06,043 | ERROR: Exception on /topsubs/hour [GET]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 493, in wrapper
    return self.make_response(data, code, headers=headers)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 522, in make_response
    resp = self.representations[mediatype](data, *args, **kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\representations\json.py", line 21, in output_json
    dumped = dumps(data, **settings) + "\n"
  File "C:\Python310\lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "C:\Python310\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Python310\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Python310\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type Submission is not JSON serializable
2023-06-30 23:11:06,044 | INFO: 127.0.0.1 - - [30/Jun/2023 23:11:06] "[35m[1mGET /topsubs/hour HTTP/1.1[0m" 500 -
2023-06-30 23:12:47,314 | INFO: Adding job tentatively -- it will be properly scheduled when the scheduler starts
2023-06-30 23:12:47,315 | INFO: Added job "streamTickers" to job store "default"
2023-06-30 23:12:47,315 | INFO: Scheduler started
2023-06-30 23:12:47,316 | DEBUG: Looking for jobs to run
2023-06-30 23:12:47,316 | DEBUG: Next wakeup is due at 2023-06-30 23:57:47.314494+05:30 (in 2699.998285 seconds)
2023-06-30 23:12:47,316 | DEBUG: Stream Started
2023-06-30 23:12:49,731 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-06-30 23:12:49,731 | INFO: [33mPress CTRL+C to quit[0m
2023-06-30 23:12:58,287 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:12:58,287 | DEBUG: Data: None
2023-06-30 23:12:58,288 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:12:58,292 | DEBUG: Starting new HTTPS connection (1): www.reddit.com:443
2023-06-30 23:12:59,262 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 668
2023-06-30 23:12:59,266 | DEBUG: Starting new HTTPS connection (1): oauth.reddit.com:443
2023-06-30 23:12:59,844 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 4354
2023-06-30 23:12:59,845 | DEBUG: Response: 200 (4354 bytes)
2023-06-30 23:12:59,846 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5ohy/
2023-06-30 23:12:59,846 | DEBUG: Data: None
2023-06-30 23:12:59,846 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:13:00,241 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5ohy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3616
2023-06-30 23:13:00,241 | DEBUG: Response: 200 (3616 bytes)
2023-06-30 23:13:00,243 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 23:13:00,243 | DEBUG: Data: None
2023-06-30 23:13:00,243 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:13:00,610 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3540
2023-06-30 23:13:00,611 | DEBUG: Response: 200 (3540 bytes)
2023-06-30 23:13:00,613 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6asu/
2023-06-30 23:13:00,613 | DEBUG: Data: None
2023-06-30 23:13:00,613 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:13:00,956 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6asu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2926
2023-06-30 23:13:00,956 | DEBUG: Response: 200 (2926 bytes)
2023-06-30 23:13:00,957 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5rk6/
2023-06-30 23:13:00,957 | DEBUG: Data: None
2023-06-30 23:13:00,957 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:13:01,529 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5rk6/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4206
2023-06-30 23:13:01,530 | DEBUG: Response: 200 (4206 bytes)
2023-06-30 23:13:01,531 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5oq0/
2023-06-30 23:13:01,531 | DEBUG: Data: None
2023-06-30 23:13:01,531 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:13:01,877 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5oq0/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3231
2023-06-30 23:13:01,878 | DEBUG: Response: 200 (3231 bytes)
2023-06-30 23:13:01,887 | INFO: 127.0.0.1 - - [30/Jun/2023 23:13:01] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:13:01,894 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:13:01,895 | DEBUG: Data: None
2023-06-30 23:13:01,895 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:13:02,241 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 4356
2023-06-30 23:13:02,242 | DEBUG: Response: 200 (4356 bytes)
2023-06-30 23:13:02,243 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5ohy/
2023-06-30 23:13:02,243 | DEBUG: Data: None
2023-06-30 23:13:02,243 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:13:02,623 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5ohy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3616
2023-06-30 23:13:02,623 | DEBUG: Response: 200 (3616 bytes)
2023-06-30 23:13:02,624 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 23:13:02,625 | DEBUG: Data: None
2023-06-30 23:13:02,625 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:13:02,981 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3540
2023-06-30 23:13:02,982 | DEBUG: Response: 200 (3540 bytes)
2023-06-30 23:13:02,983 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6asu/
2023-06-30 23:13:02,983 | DEBUG: Data: None
2023-06-30 23:13:02,983 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:13:03,310 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6asu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2926
2023-06-30 23:13:03,311 | DEBUG: Response: 200 (2926 bytes)
2023-06-30 23:13:03,312 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5rk6/
2023-06-30 23:13:03,312 | DEBUG: Data: None
2023-06-30 23:13:03,312 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:13:03,742 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5rk6/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4206
2023-06-30 23:13:03,742 | DEBUG: Response: 200 (4206 bytes)
2023-06-30 23:13:03,743 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5oq0/
2023-06-30 23:13:03,743 | DEBUG: Data: None
2023-06-30 23:13:03,743 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:13:04,104 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5oq0/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3231
2023-06-30 23:13:04,105 | DEBUG: Response: 200 (3231 bytes)
2023-06-30 23:13:04,108 | INFO: 127.0.0.1 - - [30/Jun/2023 23:13:04] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:13:29,226 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:13:29,226 | DEBUG: Data: None
2023-06-30 23:13:29,226 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:13:29,616 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 4361
2023-06-30 23:13:29,619 | DEBUG: Response: 200 (4361 bytes)
2023-06-30 23:13:29,622 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5ohy/
2023-06-30 23:13:29,622 | DEBUG: Data: None
2023-06-30 23:13:29,622 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:13:30,023 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5ohy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3879
2023-06-30 23:13:30,025 | DEBUG: Response: 200 (3879 bytes)
2023-06-30 23:13:30,030 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 23:13:30,030 | DEBUG: Data: None
2023-06-30 23:13:30,030 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:13:30,395 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3542
2023-06-30 23:13:30,396 | DEBUG: Response: 200 (3542 bytes)
2023-06-30 23:13:30,397 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6asu/
2023-06-30 23:13:30,397 | DEBUG: Data: None
2023-06-30 23:13:30,397 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:13:30,741 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6asu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2925
2023-06-30 23:13:30,745 | DEBUG: Response: 200 (2925 bytes)
2023-06-30 23:13:30,749 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5rk6/
2023-06-30 23:13:30,749 | DEBUG: Data: None
2023-06-30 23:13:30,750 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:13:31,158 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5rk6/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4206
2023-06-30 23:13:31,159 | DEBUG: Response: 200 (4206 bytes)
2023-06-30 23:13:31,160 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5oq0/
2023-06-30 23:13:31,160 | DEBUG: Data: None
2023-06-30 23:13:31,160 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:13:31,497 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5oq0/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3232
2023-06-30 23:13:31,498 | DEBUG: Response: 200 (3232 bytes)
2023-06-30 23:13:31,501 | INFO: 127.0.0.1 - - [30/Jun/2023 23:13:31] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:15:34,244 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:15:34,244 | DEBUG: Data: None
2023-06-30 23:15:34,244 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:15:34,648 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 4349
2023-06-30 23:15:34,649 | DEBUG: Response: 200 (4349 bytes)
2023-06-30 23:15:34,650 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5ohy/
2023-06-30 23:15:34,650 | DEBUG: Data: None
2023-06-30 23:15:34,650 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:15:35,040 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5ohy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4071
2023-06-30 23:15:35,041 | DEBUG: Response: 200 (4071 bytes)
2023-06-30 23:15:35,043 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 23:15:35,043 | DEBUG: Data: None
2023-06-30 23:15:35,043 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:15:35,428 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3539
2023-06-30 23:15:35,429 | DEBUG: Response: 200 (3539 bytes)
2023-06-30 23:15:35,430 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6asu/
2023-06-30 23:15:35,430 | DEBUG: Data: None
2023-06-30 23:15:35,430 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:15:35,779 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6asu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3036
2023-06-30 23:15:35,780 | DEBUG: Response: 200 (3036 bytes)
2023-06-30 23:15:35,780 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5rk6/
2023-06-30 23:15:35,780 | DEBUG: Data: None
2023-06-30 23:15:35,780 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:15:36,214 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5rk6/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4206
2023-06-30 23:15:36,215 | DEBUG: Response: 200 (4206 bytes)
2023-06-30 23:15:36,217 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5oq0/
2023-06-30 23:15:36,217 | DEBUG: Data: None
2023-06-30 23:15:36,217 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:15:36,645 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5oq0/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3231
2023-06-30 23:15:36,649 | DEBUG: Response: 200 (3231 bytes)
2023-06-30 23:15:36,652 | INFO: 127.0.0.1 - - [30/Jun/2023 23:15:36] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:15:47,332 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:15:47,333 | DEBUG: Data: None
2023-06-30 23:15:47,333 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:15:47,746 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 4345
2023-06-30 23:15:47,747 | DEBUG: Response: 200 (4345 bytes)
2023-06-30 23:15:47,748 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5ohy/
2023-06-30 23:15:47,748 | DEBUG: Data: None
2023-06-30 23:15:47,748 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:15:48,133 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5ohy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4198
2023-06-30 23:15:48,134 | DEBUG: Response: 200 (4198 bytes)
2023-06-30 23:15:48,135 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 23:15:48,135 | DEBUG: Data: None
2023-06-30 23:15:48,135 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:15:48,496 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3540
2023-06-30 23:15:48,497 | DEBUG: Response: 200 (3540 bytes)
2023-06-30 23:15:48,498 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6asu/
2023-06-30 23:15:48,498 | DEBUG: Data: None
2023-06-30 23:15:48,498 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:15:48,841 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6asu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3036
2023-06-30 23:15:48,842 | DEBUG: Response: 200 (3036 bytes)
2023-06-30 23:15:48,842 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5rk6/
2023-06-30 23:15:48,842 | DEBUG: Data: None
2023-06-30 23:15:48,843 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:15:49,216 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5rk6/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4206
2023-06-30 23:15:49,217 | DEBUG: Response: 200 (4206 bytes)
2023-06-30 23:15:49,219 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5oq0/
2023-06-30 23:15:49,219 | DEBUG: Data: None
2023-06-30 23:15:49,219 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:15:49,561 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5oq0/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3231
2023-06-30 23:15:49,561 | DEBUG: Response: 200 (3231 bytes)
2023-06-30 23:15:49,564 | INFO: 127.0.0.1 - - [30/Jun/2023 23:15:49] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:16:05,365 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:16:05,365 | DEBUG: Data: None
2023-06-30 23:16:05,365 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:16:05,774 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 4353
2023-06-30 23:16:05,775 | DEBUG: Response: 200 (4353 bytes)
2023-06-30 23:16:05,775 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5ohy/
2023-06-30 23:16:05,776 | DEBUG: Data: None
2023-06-30 23:16:05,776 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:16:06,167 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5ohy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4192
2023-06-30 23:16:06,167 | DEBUG: Response: 200 (4192 bytes)
2023-06-30 23:16:06,169 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 23:16:06,169 | DEBUG: Data: None
2023-06-30 23:16:06,169 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:16:06,512 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3537
2023-06-30 23:16:06,513 | DEBUG: Response: 200 (3537 bytes)
2023-06-30 23:16:06,514 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6asu/
2023-06-30 23:16:06,514 | DEBUG: Data: None
2023-06-30 23:16:06,514 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:16:06,900 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6asu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3036
2023-06-30 23:16:06,901 | DEBUG: Response: 200 (3036 bytes)
2023-06-30 23:16:06,902 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5rk6/
2023-06-30 23:16:06,902 | DEBUG: Data: None
2023-06-30 23:16:06,902 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:16:07,301 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5rk6/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4206
2023-06-30 23:16:07,301 | DEBUG: Response: 200 (4206 bytes)
2023-06-30 23:16:07,321 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5oq0/
2023-06-30 23:16:07,321 | DEBUG: Data: None
2023-06-30 23:16:07,321 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:16:07,669 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5oq0/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3231
2023-06-30 23:16:07,669 | DEBUG: Response: 200 (3231 bytes)
2023-06-30 23:16:07,672 | INFO: 127.0.0.1 - - [30/Jun/2023 23:16:07] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:16:07,678 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:16:07,678 | DEBUG: Data: None
2023-06-30 23:16:07,678 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:16:08,082 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 4351
2023-06-30 23:16:08,083 | DEBUG: Response: 200 (4351 bytes)
2023-06-30 23:16:08,084 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5ohy/
2023-06-30 23:16:08,084 | DEBUG: Data: None
2023-06-30 23:16:08,084 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:16:08,484 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5ohy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4191
2023-06-30 23:16:08,484 | DEBUG: Response: 200 (4191 bytes)
2023-06-30 23:16:08,486 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 23:16:08,486 | DEBUG: Data: None
2023-06-30 23:16:08,486 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:16:08,833 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3540
2023-06-30 23:16:08,833 | DEBUG: Response: 200 (3540 bytes)
2023-06-30 23:16:08,834 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6asu/
2023-06-30 23:16:08,834 | DEBUG: Data: None
2023-06-30 23:16:08,834 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:16:09,176 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6asu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3036
2023-06-30 23:16:09,176 | DEBUG: Response: 200 (3036 bytes)
2023-06-30 23:16:09,177 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5rk6/
2023-06-30 23:16:09,177 | DEBUG: Data: None
2023-06-30 23:16:09,177 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:16:09,559 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5rk6/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4206
2023-06-30 23:16:09,560 | DEBUG: Response: 200 (4206 bytes)
2023-06-30 23:16:09,561 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5oq0/
2023-06-30 23:16:09,561 | DEBUG: Data: None
2023-06-30 23:16:09,561 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:16:09,895 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5oq0/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3231
2023-06-30 23:16:09,896 | DEBUG: Response: 200 (3231 bytes)
2023-06-30 23:16:09,899 | INFO: 127.0.0.1 - - [30/Jun/2023 23:16:09] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:19:37,691 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:19:37,692 | DEBUG: Data: None
2023-06-30 23:19:37,692 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:19:38,116 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 4356
2023-06-30 23:19:38,118 | DEBUG: Response: 200 (4356 bytes)
2023-06-30 23:19:38,120 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5ohy/
2023-06-30 23:19:38,121 | DEBUG: Data: None
2023-06-30 23:19:38,121 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:19:38,563 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5ohy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4483
2023-06-30 23:19:38,564 | DEBUG: Response: 200 (4483 bytes)
2023-06-30 23:19:38,565 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 23:19:38,565 | DEBUG: Data: None
2023-06-30 23:19:38,565 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:19:38,971 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3540
2023-06-30 23:19:38,971 | DEBUG: Response: 200 (3540 bytes)
2023-06-30 23:19:38,973 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6asu/
2023-06-30 23:19:38,973 | DEBUG: Data: None
2023-06-30 23:19:38,973 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:19:39,300 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6asu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3147
2023-06-30 23:19:39,302 | DEBUG: Response: 200 (3147 bytes)
2023-06-30 23:19:39,303 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5rk6/
2023-06-30 23:19:39,303 | DEBUG: Data: None
2023-06-30 23:19:39,303 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:19:39,734 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5rk6/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4206
2023-06-30 23:19:39,735 | DEBUG: Response: 200 (4206 bytes)
2023-06-30 23:19:39,736 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5oq0/
2023-06-30 23:19:39,736 | DEBUG: Data: None
2023-06-30 23:19:39,736 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:19:40,119 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5oq0/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3231
2023-06-30 23:19:40,120 | DEBUG: Response: 200 (3231 bytes)
2023-06-30 23:19:40,123 | INFO: 127.0.0.1 - - [30/Jun/2023 23:19:40] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:19:40,127 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:19:40,128 | DEBUG: Data: None
2023-06-30 23:19:40,128 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:19:40,543 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 4356
2023-06-30 23:19:40,544 | DEBUG: Response: 200 (4356 bytes)
2023-06-30 23:19:40,545 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5ohy/
2023-06-30 23:19:40,545 | DEBUG: Data: None
2023-06-30 23:19:40,545 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:19:40,969 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5ohy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4486
2023-06-30 23:19:40,972 | DEBUG: Response: 200 (4486 bytes)
2023-06-30 23:19:40,974 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 23:19:40,974 | DEBUG: Data: None
2023-06-30 23:19:40,974 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:19:41,361 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3538
2023-06-30 23:19:41,362 | DEBUG: Response: 200 (3538 bytes)
2023-06-30 23:19:41,362 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6asu/
2023-06-30 23:19:41,363 | DEBUG: Data: None
2023-06-30 23:19:41,363 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:19:42,077 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6asu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3147
2023-06-30 23:19:42,078 | DEBUG: Response: 200 (3147 bytes)
2023-06-30 23:19:42,079 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5rk6/
2023-06-30 23:19:42,079 | DEBUG: Data: None
2023-06-30 23:19:42,079 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:19:42,509 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5rk6/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4206
2023-06-30 23:19:42,510 | DEBUG: Response: 200 (4206 bytes)
2023-06-30 23:19:42,510 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5oq0/
2023-06-30 23:19:42,511 | DEBUG: Data: None
2023-06-30 23:19:42,511 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:19:42,887 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5oq0/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3231
2023-06-30 23:19:42,888 | DEBUG: Response: 200 (3231 bytes)
2023-06-30 23:19:42,892 | INFO: 127.0.0.1 - - [30/Jun/2023 23:19:42] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:19:42,899 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:19:42,899 | DEBUG: Data: None
2023-06-30 23:19:42,899 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:19:43,285 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 4352
2023-06-30 23:19:43,286 | DEBUG: Response: 200 (4352 bytes)
2023-06-30 23:19:43,286 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5ohy/
2023-06-30 23:19:43,287 | DEBUG: Data: None
2023-06-30 23:19:43,287 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:19:43,705 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5ohy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4484
2023-06-30 23:19:43,707 | DEBUG: Response: 200 (4484 bytes)
2023-06-30 23:19:43,708 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 23:19:43,708 | DEBUG: Data: None
2023-06-30 23:19:43,708 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:19:44,136 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3540
2023-06-30 23:19:44,136 | DEBUG: Response: 200 (3540 bytes)
2023-06-30 23:19:44,138 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6asu/
2023-06-30 23:19:44,138 | DEBUG: Data: None
2023-06-30 23:19:44,138 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:19:44,524 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6asu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3147
2023-06-30 23:19:44,525 | DEBUG: Response: 200 (3147 bytes)
2023-06-30 23:19:44,525 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5rk6/
2023-06-30 23:19:44,525 | DEBUG: Data: None
2023-06-30 23:19:44,525 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:19:44,875 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5rk6/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4206
2023-06-30 23:19:44,875 | DEBUG: Response: 200 (4206 bytes)
2023-06-30 23:19:44,876 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5oq0/
2023-06-30 23:19:44,876 | DEBUG: Data: None
2023-06-30 23:19:44,877 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:19:45,607 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5oq0/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3231
2023-06-30 23:19:45,608 | DEBUG: Response: 200 (3231 bytes)
2023-06-30 23:19:45,611 | INFO: 127.0.0.1 - - [30/Jun/2023 23:19:45] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:20:28,221 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:20:28,222 | DEBUG: Data: None
2023-06-30 23:20:28,222 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:20:28,856 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 5022
2023-06-30 23:20:28,857 | DEBUG: Response: 200 (5022 bytes)
2023-06-30 23:20:28,858 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5ohy/
2023-06-30 23:20:28,858 | DEBUG: Data: None
2023-06-30 23:20:28,858 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:20:29,370 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5ohy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4649
2023-06-30 23:20:29,371 | DEBUG: Response: 200 (4649 bytes)
2023-06-30 23:20:29,372 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 23:20:29,372 | DEBUG: Data: None
2023-06-30 23:20:29,372 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:20:29,769 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3538
2023-06-30 23:20:29,785 | DEBUG: Response: 200 (3538 bytes)
2023-06-30 23:20:29,786 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5rk6/
2023-06-30 23:20:29,786 | DEBUG: Data: None
2023-06-30 23:20:29,786 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:20:30,217 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5rk6/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4206
2023-06-30 23:20:30,218 | DEBUG: Response: 200 (4206 bytes)
2023-06-30 23:20:30,219 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5oq0/
2023-06-30 23:20:30,219 | DEBUG: Data: None
2023-06-30 23:20:30,219 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:20:30,537 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5oq0/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3231
2023-06-30 23:20:30,537 | DEBUG: Response: 200 (3231 bytes)
2023-06-30 23:20:30,538 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6ptw/
2023-06-30 23:20:30,538 | DEBUG: Data: None
2023-06-30 23:20:30,538 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:20:30,951 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6ptw/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4041
2023-06-30 23:20:30,952 | DEBUG: Response: 200 (4041 bytes)
2023-06-30 23:20:30,955 | INFO: 127.0.0.1 - - [30/Jun/2023 23:20:30] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:20:30,960 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:20:30,960 | DEBUG: Data: None
2023-06-30 23:20:30,960 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:20:31,368 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 5027
2023-06-30 23:20:31,368 | DEBUG: Response: 200 (5027 bytes)
2023-06-30 23:20:31,369 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5ohy/
2023-06-30 23:20:31,369 | DEBUG: Data: None
2023-06-30 23:20:31,369 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:20:31,844 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5ohy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4649
2023-06-30 23:20:31,845 | DEBUG: Response: 200 (4649 bytes)
2023-06-30 23:20:31,846 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 23:20:31,846 | DEBUG: Data: None
2023-06-30 23:20:31,846 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:20:32,244 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3538
2023-06-30 23:20:32,244 | DEBUG: Response: 200 (3538 bytes)
2023-06-30 23:20:32,245 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5rk6/
2023-06-30 23:20:32,245 | DEBUG: Data: None
2023-06-30 23:20:32,245 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:20:32,665 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5rk6/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4206
2023-06-30 23:20:32,666 | DEBUG: Response: 200 (4206 bytes)
2023-06-30 23:20:32,667 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5oq0/
2023-06-30 23:20:32,667 | DEBUG: Data: None
2023-06-30 23:20:32,667 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:20:33,006 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5oq0/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3231
2023-06-30 23:20:33,007 | DEBUG: Response: 200 (3231 bytes)
2023-06-30 23:20:33,010 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6ptw/
2023-06-30 23:20:33,011 | DEBUG: Data: None
2023-06-30 23:20:33,012 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:20:33,386 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6ptw/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4041
2023-06-30 23:20:33,386 | DEBUG: Response: 200 (4041 bytes)
2023-06-30 23:20:33,389 | INFO: 127.0.0.1 - - [30/Jun/2023 23:20:33] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:20:41,543 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:20:41,543 | DEBUG: Data: None
2023-06-30 23:20:41,543 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:20:42,478 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 5022
2023-06-30 23:20:42,480 | DEBUG: Response: 200 (5022 bytes)
2023-06-30 23:20:42,481 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5ohy/
2023-06-30 23:20:42,481 | DEBUG: Data: None
2023-06-30 23:20:42,481 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:20:42,917 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5ohy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4647
2023-06-30 23:20:42,917 | DEBUG: Response: 200 (4647 bytes)
2023-06-30 23:20:42,919 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 23:20:42,919 | DEBUG: Data: None
2023-06-30 23:20:42,919 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:20:43,318 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3539
2023-06-30 23:20:43,318 | DEBUG: Response: 200 (3539 bytes)
2023-06-30 23:20:43,319 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5rk6/
2023-06-30 23:20:43,319 | DEBUG: Data: None
2023-06-30 23:20:43,319 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:20:43,771 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5rk6/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4206
2023-06-30 23:20:43,772 | DEBUG: Response: 200 (4206 bytes)
2023-06-30 23:20:43,773 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5oq0/
2023-06-30 23:20:43,773 | DEBUG: Data: None
2023-06-30 23:20:43,773 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:20:44,252 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5oq0/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3231
2023-06-30 23:20:44,252 | DEBUG: Response: 200 (3231 bytes)
2023-06-30 23:20:44,253 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6ptw/
2023-06-30 23:20:44,253 | DEBUG: Data: None
2023-06-30 23:20:44,253 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:20:44,636 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6ptw/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4041
2023-06-30 23:20:44,637 | DEBUG: Response: 200 (4041 bytes)
2023-06-30 23:20:44,641 | INFO: 127.0.0.1 - - [30/Jun/2023 23:20:44] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:20:44,646 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:20:44,646 | DEBUG: Data: None
2023-06-30 23:20:44,646 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:20:45,073 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 5022
2023-06-30 23:20:45,074 | DEBUG: Response: 200 (5022 bytes)
2023-06-30 23:20:45,075 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5ohy/
2023-06-30 23:20:45,075 | DEBUG: Data: None
2023-06-30 23:20:45,075 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:20:45,557 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5ohy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4647
2023-06-30 23:20:45,558 | DEBUG: Response: 200 (4647 bytes)
2023-06-30 23:20:45,559 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 23:20:45,560 | DEBUG: Data: None
2023-06-30 23:20:45,560 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:20:45,979 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3538
2023-06-30 23:20:45,979 | DEBUG: Response: 200 (3538 bytes)
2023-06-30 23:20:45,981 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5rk6/
2023-06-30 23:20:45,981 | DEBUG: Data: None
2023-06-30 23:20:45,981 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:20:46,352 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5rk6/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4206
2023-06-30 23:20:46,353 | DEBUG: Response: 200 (4206 bytes)
2023-06-30 23:20:46,354 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5oq0/
2023-06-30 23:20:46,354 | DEBUG: Data: None
2023-06-30 23:20:46,354 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:20:46,742 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5oq0/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3231
2023-06-30 23:20:46,742 | DEBUG: Response: 200 (3231 bytes)
2023-06-30 23:20:46,743 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6ptw/
2023-06-30 23:20:46,743 | DEBUG: Data: None
2023-06-30 23:20:46,743 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:20:47,139 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6ptw/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4041
2023-06-30 23:20:47,140 | DEBUG: Response: 200 (4041 bytes)
2023-06-30 23:20:47,142 | INFO: 127.0.0.1 - - [30/Jun/2023 23:20:47] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:20:47,147 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:20:47,148 | DEBUG: Data: None
2023-06-30 23:20:47,148 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:20:47,559 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 5022
2023-06-30 23:20:47,559 | DEBUG: Response: 200 (5022 bytes)
2023-06-30 23:20:47,560 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5ohy/
2023-06-30 23:20:47,560 | DEBUG: Data: None
2023-06-30 23:20:47,560 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:20:47,997 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5ohy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4647
2023-06-30 23:20:47,997 | DEBUG: Response: 200 (4647 bytes)
2023-06-30 23:20:47,998 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 23:20:47,999 | DEBUG: Data: None
2023-06-30 23:20:47,999 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:20:48,377 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3539
2023-06-30 23:20:48,377 | DEBUG: Response: 200 (3539 bytes)
2023-06-30 23:20:48,379 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5rk6/
2023-06-30 23:20:48,379 | DEBUG: Data: None
2023-06-30 23:20:48,379 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:20:48,761 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5rk6/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4206
2023-06-30 23:20:48,762 | DEBUG: Response: 200 (4206 bytes)
2023-06-30 23:20:48,763 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5oq0/
2023-06-30 23:20:48,763 | DEBUG: Data: None
2023-06-30 23:20:48,763 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:20:49,113 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5oq0/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3231
2023-06-30 23:20:49,115 | DEBUG: Response: 200 (3231 bytes)
2023-06-30 23:20:49,115 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6ptw/
2023-06-30 23:20:49,115 | DEBUG: Data: None
2023-06-30 23:20:49,115 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:20:49,480 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6ptw/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4041
2023-06-30 23:20:49,481 | DEBUG: Response: 200 (4041 bytes)
2023-06-30 23:20:49,484 | INFO: 127.0.0.1 - - [30/Jun/2023 23:20:49] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:22:20,345 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:22:20,345 | DEBUG: Data: None
2023-06-30 23:22:20,346 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:22:20,800 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 5437
2023-06-30 23:22:20,801 | DEBUG: Response: 200 (5437 bytes)
2023-06-30 23:22:20,805 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 23:22:20,805 | DEBUG: Data: None
2023-06-30 23:22:20,805 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:22:21,228 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3538
2023-06-30 23:22:21,229 | DEBUG: Response: 200 (3538 bytes)
2023-06-30 23:22:21,230 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5rk6/
2023-06-30 23:22:21,230 | DEBUG: Data: None
2023-06-30 23:22:21,230 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:22:21,593 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5rk6/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4206
2023-06-30 23:22:21,594 | DEBUG: Response: 200 (4206 bytes)
2023-06-30 23:22:21,596 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6ptw/
2023-06-30 23:22:21,596 | DEBUG: Data: None
2023-06-30 23:22:21,596 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:22:21,981 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6ptw/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4042
2023-06-30 23:22:21,982 | DEBUG: Response: 200 (4042 bytes)
2023-06-30 23:22:21,983 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6pwf/
2023-06-30 23:22:21,983 | DEBUG: Data: None
2023-06-30 23:22:21,983 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:22:22,318 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6pwf/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3904
2023-06-30 23:22:22,319 | DEBUG: Response: 200 (3904 bytes)
2023-06-30 23:22:22,320 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n66oy/
2023-06-30 23:22:22,320 | DEBUG: Data: None
2023-06-30 23:22:22,320 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:22:22,795 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n66oy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2662
2023-06-30 23:22:22,798 | DEBUG: Response: 200 (2662 bytes)
2023-06-30 23:22:22,803 | INFO: 127.0.0.1 - - [30/Jun/2023 23:22:22] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:22:33,742 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:22:33,743 | DEBUG: Data: None
2023-06-30 23:22:33,743 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:22:34,182 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 5422
2023-06-30 23:22:34,182 | DEBUG: Response: 200 (5422 bytes)
2023-06-30 23:22:34,183 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5po8/
2023-06-30 23:22:34,184 | DEBUG: Data: None
2023-06-30 23:22:34,184 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:22:34,517 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5po8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3538
2023-06-30 23:22:34,518 | DEBUG: Response: 200 (3538 bytes)
2023-06-30 23:22:34,519 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5rk6/
2023-06-30 23:22:34,519 | DEBUG: Data: None
2023-06-30 23:22:34,519 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:22:34,901 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5rk6/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4206
2023-06-30 23:22:34,901 | DEBUG: Response: 200 (4206 bytes)
2023-06-30 23:22:34,902 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6ptw/
2023-06-30 23:22:34,902 | DEBUG: Data: None
2023-06-30 23:22:34,902 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:22:35,299 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6ptw/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4042
2023-06-30 23:22:35,303 | DEBUG: Response: 200 (4042 bytes)
2023-06-30 23:22:35,303 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6pwf/
2023-06-30 23:22:35,303 | DEBUG: Data: None
2023-06-30 23:22:35,303 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:22:35,953 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6pwf/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3904
2023-06-30 23:22:35,954 | DEBUG: Response: 200 (3904 bytes)
2023-06-30 23:22:35,955 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n66oy/
2023-06-30 23:22:35,955 | DEBUG: Data: None
2023-06-30 23:22:35,955 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:22:36,346 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n66oy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2662
2023-06-30 23:22:36,348 | DEBUG: Response: 200 (2662 bytes)
2023-06-30 23:22:36,354 | INFO: 127.0.0.1 - - [30/Jun/2023 23:22:36] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:23:23,129 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:23:23,130 | DEBUG: Data: None
2023-06-30 23:23:23,130 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:23:23,629 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 5560
2023-06-30 23:23:23,634 | DEBUG: Response: 200 (5560 bytes)
2023-06-30 23:23:23,638 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5rk6/
2023-06-30 23:23:23,639 | DEBUG: Data: None
2023-06-30 23:23:23,639 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:23:24,400 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5rk6/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4203
2023-06-30 23:23:24,403 | DEBUG: Response: 200 (4203 bytes)
2023-06-30 23:23:24,404 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6ptw/
2023-06-30 23:23:24,404 | DEBUG: Data: None
2023-06-30 23:23:24,404 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:23:24,756 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6ptw/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4041
2023-06-30 23:23:24,756 | DEBUG: Response: 200 (4041 bytes)
2023-06-30 23:23:24,757 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6pwf/
2023-06-30 23:23:24,757 | DEBUG: Data: None
2023-06-30 23:23:24,757 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:23:25,117 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6pwf/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3905
2023-06-30 23:23:25,118 | DEBUG: Response: 200 (3905 bytes)
2023-06-30 23:23:25,119 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n66oy/
2023-06-30 23:23:25,119 | DEBUG: Data: None
2023-06-30 23:23:25,119 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:23:25,427 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n66oy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2663
2023-06-30 23:23:25,428 | DEBUG: Response: 200 (2663 bytes)
2023-06-30 23:23:25,429 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n668h/
2023-06-30 23:23:25,429 | DEBUG: Data: None
2023-06-30 23:23:25,429 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:23:25,819 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n668h/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4410
2023-06-30 23:23:25,819 | DEBUG: Response: 200 (4410 bytes)
2023-06-30 23:23:25,823 | INFO: 127.0.0.1 - - [30/Jun/2023 23:23:25] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:23:33,226 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:23:33,226 | DEBUG: Data: None
2023-06-30 23:23:33,226 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:23:33,712 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 5559
2023-06-30 23:23:33,713 | DEBUG: Response: 200 (5559 bytes)
2023-06-30 23:23:33,714 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5rk6/
2023-06-30 23:23:33,714 | DEBUG: Data: None
2023-06-30 23:23:33,714 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:23:34,079 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5rk6/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4203
2023-06-30 23:23:34,080 | DEBUG: Response: 200 (4203 bytes)
2023-06-30 23:23:34,080 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6ptw/
2023-06-30 23:23:34,081 | DEBUG: Data: None
2023-06-30 23:23:34,081 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:23:34,449 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6ptw/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4041
2023-06-30 23:23:34,449 | DEBUG: Response: 200 (4041 bytes)
2023-06-30 23:23:34,450 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6pwf/
2023-06-30 23:23:34,450 | DEBUG: Data: None
2023-06-30 23:23:34,450 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:23:34,812 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6pwf/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3905
2023-06-30 23:23:34,818 | DEBUG: Response: 200 (3905 bytes)
2023-06-30 23:23:34,819 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n66oy/
2023-06-30 23:23:34,819 | DEBUG: Data: None
2023-06-30 23:23:34,819 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:23:35,511 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n66oy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2662
2023-06-30 23:23:35,511 | DEBUG: Response: 200 (2662 bytes)
2023-06-30 23:23:35,512 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n668h/
2023-06-30 23:23:35,512 | DEBUG: Data: None
2023-06-30 23:23:35,512 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:23:36,097 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n668h/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4410
2023-06-30 23:23:36,098 | DEBUG: Response: 200 (4410 bytes)
2023-06-30 23:23:36,101 | INFO: 127.0.0.1 - - [30/Jun/2023 23:23:36] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:23:44,816 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:23:44,817 | DEBUG: Data: None
2023-06-30 23:23:44,817 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:23:45,203 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 5559
2023-06-30 23:23:45,204 | DEBUG: Response: 200 (5559 bytes)
2023-06-30 23:23:45,205 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5rk6/
2023-06-30 23:23:45,205 | DEBUG: Data: None
2023-06-30 23:23:45,205 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:23:45,686 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5rk6/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4203
2023-06-30 23:23:45,687 | DEBUG: Response: 200 (4203 bytes)
2023-06-30 23:23:45,688 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6ptw/
2023-06-30 23:23:45,688 | DEBUG: Data: None
2023-06-30 23:23:45,688 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:23:46,080 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6ptw/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4042
2023-06-30 23:23:46,081 | DEBUG: Response: 200 (4042 bytes)
2023-06-30 23:23:46,081 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6pwf/
2023-06-30 23:23:46,081 | DEBUG: Data: None
2023-06-30 23:23:46,081 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:23:46,752 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6pwf/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3907
2023-06-30 23:23:46,753 | DEBUG: Response: 200 (3907 bytes)
2023-06-30 23:23:46,753 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n66oy/
2023-06-30 23:23:46,754 | DEBUG: Data: None
2023-06-30 23:23:46,754 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:23:47,115 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n66oy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2663
2023-06-30 23:23:47,116 | DEBUG: Response: 200 (2663 bytes)
2023-06-30 23:23:47,117 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n668h/
2023-06-30 23:23:47,117 | DEBUG: Data: None
2023-06-30 23:23:47,117 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:23:47,509 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n668h/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4410
2023-06-30 23:23:47,510 | DEBUG: Response: 200 (4410 bytes)
2023-06-30 23:23:47,514 | INFO: 127.0.0.1 - - [30/Jun/2023 23:23:47] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:23:47,518 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:23:47,519 | DEBUG: Data: None
2023-06-30 23:23:47,519 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:23:48,303 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 5559
2023-06-30 23:23:48,303 | DEBUG: Response: 200 (5559 bytes)
2023-06-30 23:23:48,304 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5rk6/
2023-06-30 23:23:48,304 | DEBUG: Data: None
2023-06-30 23:23:48,305 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:23:48,704 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5rk6/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4203
2023-06-30 23:23:48,705 | DEBUG: Response: 200 (4203 bytes)
2023-06-30 23:23:48,706 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6ptw/
2023-06-30 23:23:48,706 | DEBUG: Data: None
2023-06-30 23:23:48,706 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:23:49,105 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6ptw/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4042
2023-06-30 23:23:49,105 | DEBUG: Response: 200 (4042 bytes)
2023-06-30 23:23:49,107 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6pwf/
2023-06-30 23:23:49,107 | DEBUG: Data: None
2023-06-30 23:23:49,107 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:23:49,557 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6pwf/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3907
2023-06-30 23:23:49,558 | DEBUG: Response: 200 (3907 bytes)
2023-06-30 23:23:49,558 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n66oy/
2023-06-30 23:23:49,558 | DEBUG: Data: None
2023-06-30 23:23:49,559 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:23:49,932 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n66oy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2663
2023-06-30 23:23:49,932 | DEBUG: Response: 200 (2663 bytes)
2023-06-30 23:23:49,933 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n668h/
2023-06-30 23:23:49,933 | DEBUG: Data: None
2023-06-30 23:23:49,933 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:23:50,310 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n668h/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4410
2023-06-30 23:23:50,313 | DEBUG: Response: 200 (4410 bytes)
2023-06-30 23:23:50,317 | INFO: 127.0.0.1 - - [30/Jun/2023 23:23:50] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:23:57,521 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:23:57,521 | DEBUG: Data: None
2023-06-30 23:23:57,521 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:23:57,906 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 5558
2023-06-30 23:23:57,906 | DEBUG: Response: 200 (5558 bytes)
2023-06-30 23:23:57,907 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5rk6/
2023-06-30 23:23:57,907 | DEBUG: Data: None
2023-06-30 23:23:57,907 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:23:58,288 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5rk6/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4203
2023-06-30 23:23:58,289 | DEBUG: Response: 200 (4203 bytes)
2023-06-30 23:23:58,290 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6ptw/
2023-06-30 23:23:58,290 | DEBUG: Data: None
2023-06-30 23:23:58,291 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:23:58,655 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6ptw/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4042
2023-06-30 23:23:58,656 | DEBUG: Response: 200 (4042 bytes)
2023-06-30 23:23:58,656 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6pwf/
2023-06-30 23:23:58,656 | DEBUG: Data: None
2023-06-30 23:23:58,656 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:23:59,533 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6pwf/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3907
2023-06-30 23:23:59,534 | DEBUG: Response: 200 (3907 bytes)
2023-06-30 23:23:59,535 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n66oy/
2023-06-30 23:23:59,535 | DEBUG: Data: None
2023-06-30 23:23:59,535 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:23:59,873 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n66oy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2663
2023-06-30 23:23:59,873 | DEBUG: Response: 200 (2663 bytes)
2023-06-30 23:23:59,874 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n668h/
2023-06-30 23:23:59,874 | DEBUG: Data: None
2023-06-30 23:23:59,874 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:24:00,254 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n668h/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4410
2023-06-30 23:24:00,255 | DEBUG: Response: 200 (4410 bytes)
2023-06-30 23:24:00,258 | INFO: 127.0.0.1 - - [30/Jun/2023 23:24:00] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:24:13,574 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:24:13,574 | DEBUG: Data: None
2023-06-30 23:24:13,574 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:24:14,036 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 5559
2023-06-30 23:24:14,037 | DEBUG: Response: 200 (5559 bytes)
2023-06-30 23:24:14,038 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5rk6/
2023-06-30 23:24:14,038 | DEBUG: Data: None
2023-06-30 23:24:14,038 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:24:14,526 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5rk6/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4204
2023-06-30 23:24:14,527 | DEBUG: Response: 200 (4204 bytes)
2023-06-30 23:24:14,528 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6ptw/
2023-06-30 23:24:14,528 | DEBUG: Data: None
2023-06-30 23:24:14,528 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:24:15,017 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6ptw/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4042
2023-06-30 23:24:15,017 | DEBUG: Response: 200 (4042 bytes)
2023-06-30 23:24:15,018 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6pwf/
2023-06-30 23:24:15,018 | DEBUG: Data: None
2023-06-30 23:24:15,018 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:24:15,408 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6pwf/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3898
2023-06-30 23:24:15,408 | DEBUG: Response: 200 (3898 bytes)
2023-06-30 23:24:15,409 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n66oy/
2023-06-30 23:24:15,409 | DEBUG: Data: None
2023-06-30 23:24:15,409 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:24:15,759 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n66oy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2662
2023-06-30 23:24:15,760 | DEBUG: Response: 200 (2662 bytes)
2023-06-30 23:24:15,761 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n668h/
2023-06-30 23:24:15,761 | DEBUG: Data: None
2023-06-30 23:24:15,761 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:24:16,151 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n668h/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4410
2023-06-30 23:24:16,152 | DEBUG: Response: 200 (4410 bytes)
2023-06-30 23:24:16,155 | INFO: 127.0.0.1 - - [30/Jun/2023 23:24:16] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:24:16,160 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:24:16,161 | DEBUG: Data: None
2023-06-30 23:24:16,161 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:24:16,666 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 5559
2023-06-30 23:24:16,668 | DEBUG: Response: 200 (5559 bytes)
2023-06-30 23:24:16,669 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5rk6/
2023-06-30 23:24:16,669 | DEBUG: Data: None
2023-06-30 23:24:16,669 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:24:17,109 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5rk6/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4204
2023-06-30 23:24:17,110 | DEBUG: Response: 200 (4204 bytes)
2023-06-30 23:24:17,111 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6ptw/
2023-06-30 23:24:17,111 | DEBUG: Data: None
2023-06-30 23:24:17,111 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:24:17,529 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6ptw/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4042
2023-06-30 23:24:17,531 | DEBUG: Response: 200 (4042 bytes)
2023-06-30 23:24:17,532 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6pwf/
2023-06-30 23:24:17,532 | DEBUG: Data: None
2023-06-30 23:24:17,532 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:24:17,942 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6pwf/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3898
2023-06-30 23:24:17,944 | DEBUG: Response: 200 (3898 bytes)
2023-06-30 23:24:17,945 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n66oy/
2023-06-30 23:24:17,945 | DEBUG: Data: None
2023-06-30 23:24:17,945 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:24:18,323 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n66oy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2662
2023-06-30 23:24:18,324 | DEBUG: Response: 200 (2662 bytes)
2023-06-30 23:24:18,324 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n668h/
2023-06-30 23:24:18,324 | DEBUG: Data: None
2023-06-30 23:24:18,324 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:24:18,691 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n668h/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4410
2023-06-30 23:24:18,692 | DEBUG: Response: 200 (4410 bytes)
2023-06-30 23:24:18,695 | INFO: 127.0.0.1 - - [30/Jun/2023 23:24:18] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:25:07,864 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:25:07,864 | DEBUG: Data: None
2023-06-30 23:25:07,864 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:25:08,291 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 5234
2023-06-30 23:25:08,292 | DEBUG: Response: 200 (5234 bytes)
2023-06-30 23:25:08,293 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6ptw/
2023-06-30 23:25:08,293 | DEBUG: Data: None
2023-06-30 23:25:08,293 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:25:08,685 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6ptw/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4041
2023-06-30 23:25:08,686 | DEBUG: Response: 200 (4041 bytes)
2023-06-30 23:25:08,686 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6pwf/
2023-06-30 23:25:08,687 | DEBUG: Data: None
2023-06-30 23:25:08,687 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:25:09,029 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6pwf/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3899
2023-06-30 23:25:09,030 | DEBUG: Response: 200 (3899 bytes)
2023-06-30 23:25:09,031 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n66oy/
2023-06-30 23:25:09,031 | DEBUG: Data: None
2023-06-30 23:25:09,031 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:25:09,349 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n66oy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2679
2023-06-30 23:25:09,350 | DEBUG: Response: 200 (2679 bytes)
2023-06-30 23:25:09,351 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n668h/
2023-06-30 23:25:09,351 | DEBUG: Data: None
2023-06-30 23:25:09,351 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:25:09,722 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n668h/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4410
2023-06-30 23:25:09,725 | DEBUG: Response: 200 (4410 bytes)
2023-06-30 23:25:09,728 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6lob/
2023-06-30 23:25:09,728 | DEBUG: Data: None
2023-06-30 23:25:09,729 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:25:10,076 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6lob/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2096
2023-06-30 23:25:10,076 | DEBUG: Response: 200 (2096 bytes)
2023-06-30 23:25:10,079 | INFO: 127.0.0.1 - - [30/Jun/2023 23:25:10] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:25:11,548 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:25:11,548 | DEBUG: Data: None
2023-06-30 23:25:11,549 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:25:11,986 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 5233
2023-06-30 23:25:11,986 | DEBUG: Response: 200 (5233 bytes)
2023-06-30 23:25:11,987 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6ptw/
2023-06-30 23:25:11,987 | DEBUG: Data: None
2023-06-30 23:25:11,987 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:25:12,358 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6ptw/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4041
2023-06-30 23:25:12,359 | DEBUG: Response: 200 (4041 bytes)
2023-06-30 23:25:12,359 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6pwf/
2023-06-30 23:25:12,360 | DEBUG: Data: None
2023-06-30 23:25:12,360 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:25:12,760 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6pwf/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3899
2023-06-30 23:25:12,761 | DEBUG: Response: 200 (3899 bytes)
2023-06-30 23:25:12,762 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n66oy/
2023-06-30 23:25:12,763 | DEBUG: Data: None
2023-06-30 23:25:12,763 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:25:13,125 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n66oy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2679
2023-06-30 23:25:13,126 | DEBUG: Response: 200 (2679 bytes)
2023-06-30 23:25:13,127 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n668h/
2023-06-30 23:25:13,127 | DEBUG: Data: None
2023-06-30 23:25:13,127 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:25:13,597 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n668h/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4410
2023-06-30 23:25:13,598 | DEBUG: Response: 200 (4410 bytes)
2023-06-30 23:25:13,599 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6lob/
2023-06-30 23:25:13,599 | DEBUG: Data: None
2023-06-30 23:25:13,599 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:25:13,916 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6lob/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2096
2023-06-30 23:25:13,917 | DEBUG: Response: 200 (2096 bytes)
2023-06-30 23:25:13,920 | INFO: 127.0.0.1 - - [30/Jun/2023 23:25:13] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:25:13,925 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:25:13,925 | DEBUG: Data: None
2023-06-30 23:25:13,925 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:25:14,311 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 5233
2023-06-30 23:25:14,315 | DEBUG: Response: 200 (5233 bytes)
2023-06-30 23:25:14,316 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6ptw/
2023-06-30 23:25:14,316 | DEBUG: Data: None
2023-06-30 23:25:14,316 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:25:14,740 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6ptw/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4041
2023-06-30 23:25:14,744 | DEBUG: Response: 200 (4041 bytes)
2023-06-30 23:25:14,745 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6pwf/
2023-06-30 23:25:14,745 | DEBUG: Data: None
2023-06-30 23:25:14,745 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:25:15,105 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6pwf/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3899
2023-06-30 23:25:15,105 | DEBUG: Response: 200 (3899 bytes)
2023-06-30 23:25:15,106 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n66oy/
2023-06-30 23:25:15,106 | DEBUG: Data: None
2023-06-30 23:25:15,106 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:25:15,522 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n66oy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2679
2023-06-30 23:25:15,523 | DEBUG: Response: 200 (2679 bytes)
2023-06-30 23:25:15,523 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n668h/
2023-06-30 23:25:15,523 | DEBUG: Data: None
2023-06-30 23:25:15,523 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:25:15,873 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n668h/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4410
2023-06-30 23:25:15,874 | DEBUG: Response: 200 (4410 bytes)
2023-06-30 23:25:15,875 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6lob/
2023-06-30 23:25:15,876 | DEBUG: Data: None
2023-06-30 23:25:15,876 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:25:16,195 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6lob/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2096
2023-06-30 23:25:16,196 | DEBUG: Response: 200 (2096 bytes)
2023-06-30 23:25:16,198 | INFO: 127.0.0.1 - - [30/Jun/2023 23:25:16] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:25:16,204 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:25:16,204 | DEBUG: Data: None
2023-06-30 23:25:16,204 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:25:16,589 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 5233
2023-06-30 23:25:16,590 | DEBUG: Response: 200 (5233 bytes)
2023-06-30 23:25:16,591 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6ptw/
2023-06-30 23:25:16,591 | DEBUG: Data: None
2023-06-30 23:25:16,591 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:25:17,001 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6ptw/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4041
2023-06-30 23:25:17,002 | DEBUG: Response: 200 (4041 bytes)
2023-06-30 23:25:17,002 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6pwf/
2023-06-30 23:25:17,003 | DEBUG: Data: None
2023-06-30 23:25:17,003 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:25:17,370 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6pwf/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3899
2023-06-30 23:25:17,371 | DEBUG: Response: 200 (3899 bytes)
2023-06-30 23:25:17,373 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n66oy/
2023-06-30 23:25:17,373 | DEBUG: Data: None
2023-06-30 23:25:17,373 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:25:17,740 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n66oy/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2679
2023-06-30 23:25:17,741 | DEBUG: Response: 200 (2679 bytes)
2023-06-30 23:25:17,741 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n668h/
2023-06-30 23:25:17,741 | DEBUG: Data: None
2023-06-30 23:25:17,741 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:25:18,125 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n668h/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4410
2023-06-30 23:25:18,126 | DEBUG: Response: 200 (4410 bytes)
2023-06-30 23:25:18,127 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6lob/
2023-06-30 23:25:18,127 | DEBUG: Data: None
2023-06-30 23:25:18,127 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:25:18,602 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6lob/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2096
2023-06-30 23:25:18,602 | DEBUG: Response: 200 (2096 bytes)
2023-06-30 23:25:18,605 | INFO: 127.0.0.1 - - [30/Jun/2023 23:25:18] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:35:32,880 | INFO: Adding job tentatively -- it will be properly scheduled when the scheduler starts
2023-06-30 23:35:32,888 | INFO: Added job "streamTickers" to job store "default"
2023-06-30 23:35:32,888 | INFO: Scheduler started
2023-06-30 23:35:32,888 | DEBUG: Looking for jobs to run
2023-06-30 23:35:32,889 | DEBUG: Next wakeup is due at 2023-07-01 00:20:32.877832+05:30 (in 2699.988240 seconds)
2023-06-30 23:35:32,889 | DEBUG: Stream Started
2023-06-30 23:35:36,228 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-06-30 23:35:36,228 | INFO: [33mPress CTRL+C to quit[0m
2023-06-30 23:38:45,073 | INFO: Adding job tentatively -- it will be properly scheduled when the scheduler starts
2023-06-30 23:38:45,073 | INFO: Added job "streamTickers" to job store "default"
2023-06-30 23:38:45,073 | INFO: Scheduler started
2023-06-30 23:38:45,074 | DEBUG: Looking for jobs to run
2023-06-30 23:38:45,074 | DEBUG: Next wakeup is due at 2023-07-01 00:23:45.073237+05:30 (in 2699.998301 seconds)
2023-06-30 23:38:45,074 | DEBUG: Stream Started
2023-06-30 23:38:47,494 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-06-30 23:38:47,494 | INFO: [33mPress CTRL+C to quit[0m
2023-06-30 23:41:09,836 | INFO: Adding job tentatively -- it will be properly scheduled when the scheduler starts
2023-06-30 23:41:09,837 | INFO: Added job "streamTickers" to job store "default"
2023-06-30 23:41:09,837 | INFO: Scheduler started
2023-06-30 23:41:09,837 | DEBUG: Looking for jobs to run
2023-06-30 23:41:09,837 | DEBUG: Stream Started
2023-06-30 23:41:09,839 | DEBUG: Next wakeup is due at 2023-07-01 00:26:09.836394+05:30 (in 2699.997392 seconds)
2023-06-30 23:41:12,373 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-06-30 23:41:12,374 | INFO: [33mPress CTRL+C to quit[0m
2023-06-30 23:45:05,996 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-06-30 23:45:05,996 | DEBUG: Data: None
2023-06-30 23:45:05,997 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-06-30 23:45:06,000 | DEBUG: Starting new HTTPS connection (1): www.reddit.com:443
2023-06-30 23:45:07,050 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 668
2023-06-30 23:45:07,056 | DEBUG: Starting new HTTPS connection (1): oauth.reddit.com:443
2023-06-30 23:45:07,509 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 6296
2023-06-30 23:45:07,510 | DEBUG: Response: 200 (6296 bytes)
2023-06-30 23:45:07,511 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6ptw/
2023-06-30 23:45:07,511 | DEBUG: Data: None
2023-06-30 23:45:07,511 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:45:07,841 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6ptw/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4031
2023-06-30 23:45:08,555 | DEBUG: Response: 200 (4031 bytes)
2023-06-30 23:45:08,557 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n795r/
2023-06-30 23:45:08,557 | DEBUG: Data: None
2023-06-30 23:45:08,557 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:45:11,638 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n795r/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3094
2023-06-30 23:45:11,769 | DEBUG: Response: 200 (3094 bytes)
2023-06-30 23:45:11,770 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6pwf/
2023-06-30 23:45:11,770 | DEBUG: Data: None
2023-06-30 23:45:11,770 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:45:12,175 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6pwf/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5450
2023-06-30 23:45:12,343 | DEBUG: Response: 200 (5450 bytes)
2023-06-30 23:45:12,344 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7b5c/
2023-06-30 23:45:12,344 | DEBUG: Data: None
2023-06-30 23:45:12,345 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:45:12,680 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7b5c/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4416
2023-06-30 23:45:12,791 | DEBUG: Response: 200 (4416 bytes)
2023-06-30 23:45:12,792 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6fow/
2023-06-30 23:45:12,792 | DEBUG: Data: None
2023-06-30 23:45:12,792 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-06-30 23:45:13,134 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6fow/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3594
2023-06-30 23:45:13,159 | DEBUG: Response: 200 (3594 bytes)
2023-06-30 23:45:13,162 | INFO: 127.0.0.1 - - [30/Jun/2023 23:45:13] "GET /topsubs/hour HTTP/1.1" 200 -
2023-06-30 23:45:55,168 | INFO: Adding job tentatively -- it will be properly scheduled when the scheduler starts
2023-06-30 23:45:55,169 | INFO: Added job "streamTickers" to job store "default"
2023-06-30 23:45:55,169 | INFO: Scheduler started
2023-06-30 23:45:55,170 | DEBUG: Looking for jobs to run
2023-06-30 23:45:55,170 | DEBUG: Next wakeup is due at 2023-07-01 00:45:55.168752+05:30 (in 3599.998300 seconds)
2023-06-30 23:46:33,393 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-06-30 23:46:33,394 | INFO: [33mPress CTRL+C to quit[0m
2023-07-01 00:15:47,183 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top
2023-07-01 00:15:47,184 | DEBUG: Data: None
2023-07-01 00:15:47,184 | DEBUG: Params: {'t': 'hour', 'limit': 5, 'raw_json': 1}
2023-07-01 00:15:47,185 | DEBUG: Starting new HTTPS connection (1): www.reddit.com:443
2023-07-01 00:15:48,016 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 670
2023-07-01 00:15:48,025 | DEBUG: Starting new HTTPS connection (1): oauth.reddit.com:443
2023-07-01 00:15:48,600 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/top?t=hour&limit=5&raw_json=1 HTTP/1.1" 200 3747
2023-07-01 00:15:48,601 | DEBUG: Response: 200 (3747 bytes)
2023-07-01 00:15:48,603 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n795r/
2023-07-01 00:15:48,603 | DEBUG: Data: None
2023-07-01 00:15:48,603 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 00:15:48,962 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n795r/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3097
2023-07-01 00:15:48,963 | DEBUG: Response: 200 (3097 bytes)
2023-07-01 00:15:48,965 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8b5y/
2023-07-01 00:15:48,965 | DEBUG: Data: None
2023-07-01 00:15:48,965 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 00:15:49,294 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8b5y/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3108
2023-07-01 00:15:49,295 | DEBUG: Response: 200 (3108 bytes)
2023-07-01 00:15:49,296 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n85e2/
2023-07-01 00:15:49,296 | DEBUG: Data: None
2023-07-01 00:15:49,296 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 00:15:49,655 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n85e2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3002
2023-07-01 00:15:49,656 | DEBUG: Response: 200 (3002 bytes)
2023-07-01 00:15:49,656 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7eyp/
2023-07-01 00:15:49,657 | DEBUG: Data: None
2023-07-01 00:15:49,657 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 00:15:50,005 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7eyp/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2658
2023-07-01 00:15:50,006 | DEBUG: Response: 200 (2658 bytes)
2023-07-01 00:15:50,006 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8bsu/
2023-07-01 00:15:50,006 | DEBUG: Data: None
2023-07-01 00:15:50,007 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 00:15:50,345 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8bsu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2499
2023-07-01 00:15:50,346 | DEBUG: Response: 200 (2499 bytes)
2023-07-01 00:15:50,349 | INFO: 127.0.0.1 - - [01/Jul/2023 00:15:50] "GET /topsubs/hour HTTP/1.1" 200 -
2023-07-01 00:52:50,128 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-01 00:52:50,128 | INFO: [33mPress CTRL+C to quit[0m
2023-07-01 00:52:57,631 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 00:52:57,631 | DEBUG: Data: None
2023-07-01 00:52:57,631 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 00:52:57,635 | DEBUG: Starting new HTTPS connection (1): www.reddit.com:443
2023-07-01 00:52:58,594 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 669
2023-07-01 00:52:58,596 | DEBUG: Starting new HTTPS connection (1): oauth.reddit.com:443
2023-07-01 00:52:59,137 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6712
2023-07-01 00:52:59,138 | DEBUG: Response: 200 (6712 bytes)
2023-07-01 00:52:59,139 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 00:52:59,139 | DEBUG: Data: None
2023-07-01 00:52:59,139 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 00:52:59,821 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-07-01 00:52:59,822 | DEBUG: Response: 200 (1801 bytes)
2023-07-01 00:52:59,822 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n9fui/
2023-07-01 00:52:59,822 | DEBUG: Data: None
2023-07-01 00:52:59,822 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 00:53:00,166 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n9fui/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3325
2023-07-01 00:53:00,167 | DEBUG: Response: 200 (3325 bytes)
2023-07-01 00:53:00,168 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 00:53:00,168 | DEBUG: Data: None
2023-07-01 00:53:00,168 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 00:53:00,519 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4443
2023-07-01 00:53:00,520 | DEBUG: Response: 200 (4443 bytes)
2023-07-01 00:53:00,521 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 00:53:00,521 | DEBUG: Data: None
2023-07-01 00:53:00,521 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 00:53:00,861 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3782
2023-07-01 00:53:00,864 | DEBUG: Response: 200 (3782 bytes)
2023-07-01 00:53:00,865 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 00:53:00,865 | DEBUG: Data: None
2023-07-01 00:53:00,865 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 00:53:01,296 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9566
2023-07-01 00:53:01,297 | DEBUG: Response: 200 (9566 bytes)
2023-07-01 00:53:01,301 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 00:53:01,301 | DEBUG: Data: None
2023-07-01 00:53:01,301 | DEBUG: Params: {'q': 'APPL', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 00:53:01,747 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=APPL&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 7029
2023-07-01 00:53:01,747 | DEBUG: Response: 200 (7029 bytes)
2023-07-01 00:53:01,748 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14my829/
2023-07-01 00:53:01,748 | DEBUG: Data: None
2023-07-01 00:53:01,748 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 00:53:03,148 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14my829/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 28516
2023-07-01 00:53:03,159 | DEBUG: Response: 200 (28516 bytes)
2023-07-01 00:53:03,172 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n0mg0/
2023-07-01 00:53:03,172 | DEBUG: Data: None
2023-07-01 00:53:03,172 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 00:53:03,947 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n0mg0/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6159
2023-07-01 00:53:03,947 | DEBUG: Response: 200 (6159 bytes)
2023-07-01 00:53:03,950 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mr848/
2023-07-01 00:53:03,950 | DEBUG: Data: None
2023-07-01 00:53:03,950 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 00:53:05,043 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mr848/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 13878
2023-07-01 00:53:05,044 | DEBUG: Response: 200 (13878 bytes)
2023-07-01 00:53:05,068 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5lfi/
2023-07-01 00:53:05,068 | DEBUG: Data: None
2023-07-01 00:53:05,068 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 00:53:05,392 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5lfi/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2521
2023-07-01 00:53:05,393 | DEBUG: Response: 200 (2521 bytes)
2023-07-01 00:53:05,394 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5oq0/
2023-07-01 00:53:05,394 | DEBUG: Data: None
2023-07-01 00:53:05,394 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 00:53:05,777 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5oq0/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3830
2023-07-01 00:53:05,778 | DEBUG: Response: 200 (3830 bytes)
2023-07-01 00:53:05,779 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 00:53:05,779 | DEBUG: Data: None
2023-07-01 00:53:05,779 | DEBUG: Params: {'q': 'GME', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 00:53:06,174 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=GME&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 00:53:06,175 | DEBUG: Response: 200 (136 bytes)
2023-07-01 00:53:06,175 | INFO: 127.0.0.1 - - [01/Jul/2023 00:53:06] "GET /watchlist?tickSelector%5B0%5D=TSLA&tickSelector%5B1%5D=APPL&tickSelector%5B2%5D=GME HTTP/1.1" 200 -
2023-07-01 00:54:38,904 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-01 00:54:38,905 | INFO: [33mPress CTRL+C to quit[0m
2023-07-01 00:54:44,214 | ERROR: Exception on /watchlist [GET]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 31, in get
    q=list(request)
TypeError: 'Request' object is not iterable
2023-07-01 00:54:44,221 | INFO: 127.0.0.1 - - [01/Jul/2023 00:54:44] "[35m[1mGET /watchlist?tickSelector%5B0%5D=TSLA&tickSelector%5B1%5D=APPL&tickSelector%5B2%5D=GME HTTP/1.1[0m" 500 -
2023-07-01 00:55:23,101 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-01 00:55:23,102 | INFO: [33mPress CTRL+C to quit[0m
2023-07-01 00:55:25,722 | INFO: 127.0.0.1 - - [01/Jul/2023 00:55:25] "GET /watchlist?tickSelector%5B0%5D=TSLA&tickSelector%5B1%5D=APPL&tickSelector%5B2%5D=GME HTTP/1.1" 200 -
2023-07-01 00:58:51,139 | INFO: 127.0.0.1 - - [01/Jul/2023 00:58:51] "GET /watchlist?ticks=%22TESLA,AAPL%22 HTTP/1.1" 200 -
2023-07-01 00:59:08,297 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-01 00:59:08,298 | INFO: [33mPress CTRL+C to quit[0m
2023-07-01 00:59:10,496 | INFO: 127.0.0.1 - - [01/Jul/2023 00:59:10] "GET /watchlist?ticks=%22TESLA,AAPL%22 HTTP/1.1" 200 -
2023-07-01 00:59:23,178 | INFO: 127.0.0.1 - - [01/Jul/2023 00:59:23] "GET /watchlist?ticks=TESLA,AAPL HTTP/1.1" 200 -
2023-07-01 00:59:49,940 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-01 00:59:49,940 | INFO: [33mPress CTRL+C to quit[0m
2023-07-01 00:59:52,721 | INFO: 127.0.0.1 - - [01/Jul/2023 00:59:52] "GET /watchlist?ticks=TESLA,AAPL HTTP/1.1" 200 -
2023-07-01 01:00:35,519 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-01 01:00:35,519 | INFO: [33mPress CTRL+C to quit[0m
2023-07-01 01:00:39,090 | INFO: 127.0.0.1 - - [01/Jul/2023 01:00:39] "GET /watchlist?ticks=TESLA,AAPL HTTP/1.1" 200 -
2023-07-01 01:01:17,206 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-01 01:01:17,206 | INFO: [33mPress CTRL+C to quit[0m
2023-07-01 01:01:25,673 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:01:25,673 | DEBUG: Data: None
2023-07-01 01:01:25,673 | DEBUG: Params: {'q': 'TESLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:01:25,676 | DEBUG: Starting new HTTPS connection (1): www.reddit.com:443
2023-07-01 01:01:26,658 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 672
2023-07-01 01:01:26,665 | DEBUG: Starting new HTTPS connection (1): oauth.reddit.com:443
2023-07-01 01:01:27,310 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TESLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 7171
2023-07-01 01:01:27,311 | DEBUG: Response: 200 (7171 bytes)
2023-07-01 01:01:27,312 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 01:01:27,312 | DEBUG: Data: None
2023-07-01 01:01:27,312 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:01:27,636 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2236
2023-07-01 01:01:27,639 | DEBUG: Response: 200 (2236 bytes)
2023-07-01 01:01:27,641 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7h9g/
2023-07-01 01:01:27,642 | DEBUG: Data: None
2023-07-01 01:01:27,642 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:01:27,968 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7h9g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2485
2023-07-01 01:01:27,969 | DEBUG: Response: 200 (2485 bytes)
2023-07-01 01:01:27,971 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n9fui/
2023-07-01 01:01:27,971 | DEBUG: Data: None
2023-07-01 01:01:27,971 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:01:28,325 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n9fui/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3740
2023-07-01 01:01:28,325 | DEBUG: Response: 200 (3740 bytes)
2023-07-01 01:01:28,327 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n6yrq/
2023-07-01 01:01:28,327 | DEBUG: Data: None
2023-07-01 01:01:28,327 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:01:28,640 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n6yrq/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5190
2023-07-01 01:01:28,642 | DEBUG: Response: 200 (5190 bytes)
2023-07-01 01:01:28,645 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 01:01:28,645 | DEBUG: Data: None
2023-07-01 01:01:28,645 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:01:28,989 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4441
2023-07-01 01:01:28,990 | DEBUG: Response: 200 (4441 bytes)
2023-07-01 01:01:28,993 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:01:28,993 | DEBUG: Data: None
2023-07-01 01:01:28,993 | DEBUG: Params: {'q': 'AAPL', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:01:29,375 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AAPL&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4763
2023-07-01 01:01:29,378 | DEBUG: Response: 200 (4763 bytes)
2023-07-01 01:01:29,380 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mvm2m/
2023-07-01 01:01:29,380 | DEBUG: Data: None
2023-07-01 01:01:29,380 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:01:31,458 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mvm2m/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 78315
2023-07-01 01:01:31,659 | DEBUG: Response: 200 (78315 bytes)
2023-07-01 01:01:31,818 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n5oq0/
2023-07-01 01:01:31,818 | DEBUG: Data: None
2023-07-01 01:01:31,818 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:01:32,221 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n5oq0/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3977
2023-07-01 01:01:32,223 | DEBUG: Response: 200 (3977 bytes)
2023-07-01 01:01:32,226 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 01:01:32,227 | DEBUG: Data: None
2023-07-01 01:01:32,227 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:01:32,565 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-07-01 01:01:32,566 | DEBUG: Response: 200 (1801 bytes)
2023-07-01 01:01:32,568 | INFO: 127.0.0.1 - - [01/Jul/2023 01:01:32] "GET /watchlist?ticks=TESLA,AAPL HTTP/1.1" 200 -
2023-07-01 01:06:47,191 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:06:47,191 | DEBUG: Data: None
2023-07-01 01:06:47,191 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:06:47,483 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 01:06:47,484 | DEBUG: Response: 200 (136 bytes)
2023-07-01 01:06:47,484 | INFO: 127.0.0.1 - - [01/Jul/2023 01:06:47] "GET /watchlist?ticksAMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 01:07:31,073 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:07:31,075 | DEBUG: Data: None
2023-07-01 01:07:31,075 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:07:31,437 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2842
2023-07-01 01:07:31,442 | DEBUG: Response: 200 (2842 bytes)
2023-07-01 01:07:31,447 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 01:07:31,448 | DEBUG: Data: None
2023-07-01 01:07:31,448 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:07:31,796 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3039
2023-07-01 01:07:31,797 | DEBUG: Response: 200 (3039 bytes)
2023-07-01 01:07:31,798 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 01:07:31,798 | DEBUG: Data: None
2023-07-01 01:07:31,798 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:07:32,141 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-07-01 01:07:32,142 | DEBUG: Response: 200 (1801 bytes)
2023-07-01 01:07:32,142 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:07:32,142 | DEBUG: Data: None
2023-07-01 01:07:32,142 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:07:32,538 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6720
2023-07-01 01:07:32,539 | DEBUG: Response: 200 (6720 bytes)
2023-07-01 01:07:32,539 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 01:07:32,540 | DEBUG: Data: None
2023-07-01 01:07:32,540 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:07:32,888 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-07-01 01:07:32,888 | DEBUG: Response: 200 (1801 bytes)
2023-07-01 01:07:32,889 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n9fui/
2023-07-01 01:07:32,889 | DEBUG: Data: None
2023-07-01 01:07:32,889 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:07:33,235 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n9fui/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4053
2023-07-01 01:07:33,237 | DEBUG: Response: 200 (4053 bytes)
2023-07-01 01:07:33,240 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 01:07:33,241 | DEBUG: Data: None
2023-07-01 01:07:33,242 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:07:33,574 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4442
2023-07-01 01:07:33,574 | DEBUG: Response: 200 (4442 bytes)
2023-07-01 01:07:33,576 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 01:07:33,576 | DEBUG: Data: None
2023-07-01 01:07:33,576 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:07:33,920 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3783
2023-07-01 01:07:33,920 | DEBUG: Response: 200 (3783 bytes)
2023-07-01 01:07:33,921 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 01:07:33,921 | DEBUG: Data: None
2023-07-01 01:07:33,921 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:07:34,392 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9575
2023-07-01 01:07:34,393 | DEBUG: Response: 200 (9575 bytes)
2023-07-01 01:07:34,396 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:07:34,396 | DEBUG: Data: None
2023-07-01 01:07:34,396 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:07:34,762 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5012
2023-07-01 01:07:34,763 | DEBUG: Response: 200 (5012 bytes)
2023-07-01 01:07:34,764 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 01:07:34,764 | DEBUG: Data: None
2023-07-01 01:07:34,764 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:07:35,294 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5024
2023-07-01 01:07:35,295 | DEBUG: Response: 200 (5024 bytes)
2023-07-01 01:07:35,296 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 01:07:35,296 | DEBUG: Data: None
2023-07-01 01:07:35,296 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:07:35,641 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2236
2023-07-01 01:07:35,641 | DEBUG: Response: 200 (2236 bytes)
2023-07-01 01:07:35,642 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 01:07:35,642 | DEBUG: Data: None
2023-07-01 01:07:35,642 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:07:36,360 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3231
2023-07-01 01:07:36,361 | DEBUG: Response: 200 (3231 bytes)
2023-07-01 01:07:36,362 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:07:36,362 | DEBUG: Data: None
2023-07-01 01:07:36,362 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:07:36,900 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 01:07:36,901 | DEBUG: Response: 200 (136 bytes)
2023-07-01 01:07:36,901 | INFO: 127.0.0.1 - - [01/Jul/2023 01:07:36] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 01:17:59,516 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-01 01:17:59,517 | INFO: [33mPress CTRL+C to quit[0m
2023-07-01 01:18:09,904 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:18:09,904 | DEBUG: Data: None
2023-07-01 01:18:09,904 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:18:09,906 | DEBUG: Starting new HTTPS connection (1): www.reddit.com:443
2023-07-01 01:18:10,709 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 666
2023-07-01 01:18:10,715 | DEBUG: Starting new HTTPS connection (1): oauth.reddit.com:443
2023-07-01 01:18:11,138 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2835
2023-07-01 01:18:11,138 | DEBUG: Response: 200 (2835 bytes)
2023-07-01 01:18:11,139 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 01:18:11,139 | DEBUG: Data: None
2023-07-01 01:18:11,139 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:18:11,500 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3041
2023-07-01 01:18:11,500 | DEBUG: Response: 200 (3041 bytes)
2023-07-01 01:18:11,501 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 01:18:11,501 | DEBUG: Data: None
2023-07-01 01:18:11,501 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:18:11,975 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-07-01 01:18:11,975 | DEBUG: Response: 200 (1801 bytes)
2023-07-01 01:18:11,976 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:18:11,976 | DEBUG: Data: None
2023-07-01 01:18:11,977 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:18:12,366 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6699
2023-07-01 01:18:12,366 | DEBUG: Response: 200 (6699 bytes)
2023-07-01 01:18:12,367 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 01:18:12,367 | DEBUG: Data: None
2023-07-01 01:18:12,367 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:18:12,713 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-07-01 01:18:12,714 | DEBUG: Response: 200 (1801 bytes)
2023-07-01 01:18:12,715 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n9fui/
2023-07-01 01:18:12,715 | DEBUG: Data: None
2023-07-01 01:18:12,715 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:18:13,054 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n9fui/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4803
2023-07-01 01:18:13,055 | DEBUG: Response: 200 (4803 bytes)
2023-07-01 01:18:13,056 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 01:18:13,056 | DEBUG: Data: None
2023-07-01 01:18:13,056 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:18:13,422 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4440
2023-07-01 01:18:13,423 | DEBUG: Response: 200 (4440 bytes)
2023-07-01 01:18:13,424 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 01:18:13,424 | DEBUG: Data: None
2023-07-01 01:18:13,424 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:18:13,822 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3782
2023-07-01 01:18:13,823 | DEBUG: Response: 200 (3782 bytes)
2023-07-01 01:18:13,823 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 01:18:13,823 | DEBUG: Data: None
2023-07-01 01:18:13,823 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:18:14,313 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9573
2023-07-01 01:18:14,316 | DEBUG: Response: 200 (9573 bytes)
2023-07-01 01:18:14,318 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:18:14,318 | DEBUG: Data: None
2023-07-01 01:18:14,318 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:18:14,734 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4997
2023-07-01 01:18:14,734 | DEBUG: Response: 200 (4997 bytes)
2023-07-01 01:18:14,735 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 01:18:14,735 | DEBUG: Data: None
2023-07-01 01:18:14,735 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:18:15,073 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5025
2023-07-01 01:18:15,073 | DEBUG: Response: 200 (5025 bytes)
2023-07-01 01:18:15,074 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 01:18:15,074 | DEBUG: Data: None
2023-07-01 01:18:15,074 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:18:15,433 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2234
2023-07-01 01:18:15,433 | DEBUG: Response: 200 (2234 bytes)
2023-07-01 01:18:15,433 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 01:18:15,434 | DEBUG: Data: None
2023-07-01 01:18:15,434 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:18:15,794 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3627
2023-07-01 01:18:15,796 | DEBUG: Response: 200 (3627 bytes)
2023-07-01 01:18:15,798 | INFO: 127.0.0.1 - - [01/Jul/2023 01:18:15] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 01:18:15,802 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:18:15,802 | DEBUG: Data: None
2023-07-01 01:18:15,802 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:18:16,188 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2842
2023-07-01 01:18:16,189 | DEBUG: Response: 200 (2842 bytes)
2023-07-01 01:18:16,190 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 01:18:16,190 | DEBUG: Data: None
2023-07-01 01:18:16,190 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:18:16,527 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3042
2023-07-01 01:18:16,528 | DEBUG: Response: 200 (3042 bytes)
2023-07-01 01:18:16,528 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 01:18:16,528 | DEBUG: Data: None
2023-07-01 01:18:16,528 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:18:16,875 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-07-01 01:18:16,875 | DEBUG: Response: 200 (1801 bytes)
2023-07-01 01:18:16,876 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:18:16,876 | DEBUG: Data: None
2023-07-01 01:18:16,876 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:18:17,236 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6708
2023-07-01 01:18:17,236 | DEBUG: Response: 200 (6708 bytes)
2023-07-01 01:18:17,237 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 01:18:17,237 | DEBUG: Data: None
2023-07-01 01:18:17,237 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:18:17,569 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-07-01 01:18:17,570 | DEBUG: Response: 200 (1801 bytes)
2023-07-01 01:18:17,571 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n9fui/
2023-07-01 01:18:17,571 | DEBUG: Data: None
2023-07-01 01:18:17,571 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:18:17,947 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n9fui/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4803
2023-07-01 01:18:17,948 | DEBUG: Response: 200 (4803 bytes)
2023-07-01 01:18:17,949 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 01:18:17,949 | DEBUG: Data: None
2023-07-01 01:18:17,949 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:18:18,320 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4440
2023-07-01 01:18:18,321 | DEBUG: Response: 200 (4440 bytes)
2023-07-01 01:18:18,322 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 01:18:18,322 | DEBUG: Data: None
2023-07-01 01:18:18,322 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:18:18,655 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3786
2023-07-01 01:18:18,658 | DEBUG: Response: 200 (3786 bytes)
2023-07-01 01:18:18,659 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 01:18:18,659 | DEBUG: Data: None
2023-07-01 01:18:18,659 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:18:19,144 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9576
2023-07-01 01:18:19,145 | DEBUG: Response: 200 (9576 bytes)
2023-07-01 01:18:19,148 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:18:19,148 | DEBUG: Data: None
2023-07-01 01:18:19,148 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:18:19,603 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4995
2023-07-01 01:18:19,603 | DEBUG: Response: 200 (4995 bytes)
2023-07-01 01:18:19,604 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 01:18:19,604 | DEBUG: Data: None
2023-07-01 01:18:19,604 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:18:19,939 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5025
2023-07-01 01:18:19,940 | DEBUG: Response: 200 (5025 bytes)
2023-07-01 01:18:19,940 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 01:18:19,940 | DEBUG: Data: None
2023-07-01 01:18:19,941 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:18:20,277 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2234
2023-07-01 01:18:20,277 | DEBUG: Response: 200 (2234 bytes)
2023-07-01 01:18:20,278 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 01:18:20,278 | DEBUG: Data: None
2023-07-01 01:18:20,278 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:18:20,609 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3623
2023-07-01 01:18:20,610 | DEBUG: Response: 200 (3623 bytes)
2023-07-01 01:18:20,611 | INFO: 127.0.0.1 - - [01/Jul/2023 01:18:20] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 01:20:20,796 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-01 01:20:20,796 | INFO: [33mPress CTRL+C to quit[0m
2023-07-01 01:20:28,099 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:20:28,099 | DEBUG: Data: None
2023-07-01 01:20:28,099 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:20:28,102 | DEBUG: Starting new HTTPS connection (1): www.reddit.com:443
2023-07-01 01:20:29,005 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 672
2023-07-01 01:20:29,010 | DEBUG: Starting new HTTPS connection (1): oauth.reddit.com:443
2023-07-01 01:20:29,393 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2836
2023-07-01 01:20:29,394 | DEBUG: Response: 200 (2836 bytes)
2023-07-01 01:20:29,394 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 01:20:29,394 | DEBUG: Data: None
2023-07-01 01:20:29,394 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:20:29,705 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3034
2023-07-01 01:20:29,706 | DEBUG: Response: 200 (3034 bytes)
2023-07-01 01:20:29,706 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 01:20:29,706 | DEBUG: Data: None
2023-07-01 01:20:29,706 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:20:30,040 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-07-01 01:20:30,041 | DEBUG: Response: 200 (1801 bytes)
2023-07-01 01:20:30,041 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:20:30,041 | DEBUG: Data: None
2023-07-01 01:20:30,041 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:20:30,423 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6682
2023-07-01 01:20:30,423 | DEBUG: Response: 200 (6682 bytes)
2023-07-01 01:20:30,424 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 01:20:30,424 | DEBUG: Data: None
2023-07-01 01:20:30,424 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:20:31,212 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-07-01 01:20:31,213 | DEBUG: Response: 200 (1801 bytes)
2023-07-01 01:20:31,213 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n9fui/
2023-07-01 01:20:31,213 | DEBUG: Data: None
2023-07-01 01:20:31,213 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:20:31,581 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n9fui/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4805
2023-07-01 01:20:31,582 | DEBUG: Response: 200 (4805 bytes)
2023-07-01 01:20:31,583 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 01:20:31,583 | DEBUG: Data: None
2023-07-01 01:20:31,583 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:20:31,905 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4442
2023-07-01 01:20:31,905 | DEBUG: Response: 200 (4442 bytes)
2023-07-01 01:20:31,906 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 01:20:31,906 | DEBUG: Data: None
2023-07-01 01:20:31,906 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:20:32,253 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3785
2023-07-01 01:20:32,254 | DEBUG: Response: 200 (3785 bytes)
2023-07-01 01:20:32,254 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 01:20:32,254 | DEBUG: Data: None
2023-07-01 01:20:32,254 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:20:32,691 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9580
2023-07-01 01:20:32,691 | DEBUG: Response: 200 (9580 bytes)
2023-07-01 01:20:32,695 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:20:32,695 | DEBUG: Data: None
2023-07-01 01:20:32,695 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:20:33,036 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5001
2023-07-01 01:20:33,037 | DEBUG: Response: 200 (5001 bytes)
2023-07-01 01:20:33,038 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 01:20:33,038 | DEBUG: Data: None
2023-07-01 01:20:33,038 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:20:33,405 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5025
2023-07-01 01:20:33,405 | DEBUG: Response: 200 (5025 bytes)
2023-07-01 01:20:33,406 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 01:20:33,406 | DEBUG: Data: None
2023-07-01 01:20:33,406 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:20:33,781 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2236
2023-07-01 01:20:33,781 | DEBUG: Response: 200 (2236 bytes)
2023-07-01 01:20:33,782 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 01:20:33,782 | DEBUG: Data: None
2023-07-01 01:20:33,782 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:20:34,127 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3623
2023-07-01 01:20:34,127 | DEBUG: Response: 200 (3623 bytes)
2023-07-01 01:20:34,129 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:20:34,129 | DEBUG: Data: None
2023-07-01 01:20:34,129 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:20:34,520 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 01:20:34,520 | DEBUG: Response: 200 (136 bytes)
2023-07-01 01:20:34,521 | INFO: 127.0.0.1 - - [01/Jul/2023 01:20:34] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 01:36:49,192 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:36:49,192 | DEBUG: Data: None
2023-07-01 01:36:49,192 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:36:49,195 | DEBUG: Resetting dropped connection: oauth.reddit.com
2023-07-01 01:36:49,992 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2842
2023-07-01 01:36:49,992 | DEBUG: Response: 200 (2842 bytes)
2023-07-01 01:36:49,993 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 01:36:49,993 | DEBUG: Data: None
2023-07-01 01:36:49,993 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:36:50,662 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3032
2023-07-01 01:36:50,664 | DEBUG: Response: 200 (3032 bytes)
2023-07-01 01:36:50,666 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 01:36:50,666 | DEBUG: Data: None
2023-07-01 01:36:50,666 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:36:51,041 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-07-01 01:36:51,043 | DEBUG: Response: 200 (1801 bytes)
2023-07-01 01:36:51,043 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:36:51,043 | DEBUG: Data: None
2023-07-01 01:36:51,043 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:36:51,455 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6709
2023-07-01 01:36:51,460 | DEBUG: Response: 200 (6709 bytes)
2023-07-01 01:36:51,461 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 01:36:51,461 | DEBUG: Data: None
2023-07-01 01:36:51,461 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:36:51,807 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-07-01 01:36:51,808 | DEBUG: Response: 200 (1801 bytes)
2023-07-01 01:36:51,808 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n9fui/
2023-07-01 01:36:51,808 | DEBUG: Data: None
2023-07-01 01:36:51,808 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:36:52,172 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n9fui/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5293
2023-07-01 01:36:52,174 | DEBUG: Response: 200 (5293 bytes)
2023-07-01 01:36:52,175 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 01:36:52,175 | DEBUG: Data: None
2023-07-01 01:36:52,175 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:36:52,505 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4444
2023-07-01 01:36:52,506 | DEBUG: Response: 200 (4444 bytes)
2023-07-01 01:36:52,507 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 01:36:52,507 | DEBUG: Data: None
2023-07-01 01:36:52,507 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:36:52,894 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3782
2023-07-01 01:36:52,895 | DEBUG: Response: 200 (3782 bytes)
2023-07-01 01:36:52,897 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 01:36:52,897 | DEBUG: Data: None
2023-07-01 01:36:52,897 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:36:53,346 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9590
2023-07-01 01:36:53,347 | DEBUG: Response: 200 (9590 bytes)
2023-07-01 01:36:53,349 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:36:53,349 | DEBUG: Data: None
2023-07-01 01:36:53,349 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:36:53,714 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5006
2023-07-01 01:36:53,715 | DEBUG: Response: 200 (5006 bytes)
2023-07-01 01:36:53,716 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 01:36:53,716 | DEBUG: Data: None
2023-07-01 01:36:53,716 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:36:54,088 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 01:36:54,088 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 01:36:54,089 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 01:36:54,089 | DEBUG: Data: None
2023-07-01 01:36:54,089 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:36:54,430 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2232
2023-07-01 01:36:54,431 | DEBUG: Response: 200 (2232 bytes)
2023-07-01 01:36:54,431 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 01:36:54,431 | DEBUG: Data: None
2023-07-01 01:36:54,431 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:36:54,845 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5192
2023-07-01 01:36:54,848 | DEBUG: Response: 200 (5192 bytes)
2023-07-01 01:36:54,851 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:36:54,851 | DEBUG: Data: None
2023-07-01 01:36:54,851 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:36:55,300 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 01:36:55,304 | DEBUG: Response: 200 (136 bytes)
2023-07-01 01:36:55,305 | INFO: 127.0.0.1 - - [01/Jul/2023 01:36:55] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 01:37:00,824 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:37:00,824 | DEBUG: Data: None
2023-07-01 01:37:00,824 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:37:01,087 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 01:37:01,088 | DEBUG: Response: 200 (136 bytes)
2023-07-01 01:37:01,088 | INFO: 127.0.0.1 - - [01/Jul/2023 01:37:01] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-01 01:37:58,650 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:37:58,650 | DEBUG: Data: None
2023-07-01 01:37:58,650 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:37:58,908 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 01:37:58,909 | DEBUG: Response: 200 (136 bytes)
2023-07-01 01:37:58,910 | INFO: 127.0.0.1 - - [01/Jul/2023 01:37:58] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-01 01:38:16,237 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:38:16,238 | DEBUG: Data: None
2023-07-01 01:38:16,238 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:38:16,345 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:38:16,345 | DEBUG: Data: None
2023-07-01 01:38:16,346 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:38:16,349 | DEBUG: Starting new HTTPS connection (2): oauth.reddit.com:443
2023-07-01 01:38:16,510 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 01:38:16,512 | DEBUG: Response: 200 (136 bytes)
2023-07-01 01:38:16,515 | INFO: 127.0.0.1 - - [01/Jul/2023 01:38:16] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-01 01:38:16,812 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2842
2023-07-01 01:38:16,819 | DEBUG: Response: 200 (2842 bytes)
2023-07-01 01:38:16,822 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 01:38:16,823 | DEBUG: Data: None
2023-07-01 01:38:16,824 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:38:16,872 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:38:16,873 | DEBUG: Data: None
2023-07-01 01:38:16,874 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:38:17,161 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3037
2023-07-01 01:38:17,166 | DEBUG: Response: 200 (3037 bytes)
2023-07-01 01:38:17,168 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 01:38:17,168 | DEBUG: Data: None
2023-07-01 01:38:17,168 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:38:17,212 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2842
2023-07-01 01:38:17,220 | DEBUG: Response: 200 (2842 bytes)
2023-07-01 01:38:17,225 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 01:38:17,225 | DEBUG: Data: None
2023-07-01 01:38:17,226 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:38:17,528 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-07-01 01:38:17,530 | DEBUG: Response: 200 (1801 bytes)
2023-07-01 01:38:17,530 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:38:17,530 | DEBUG: Data: None
2023-07-01 01:38:17,531 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:38:17,554 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3037
2023-07-01 01:38:17,555 | DEBUG: Response: 200 (3037 bytes)
2023-07-01 01:38:17,556 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 01:38:17,556 | DEBUG: Data: None
2023-07-01 01:38:17,556 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:38:17,902 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6715
2023-07-01 01:38:17,904 | DEBUG: Response: 200 (6715 bytes)
2023-07-01 01:38:17,905 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 01:38:17,905 | DEBUG: Data: None
2023-07-01 01:38:17,905 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:38:18,130 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-07-01 01:38:18,133 | DEBUG: Response: 200 (1801 bytes)
2023-07-01 01:38:18,135 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:38:18,135 | DEBUG: Data: None
2023-07-01 01:38:18,135 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:38:18,234 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-07-01 01:38:18,235 | DEBUG: Response: 200 (1801 bytes)
2023-07-01 01:38:18,235 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n9fui/
2023-07-01 01:38:18,236 | DEBUG: Data: None
2023-07-01 01:38:18,236 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:38:18,487 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6716
2023-07-01 01:38:18,488 | DEBUG: Response: 200 (6716 bytes)
2023-07-01 01:38:18,489 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 01:38:18,489 | DEBUG: Data: None
2023-07-01 01:38:18,489 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:38:18,822 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n9fui/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5293
2023-07-01 01:38:18,823 | DEBUG: Response: 200 (5293 bytes)
2023-07-01 01:38:18,824 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 01:38:18,824 | DEBUG: Data: None
2023-07-01 01:38:18,824 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:38:18,860 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-07-01 01:38:18,860 | DEBUG: Response: 200 (1801 bytes)
2023-07-01 01:38:18,861 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n9fui/
2023-07-01 01:38:18,861 | DEBUG: Data: None
2023-07-01 01:38:18,861 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:38:19,159 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4441
2023-07-01 01:38:19,159 | DEBUG: Response: 200 (4441 bytes)
2023-07-01 01:38:19,160 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 01:38:19,160 | DEBUG: Data: None
2023-07-01 01:38:19,161 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:38:19,218 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n9fui/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5293
2023-07-01 01:38:19,218 | DEBUG: Response: 200 (5293 bytes)
2023-07-01 01:38:19,220 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 01:38:19,220 | DEBUG: Data: None
2023-07-01 01:38:19,220 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:38:19,462 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3785
2023-07-01 01:38:19,463 | DEBUG: Response: 200 (3785 bytes)
2023-07-01 01:38:19,463 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 01:38:19,463 | DEBUG: Data: None
2023-07-01 01:38:19,463 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:38:19,563 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4441
2023-07-01 01:38:19,564 | DEBUG: Response: 200 (4441 bytes)
2023-07-01 01:38:19,564 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 01:38:19,564 | DEBUG: Data: None
2023-07-01 01:38:19,565 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:38:19,881 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3787
2023-07-01 01:38:19,882 | DEBUG: Response: 200 (3787 bytes)
2023-07-01 01:38:19,883 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 01:38:19,883 | DEBUG: Data: None
2023-07-01 01:38:19,883 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:38:19,936 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9581
2023-07-01 01:38:19,937 | DEBUG: Response: 200 (9581 bytes)
2023-07-01 01:38:19,940 | INFO: 127.0.0.1 - - [01/Jul/2023 01:38:19] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-01 01:38:20,476 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9588
2023-07-01 01:38:20,477 | DEBUG: Response: 200 (9588 bytes)
2023-07-01 01:38:20,480 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:38:20,480 | DEBUG: Data: None
2023-07-01 01:38:20,480 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:38:20,844 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4999
2023-07-01 01:38:20,844 | DEBUG: Response: 200 (4999 bytes)
2023-07-01 01:38:20,845 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 01:38:20,845 | DEBUG: Data: None
2023-07-01 01:38:20,845 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:38:21,204 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 01:38:21,205 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 01:38:21,206 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 01:38:21,206 | DEBUG: Data: None
2023-07-01 01:38:21,206 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:38:21,570 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2238
2023-07-01 01:38:21,570 | DEBUG: Response: 200 (2238 bytes)
2023-07-01 01:38:21,571 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 01:38:21,571 | DEBUG: Data: None
2023-07-01 01:38:21,571 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:38:21,931 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5189
2023-07-01 01:38:21,933 | DEBUG: Response: 200 (5189 bytes)
2023-07-01 01:38:21,934 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:38:21,934 | DEBUG: Data: None
2023-07-01 01:38:21,934 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:38:22,253 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 01:38:22,254 | DEBUG: Response: 200 (136 bytes)
2023-07-01 01:38:22,254 | INFO: 127.0.0.1 - - [01/Jul/2023 01:38:22] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 01:47:12,187 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:47:12,187 | DEBUG: Data: None
2023-07-01 01:47:12,188 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:47:12,568 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 3562
2023-07-01 01:47:12,569 | DEBUG: Response: 200 (3562 bytes)
2023-07-01 01:47:12,570 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 01:47:12,570 | DEBUG: Data: None
2023-07-01 01:47:12,570 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:47:12,906 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3045
2023-07-01 01:47:12,907 | DEBUG: Response: 200 (3045 bytes)
2023-07-01 01:47:12,908 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 01:47:12,908 | DEBUG: Data: None
2023-07-01 01:47:12,908 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:47:13,268 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1800
2023-07-01 01:47:13,269 | DEBUG: Response: 200 (1800 bytes)
2023-07-01 01:47:13,270 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 01:47:13,270 | DEBUG: Data: None
2023-07-01 01:47:13,270 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:47:13,612 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3158
2023-07-01 01:47:13,613 | DEBUG: Response: 200 (3158 bytes)
2023-07-01 01:47:13,614 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:47:13,614 | DEBUG: Data: None
2023-07-01 01:47:13,614 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:47:14,040 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5811
2023-07-01 01:47:14,040 | DEBUG: Response: 200 (5811 bytes)
2023-07-01 01:47:14,041 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 01:47:14,041 | DEBUG: Data: None
2023-07-01 01:47:14,041 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:47:14,392 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2783
2023-07-01 01:47:14,393 | DEBUG: Response: 200 (2783 bytes)
2023-07-01 01:47:14,393 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 01:47:14,393 | DEBUG: Data: None
2023-07-01 01:47:14,393 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:47:14,750 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1800
2023-07-01 01:47:14,752 | DEBUG: Response: 200 (1800 bytes)
2023-07-01 01:47:14,752 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n9fui/
2023-07-01 01:47:14,752 | DEBUG: Data: None
2023-07-01 01:47:14,752 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:47:15,106 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n9fui/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5289
2023-07-01 01:47:15,108 | DEBUG: Response: 200 (5289 bytes)
2023-07-01 01:47:15,109 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 01:47:15,109 | DEBUG: Data: None
2023-07-01 01:47:15,109 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:47:15,440 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4440
2023-07-01 01:47:15,441 | DEBUG: Response: 200 (4440 bytes)
2023-07-01 01:47:15,442 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 01:47:15,442 | DEBUG: Data: None
2023-07-01 01:47:15,442 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:47:15,744 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3782
2023-07-01 01:47:15,744 | DEBUG: Response: 200 (3782 bytes)
2023-07-01 01:47:15,745 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:47:15,745 | DEBUG: Data: None
2023-07-01 01:47:15,745 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:47:16,086 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5002
2023-07-01 01:47:16,087 | DEBUG: Response: 200 (5002 bytes)
2023-07-01 01:47:16,087 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 01:47:16,087 | DEBUG: Data: None
2023-07-01 01:47:16,088 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:47:16,786 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 01:47:16,786 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 01:47:16,787 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 01:47:16,787 | DEBUG: Data: None
2023-07-01 01:47:16,787 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:47:17,156 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2235
2023-07-01 01:47:17,157 | DEBUG: Response: 200 (2235 bytes)
2023-07-01 01:47:17,157 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 01:47:17,157 | DEBUG: Data: None
2023-07-01 01:47:17,158 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:47:17,531 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5198
2023-07-01 01:47:17,550 | DEBUG: Response: 200 (5198 bytes)
2023-07-01 01:47:17,554 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:47:17,554 | DEBUG: Data: None
2023-07-01 01:47:17,554 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:47:17,863 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 01:47:17,864 | DEBUG: Response: 200 (136 bytes)
2023-07-01 01:47:17,864 | INFO: 127.0.0.1 - - [01/Jul/2023 01:47:17] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 01:47:47,127 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:47:47,128 | DEBUG: Data: None
2023-07-01 01:47:47,129 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:47:47,726 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 3565
2023-07-01 01:47:47,728 | DEBUG: Response: 200 (3565 bytes)
2023-07-01 01:47:47,731 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 01:47:47,732 | DEBUG: Data: None
2023-07-01 01:47:47,732 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:47:48,059 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3045
2023-07-01 01:47:48,060 | DEBUG: Response: 200 (3045 bytes)
2023-07-01 01:47:48,060 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 01:47:48,061 | DEBUG: Data: None
2023-07-01 01:47:48,061 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:47:48,905 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1800
2023-07-01 01:47:48,905 | DEBUG: Response: 200 (1800 bytes)
2023-07-01 01:47:48,906 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 01:47:48,906 | DEBUG: Data: None
2023-07-01 01:47:48,906 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:47:49,246 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3283
2023-07-01 01:47:49,247 | DEBUG: Response: 200 (3283 bytes)
2023-07-01 01:47:49,248 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:47:49,248 | DEBUG: Data: None
2023-07-01 01:47:49,248 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:47:49,623 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6714
2023-07-01 01:47:49,624 | DEBUG: Response: 200 (6714 bytes)
2023-07-01 01:47:49,625 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 01:47:49,625 | DEBUG: Data: None
2023-07-01 01:47:49,625 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:47:49,993 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1800
2023-07-01 01:47:49,994 | DEBUG: Response: 200 (1800 bytes)
2023-07-01 01:47:49,994 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n9fui/
2023-07-01 01:47:49,995 | DEBUG: Data: None
2023-07-01 01:47:49,995 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:47:50,352 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n9fui/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5291
2023-07-01 01:47:50,352 | DEBUG: Response: 200 (5291 bytes)
2023-07-01 01:47:50,354 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 01:47:50,354 | DEBUG: Data: None
2023-07-01 01:47:50,354 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:47:50,714 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4441
2023-07-01 01:47:50,715 | DEBUG: Response: 200 (4441 bytes)
2023-07-01 01:47:50,716 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 01:47:50,716 | DEBUG: Data: None
2023-07-01 01:47:50,716 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:47:51,069 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3780
2023-07-01 01:47:51,070 | DEBUG: Response: 200 (3780 bytes)
2023-07-01 01:47:51,070 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 01:47:51,071 | DEBUG: Data: None
2023-07-01 01:47:51,071 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:47:51,512 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9587
2023-07-01 01:47:51,516 | DEBUG: Response: 200 (9587 bytes)
2023-07-01 01:47:51,519 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:47:51,519 | DEBUG: Data: None
2023-07-01 01:47:51,520 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:47:52,106 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4993
2023-07-01 01:47:52,107 | DEBUG: Response: 200 (4993 bytes)
2023-07-01 01:47:52,108 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 01:47:52,108 | DEBUG: Data: None
2023-07-01 01:47:52,108 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:47:52,427 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5030
2023-07-01 01:47:52,428 | DEBUG: Response: 200 (5030 bytes)
2023-07-01 01:47:52,429 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 01:47:52,429 | DEBUG: Data: None
2023-07-01 01:47:52,429 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:47:52,973 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2233
2023-07-01 01:47:52,973 | DEBUG: Response: 200 (2233 bytes)
2023-07-01 01:47:52,974 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 01:47:52,974 | DEBUG: Data: None
2023-07-01 01:47:52,974 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:47:53,599 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5202
2023-07-01 01:47:53,600 | DEBUG: Response: 200 (5202 bytes)
2023-07-01 01:47:53,602 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:47:53,602 | DEBUG: Data: None
2023-07-01 01:47:53,602 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:47:53,898 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 01:47:53,899 | DEBUG: Response: 200 (136 bytes)
2023-07-01 01:47:53,899 | INFO: 127.0.0.1 - - [01/Jul/2023 01:47:53] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 01:48:05,295 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:48:05,295 | DEBUG: Data: None
2023-07-01 01:48:05,295 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:48:05,658 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 3559
2023-07-01 01:48:05,661 | DEBUG: Response: 200 (3559 bytes)
2023-07-01 01:48:05,664 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 01:48:05,664 | DEBUG: Data: None
2023-07-01 01:48:05,664 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:48:06,015 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3045
2023-07-01 01:48:06,020 | DEBUG: Response: 200 (3045 bytes)
2023-07-01 01:48:06,022 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 01:48:06,022 | DEBUG: Data: None
2023-07-01 01:48:06,022 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:48:06,402 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1800
2023-07-01 01:48:06,403 | DEBUG: Response: 200 (1800 bytes)
2023-07-01 01:48:06,407 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 01:48:06,407 | DEBUG: Data: None
2023-07-01 01:48:06,407 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:48:06,779 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3283
2023-07-01 01:48:06,779 | DEBUG: Response: 200 (3283 bytes)
2023-07-01 01:48:06,780 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:48:06,780 | DEBUG: Data: None
2023-07-01 01:48:06,780 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:48:07,150 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6714
2023-07-01 01:48:07,151 | DEBUG: Response: 200 (6714 bytes)
2023-07-01 01:48:07,152 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 01:48:07,152 | DEBUG: Data: None
2023-07-01 01:48:07,152 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:48:07,528 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1800
2023-07-01 01:48:07,529 | DEBUG: Response: 200 (1800 bytes)
2023-07-01 01:48:07,530 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n9fui/
2023-07-01 01:48:07,530 | DEBUG: Data: None
2023-07-01 01:48:07,530 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:48:07,873 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n9fui/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5289
2023-07-01 01:48:07,874 | DEBUG: Response: 200 (5289 bytes)
2023-07-01 01:48:07,875 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 01:48:07,875 | DEBUG: Data: None
2023-07-01 01:48:07,875 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:48:08,272 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4441
2023-07-01 01:48:08,273 | DEBUG: Response: 200 (4441 bytes)
2023-07-01 01:48:08,274 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 01:48:08,274 | DEBUG: Data: None
2023-07-01 01:48:08,274 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:48:08,594 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3783
2023-07-01 01:48:08,594 | DEBUG: Response: 200 (3783 bytes)
2023-07-01 01:48:08,595 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 01:48:08,595 | DEBUG: Data: None
2023-07-01 01:48:08,595 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:48:09,044 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9572
2023-07-01 01:48:09,046 | DEBUG: Response: 200 (9572 bytes)
2023-07-01 01:48:09,049 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:48:09,049 | DEBUG: Data: None
2023-07-01 01:48:09,049 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:48:09,417 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4998
2023-07-01 01:48:09,418 | DEBUG: Response: 200 (4998 bytes)
2023-07-01 01:48:09,419 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 01:48:09,419 | DEBUG: Data: None
2023-07-01 01:48:09,419 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:48:09,778 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5030
2023-07-01 01:48:09,779 | DEBUG: Response: 200 (5030 bytes)
2023-07-01 01:48:09,779 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 01:48:09,779 | DEBUG: Data: None
2023-07-01 01:48:09,780 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:48:10,151 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2237
2023-07-01 01:48:10,152 | DEBUG: Response: 200 (2237 bytes)
2023-07-01 01:48:10,152 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 01:48:10,152 | DEBUG: Data: None
2023-07-01 01:48:10,152 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:48:10,849 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5199
2023-07-01 01:48:10,851 | DEBUG: Response: 200 (5199 bytes)
2023-07-01 01:48:10,852 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:48:10,852 | DEBUG: Data: None
2023-07-01 01:48:10,852 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:48:11,146 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 01:48:11,147 | DEBUG: Response: 200 (136 bytes)
2023-07-01 01:48:11,147 | INFO: 127.0.0.1 - - [01/Jul/2023 01:48:11] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 01:48:52,630 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:48:52,630 | DEBUG: Data: None
2023-07-01 01:48:52,630 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:48:53,031 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 3562
2023-07-01 01:48:53,032 | DEBUG: Response: 200 (3562 bytes)
2023-07-01 01:48:53,033 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 01:48:53,033 | DEBUG: Data: None
2023-07-01 01:48:53,033 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:48:53,355 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3046
2023-07-01 01:48:53,358 | DEBUG: Response: 200 (3046 bytes)
2023-07-01 01:48:53,360 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 01:48:53,360 | DEBUG: Data: None
2023-07-01 01:48:53,360 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:48:53,709 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1800
2023-07-01 01:48:53,710 | DEBUG: Response: 200 (1800 bytes)
2023-07-01 01:48:53,711 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 01:48:53,711 | DEBUG: Data: None
2023-07-01 01:48:53,711 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:48:54,025 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3283
2023-07-01 01:48:54,026 | DEBUG: Response: 200 (3283 bytes)
2023-07-01 01:48:54,028 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:48:54,028 | DEBUG: Data: None
2023-07-01 01:48:54,028 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:48:54,872 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5805
2023-07-01 01:48:54,873 | DEBUG: Response: 200 (5805 bytes)
2023-07-01 01:48:54,874 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 01:48:54,874 | DEBUG: Data: None
2023-07-01 01:48:54,874 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:48:55,528 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2782
2023-07-01 01:48:55,529 | DEBUG: Response: 200 (2782 bytes)
2023-07-01 01:48:55,529 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 01:48:55,529 | DEBUG: Data: None
2023-07-01 01:48:55,529 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:48:55,948 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1800
2023-07-01 01:48:55,948 | DEBUG: Response: 200 (1800 bytes)
2023-07-01 01:48:55,949 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n9fui/
2023-07-01 01:48:55,949 | DEBUG: Data: None
2023-07-01 01:48:55,949 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:48:56,324 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n9fui/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5291
2023-07-01 01:48:56,325 | DEBUG: Response: 200 (5291 bytes)
2023-07-01 01:48:56,326 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 01:48:56,326 | DEBUG: Data: None
2023-07-01 01:48:56,326 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:48:56,682 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4438
2023-07-01 01:48:56,683 | DEBUG: Response: 200 (4438 bytes)
2023-07-01 01:48:56,684 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 01:48:56,684 | DEBUG: Data: None
2023-07-01 01:48:56,684 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:48:56,981 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3785
2023-07-01 01:48:56,981 | DEBUG: Response: 200 (3785 bytes)
2023-07-01 01:48:56,981 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:48:56,981 | DEBUG: Data: None
2023-07-01 01:48:56,982 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:48:57,327 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4999
2023-07-01 01:48:57,328 | DEBUG: Response: 200 (4999 bytes)
2023-07-01 01:48:57,328 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 01:48:57,328 | DEBUG: Data: None
2023-07-01 01:48:57,328 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:48:57,681 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5030
2023-07-01 01:48:57,682 | DEBUG: Response: 200 (5030 bytes)
2023-07-01 01:48:57,682 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 01:48:57,682 | DEBUG: Data: None
2023-07-01 01:48:57,682 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:48:58,013 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2237
2023-07-01 01:48:58,014 | DEBUG: Response: 200 (2237 bytes)
2023-07-01 01:48:58,014 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 01:48:58,014 | DEBUG: Data: None
2023-07-01 01:48:58,015 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 01:48:58,386 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5202
2023-07-01 01:48:58,388 | DEBUG: Response: 200 (5202 bytes)
2023-07-01 01:48:58,389 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 01:48:58,389 | DEBUG: Data: None
2023-07-01 01:48:58,389 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 01:48:58,694 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 01:48:58,695 | DEBUG: Response: 200 (136 bytes)
2023-07-01 01:48:58,695 | INFO: 127.0.0.1 - - [01/Jul/2023 01:48:58] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 02:05:52,233 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:05:52,233 | DEBUG: Data: None
2023-07-01 02:05:52,234 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:05:52,236 | DEBUG: Resetting dropped connection: oauth.reddit.com
2023-07-01 02:05:52,349 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:05:52,349 | DEBUG: Data: None
2023-07-01 02:05:52,349 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:05:52,352 | DEBUG: Resetting dropped connection: oauth.reddit.com
2023-07-01 02:05:52,555 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 02:05:52,556 | DEBUG: Response: 200 (136 bytes)
2023-07-01 02:05:52,557 | INFO: 127.0.0.1 - - [01/Jul/2023 02:05:52] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-01 02:05:52,618 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:05:52,619 | DEBUG: Data: None
2023-07-01 02:05:52,619 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:05:52,886 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 3569
2023-07-01 02:05:52,888 | DEBUG: Response: 200 (3569 bytes)
2023-07-01 02:05:52,889 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 02:05:52,889 | DEBUG: Data: None
2023-07-01 02:05:52,889 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:05:53,089 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 3571
2023-07-01 02:05:53,089 | DEBUG: Response: 200 (3571 bytes)
2023-07-01 02:05:53,090 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 02:05:53,090 | DEBUG: Data: None
2023-07-01 02:05:53,090 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:05:53,201 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3830
2023-07-01 02:05:53,202 | DEBUG: Response: 200 (3830 bytes)
2023-07-01 02:05:53,203 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 02:05:53,203 | DEBUG: Data: None
2023-07-01 02:05:53,203 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:05:53,464 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3827
2023-07-01 02:05:53,467 | DEBUG: Response: 200 (3827 bytes)
2023-07-01 02:05:53,468 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 02:05:53,469 | DEBUG: Data: None
2023-07-01 02:05:53,469 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:05:53,523 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-07-01 02:05:53,524 | DEBUG: Response: 200 (1801 bytes)
2023-07-01 02:05:53,524 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 02:05:53,524 | DEBUG: Data: None
2023-07-01 02:05:53,524 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:05:53,809 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-07-01 02:05:53,810 | DEBUG: Response: 200 (1801 bytes)
2023-07-01 02:05:53,810 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 02:05:53,810 | DEBUG: Data: None
2023-07-01 02:05:53,810 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:05:53,837 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3475
2023-07-01 02:05:53,838 | DEBUG: Response: 200 (3475 bytes)
2023-07-01 02:05:53,839 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:05:53,839 | DEBUG: Data: None
2023-07-01 02:05:53,839 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:05:54,171 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3475
2023-07-01 02:05:54,176 | DEBUG: Response: 200 (3475 bytes)
2023-07-01 02:05:54,177 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:05:54,177 | DEBUG: Data: None
2023-07-01 02:05:54,177 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:05:54,373 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5808
2023-07-01 02:05:54,374 | DEBUG: Response: 200 (5808 bytes)
2023-07-01 02:05:54,375 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 02:05:54,375 | DEBUG: Data: None
2023-07-01 02:05:54,375 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:05:54,555 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5795
2023-07-01 02:05:54,556 | DEBUG: Response: 200 (5795 bytes)
2023-07-01 02:05:54,557 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 02:05:54,557 | DEBUG: Data: None
2023-07-01 02:05:54,557 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:05:54,727 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-07-01 02:05:54,727 | DEBUG: Response: 200 (1801 bytes)
2023-07-01 02:05:54,728 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 02:05:54,728 | DEBUG: Data: None
2023-07-01 02:05:54,728 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:05:54,899 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-07-01 02:05:54,899 | DEBUG: Response: 200 (1801 bytes)
2023-07-01 02:05:54,899 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 02:05:54,899 | DEBUG: Data: None
2023-07-01 02:05:54,899 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:05:55,071 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2934
2023-07-01 02:05:55,072 | DEBUG: Response: 200 (2934 bytes)
2023-07-01 02:05:55,073 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n9fui/
2023-07-01 02:05:55,073 | DEBUG: Data: None
2023-07-01 02:05:55,073 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:05:55,269 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2934
2023-07-01 02:05:55,270 | DEBUG: Response: 200 (2934 bytes)
2023-07-01 02:05:55,270 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n9fui/
2023-07-01 02:05:55,270 | DEBUG: Data: None
2023-07-01 02:05:55,270 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:05:55,446 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n9fui/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5289
2023-07-01 02:05:55,447 | DEBUG: Response: 200 (5289 bytes)
2023-07-01 02:05:55,448 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 02:05:55,448 | DEBUG: Data: None
2023-07-01 02:05:55,448 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:05:55,824 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4440
2023-07-01 02:05:55,824 | DEBUG: Response: 200 (4440 bytes)
2023-07-01 02:05:55,825 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 02:05:55,825 | DEBUG: Data: None
2023-07-01 02:05:55,825 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:05:55,964 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n9fui/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5289
2023-07-01 02:05:55,964 | DEBUG: Response: 200 (5289 bytes)
2023-07-01 02:05:55,965 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 02:05:55,965 | DEBUG: Data: None
2023-07-01 02:05:55,965 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:05:56,150 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3780
2023-07-01 02:05:56,151 | DEBUG: Response: 200 (3780 bytes)
2023-07-01 02:05:56,151 | INFO: 127.0.0.1 - - [01/Jul/2023 02:05:56] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-01 02:05:56,301 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4441
2023-07-01 02:05:56,302 | DEBUG: Response: 200 (4441 bytes)
2023-07-01 02:05:56,303 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 02:05:56,303 | DEBUG: Data: None
2023-07-01 02:05:56,303 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:05:56,626 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3783
2023-07-01 02:05:56,627 | DEBUG: Response: 200 (3783 bytes)
2023-07-01 02:05:56,628 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:05:56,628 | DEBUG: Data: None
2023-07-01 02:05:56,628 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:05:57,001 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4992
2023-07-01 02:05:57,002 | DEBUG: Response: 200 (4992 bytes)
2023-07-01 02:05:57,003 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 02:05:57,003 | DEBUG: Data: None
2023-07-01 02:05:57,003 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:05:57,368 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 02:05:57,369 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 02:05:57,370 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 02:05:57,370 | DEBUG: Data: None
2023-07-01 02:05:57,370 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:05:57,710 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2232
2023-07-01 02:05:57,710 | DEBUG: Response: 200 (2232 bytes)
2023-07-01 02:05:57,711 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 02:05:57,711 | DEBUG: Data: None
2023-07-01 02:05:57,711 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:05:58,066 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5815
2023-07-01 02:05:58,067 | DEBUG: Response: 200 (5815 bytes)
2023-07-01 02:05:58,069 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:05:58,069 | DEBUG: Data: None
2023-07-01 02:05:58,069 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:05:58,445 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 02:05:58,446 | DEBUG: Response: 200 (136 bytes)
2023-07-01 02:05:58,446 | INFO: 127.0.0.1 - - [01/Jul/2023 02:05:58] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 02:20:35,640 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:20:35,641 | DEBUG: Data: None
2023-07-01 02:20:35,641 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:20:35,644 | DEBUG: Resetting dropped connection: oauth.reddit.com
2023-07-01 02:20:36,034 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:20:36,034 | DEBUG: Data: None
2023-07-01 02:20:36,034 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:20:36,041 | DEBUG: Resetting dropped connection: oauth.reddit.com
2023-07-01 02:20:36,116 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4067
2023-07-01 02:20:36,119 | DEBUG: Response: 200 (4067 bytes)
2023-07-01 02:20:36,123 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 02:20:36,123 | DEBUG: Data: None
2023-07-01 02:20:36,124 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:20:36,443 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4060
2023-07-01 02:20:36,444 | DEBUG: Response: 200 (4060 bytes)
2023-07-01 02:20:36,445 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 02:20:36,445 | DEBUG: Data: None
2023-07-01 02:20:36,445 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:20:36,465 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3988
2023-07-01 02:20:36,466 | DEBUG: Response: 200 (3988 bytes)
2023-07-01 02:20:36,468 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 02:20:36,468 | DEBUG: Data: None
2023-07-01 02:20:36,468 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:20:36,806 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3986
2023-07-01 02:20:36,807 | DEBUG: Response: 200 (3986 bytes)
2023-07-01 02:20:36,809 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 02:20:36,809 | DEBUG: Data: None
2023-07-01 02:20:36,809 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:20:36,845 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3758
2023-07-01 02:20:36,848 | DEBUG: Response: 200 (3758 bytes)
2023-07-01 02:20:36,851 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 02:20:36,851 | DEBUG: Data: None
2023-07-01 02:20:36,851 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:20:37,197 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3758
2023-07-01 02:20:37,198 | DEBUG: Response: 200 (3758 bytes)
2023-07-01 02:20:37,199 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 02:20:37,199 | DEBUG: Data: None
2023-07-01 02:20:37,199 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:20:37,201 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-07-01 02:20:37,201 | DEBUG: Response: 200 (1801 bytes)
2023-07-01 02:20:37,202 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:20:37,202 | DEBUG: Data: None
2023-07-01 02:20:37,202 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:20:37,520 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 02:20:37,521 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 02:20:37,522 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:20:37,522 | DEBUG: Data: None
2023-07-01 02:20:37,522 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:20:37,566 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-07-01 02:20:37,566 | DEBUG: Response: 200 (1801 bytes)
2023-07-01 02:20:37,567 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:20:37,567 | DEBUG: Data: None
2023-07-01 02:20:37,567 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:20:37,881 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 02:20:37,882 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 02:20:37,882 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:20:37,882 | DEBUG: Data: None
2023-07-01 02:20:37,883 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:20:37,959 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4363
2023-07-01 02:20:37,961 | DEBUG: Response: 200 (4363 bytes)
2023-07-01 02:20:37,962 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 02:20:37,962 | DEBUG: Data: None
2023-07-01 02:20:37,962 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:20:38,317 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2936
2023-07-01 02:20:38,318 | DEBUG: Response: 200 (2936 bytes)
2023-07-01 02:20:38,319 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 02:20:38,319 | DEBUG: Data: None
2023-07-01 02:20:38,319 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:20:38,482 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4369
2023-07-01 02:20:38,483 | DEBUG: Response: 200 (4369 bytes)
2023-07-01 02:20:38,485 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 02:20:38,485 | DEBUG: Data: None
2023-07-01 02:20:38,485 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:20:38,676 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-07-01 02:20:38,676 | DEBUG: Response: 200 (1801 bytes)
2023-07-01 02:20:38,677 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 02:20:38,677 | DEBUG: Data: None
2023-07-01 02:20:38,677 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:20:38,814 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2936
2023-07-01 02:20:38,815 | DEBUG: Response: 200 (2936 bytes)
2023-07-01 02:20:38,816 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 02:20:38,816 | DEBUG: Data: None
2023-07-01 02:20:38,816 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:20:39,037 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3099
2023-07-01 02:20:39,038 | DEBUG: Response: 200 (3099 bytes)
2023-07-01 02:20:39,039 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:20:39,039 | DEBUG: Data: None
2023-07-01 02:20:39,039 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:20:39,156 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-07-01 02:20:39,158 | DEBUG: Response: 200 (1801 bytes)
2023-07-01 02:20:39,159 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 02:20:39,159 | DEBUG: Data: None
2023-07-01 02:20:39,159 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:20:39,347 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 02:20:39,348 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 02:20:39,349 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n9fui/
2023-07-01 02:20:39,349 | DEBUG: Data: None
2023-07-01 02:20:39,349 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:20:39,483 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3099
2023-07-01 02:20:39,483 | DEBUG: Response: 200 (3099 bytes)
2023-07-01 02:20:39,484 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:20:39,484 | DEBUG: Data: None
2023-07-01 02:20:39,484 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:20:39,745 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n9fui/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6405
2023-07-01 02:20:39,748 | DEBUG: Response: 200 (6405 bytes)
2023-07-01 02:20:39,749 | INFO: 127.0.0.1 - - [01/Jul/2023 02:20:39] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-01 02:20:39,804 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 02:20:39,805 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 02:20:39,805 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n9fui/
2023-07-01 02:20:39,805 | DEBUG: Data: None
2023-07-01 02:20:39,805 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:20:40,183 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n9fui/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6405
2023-07-01 02:20:40,183 | DEBUG: Response: 200 (6405 bytes)
2023-07-01 02:20:40,185 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:20:40,185 | DEBUG: Data: None
2023-07-01 02:20:40,185 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:20:40,606 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5001
2023-07-01 02:20:40,608 | DEBUG: Response: 200 (5001 bytes)
2023-07-01 02:20:40,609 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 02:20:40,609 | DEBUG: Data: None
2023-07-01 02:20:40,609 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:20:40,970 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 02:20:40,970 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 02:20:40,971 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 02:20:40,971 | DEBUG: Data: None
2023-07-01 02:20:40,971 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:20:41,353 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2402
2023-07-01 02:20:41,355 | DEBUG: Response: 200 (2402 bytes)
2023-07-01 02:20:41,356 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 02:20:41,357 | DEBUG: Data: None
2023-07-01 02:20:41,357 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:20:41,823 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6421
2023-07-01 02:20:41,824 | DEBUG: Response: 200 (6421 bytes)
2023-07-01 02:20:41,826 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:20:41,826 | DEBUG: Data: None
2023-07-01 02:20:41,826 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:20:42,198 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 02:20:42,199 | DEBUG: Response: 200 (136 bytes)
2023-07-01 02:20:42,199 | INFO: 127.0.0.1 - - [01/Jul/2023 02:20:42] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 02:29:11,306 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:29:11,309 | DEBUG: Data: None
2023-07-01 02:29:11,309 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:29:11,617 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 02:29:11,620 | DEBUG: Response: 200 (136 bytes)
2023-07-01 02:29:11,622 | INFO: 127.0.0.1 - - [01/Jul/2023 02:29:11] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-01 02:29:49,401 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:29:49,401 | DEBUG: Data: None
2023-07-01 02:29:49,401 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:29:49,776 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4066
2023-07-01 02:29:49,780 | DEBUG: Response: 200 (4066 bytes)
2023-07-01 02:29:49,784 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 02:29:49,784 | DEBUG: Data: None
2023-07-01 02:29:49,784 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:29:50,541 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3980
2023-07-01 02:29:50,542 | DEBUG: Response: 200 (3980 bytes)
2023-07-01 02:29:50,544 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 02:29:50,544 | DEBUG: Data: None
2023-07-01 02:29:50,544 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:29:50,936 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4160
2023-07-01 02:29:50,936 | DEBUG: Response: 200 (4160 bytes)
2023-07-01 02:29:50,938 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 02:29:50,938 | DEBUG: Data: None
2023-07-01 02:29:50,938 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:29:51,272 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-07-01 02:29:51,272 | DEBUG: Response: 200 (1801 bytes)
2023-07-01 02:29:51,273 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:29:51,273 | DEBUG: Data: None
2023-07-01 02:29:51,273 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:29:51,586 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 02:29:51,587 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 02:29:51,587 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:29:51,587 | DEBUG: Data: None
2023-07-01 02:29:51,588 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:29:51,985 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4364
2023-07-01 02:29:51,985 | DEBUG: Response: 200 (4364 bytes)
2023-07-01 02:29:51,986 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 02:29:51,986 | DEBUG: Data: None
2023-07-01 02:29:51,986 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:29:52,301 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2936
2023-07-01 02:29:52,302 | DEBUG: Response: 200 (2936 bytes)
2023-07-01 02:29:52,304 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mfgs1/
2023-07-01 02:29:52,304 | DEBUG: Data: None
2023-07-01 02:29:52,304 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:29:52,656 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mfgs1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1801
2023-07-01 02:29:52,657 | DEBUG: Response: 200 (1801 bytes)
2023-07-01 02:29:52,657 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 02:29:52,657 | DEBUG: Data: None
2023-07-01 02:29:52,657 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:29:52,987 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3233
2023-07-01 02:29:52,995 | DEBUG: Response: 200 (3233 bytes)
2023-07-01 02:29:52,995 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:29:52,996 | DEBUG: Data: None
2023-07-01 02:29:52,996 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:29:53,353 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 02:29:53,354 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 02:29:53,355 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n9fui/
2023-07-01 02:29:53,355 | DEBUG: Data: None
2023-07-01 02:29:53,355 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:29:53,786 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n9fui/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6629
2023-07-01 02:29:53,805 | DEBUG: Response: 200 (6629 bytes)
2023-07-01 02:29:53,806 | INFO: 127.0.0.1 - - [01/Jul/2023 02:29:53] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-01 02:42:43,352 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:42:43,353 | DEBUG: Data: None
2023-07-01 02:42:43,353 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:42:43,366 | DEBUG: Resetting dropped connection: oauth.reddit.com
2023-07-01 02:42:43,528 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:42:43,530 | DEBUG: Data: None
2023-07-01 02:42:43,531 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:42:43,541 | DEBUG: Resetting dropped connection: oauth.reddit.com
2023-07-01 02:42:43,957 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 02:42:43,959 | DEBUG: Response: 200 (136 bytes)
2023-07-01 02:42:43,962 | INFO: 127.0.0.1 - - [01/Jul/2023 02:42:43] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-01 02:42:43,994 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:42:43,995 | DEBUG: Data: None
2023-07-01 02:42:43,995 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:42:43,996 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 3546
2023-07-01 02:42:44,001 | DEBUG: Response: 200 (3546 bytes)
2023-07-01 02:42:44,002 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 02:42:44,002 | DEBUG: Data: None
2023-07-01 02:42:44,003 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:42:44,343 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 3556
2023-07-01 02:42:44,347 | DEBUG: Response: 200 (3556 bytes)
2023-07-01 02:42:44,353 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 02:42:44,354 | DEBUG: Data: None
2023-07-01 02:42:44,355 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:42:44,357 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4133
2023-07-01 02:42:44,371 | DEBUG: Response: 200 (4133 bytes)
2023-07-01 02:42:44,377 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 02:42:44,379 | DEBUG: Data: None
2023-07-01 02:42:44,379 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:42:44,745 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4132
2023-07-01 02:42:44,749 | DEBUG: Response: 200 (4132 bytes)
2023-07-01 02:42:44,752 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 02:42:44,752 | DEBUG: Data: None
2023-07-01 02:42:44,753 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:42:44,771 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4263
2023-07-01 02:42:44,772 | DEBUG: Response: 200 (4263 bytes)
2023-07-01 02:42:44,781 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:42:44,782 | DEBUG: Data: None
2023-07-01 02:42:44,782 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:42:45,103 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 02:42:45,104 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 02:42:45,104 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:42:45,104 | DEBUG: Data: None
2023-07-01 02:42:45,105 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:42:45,138 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4263
2023-07-01 02:42:45,144 | DEBUG: Response: 200 (4263 bytes)
2023-07-01 02:42:45,146 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:42:45,146 | DEBUG: Data: None
2023-07-01 02:42:45,146 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:42:45,458 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 02:42:45,459 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 02:42:45,459 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:42:45,459 | DEBUG: Data: None
2023-07-01 02:42:45,459 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:42:45,486 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5600
2023-07-01 02:42:45,489 | DEBUG: Response: 200 (5600 bytes)
2023-07-01 02:42:45,490 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 02:42:45,490 | DEBUG: Data: None
2023-07-01 02:42:45,490 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:42:45,824 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3174
2023-07-01 02:42:45,826 | DEBUG: Response: 200 (3174 bytes)
2023-07-01 02:42:45,827 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 02:42:45,827 | DEBUG: Data: None
2023-07-01 02:42:45,827 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:42:45,837 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5588
2023-07-01 02:42:45,840 | DEBUG: Response: 200 (5588 bytes)
2023-07-01 02:42:45,841 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 02:42:45,841 | DEBUG: Data: None
2023-07-01 02:42:45,841 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:42:46,164 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3242
2023-07-01 02:42:46,165 | DEBUG: Response: 200 (3242 bytes)
2023-07-01 02:42:46,166 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:42:46,166 | DEBUG: Data: None
2023-07-01 02:42:46,166 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:42:46,216 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3174
2023-07-01 02:42:46,217 | DEBUG: Response: 200 (3174 bytes)
2023-07-01 02:42:46,217 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 02:42:46,217 | DEBUG: Data: None
2023-07-01 02:42:46,218 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:42:46,459 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 02:42:46,460 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 02:42:46,460 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 02:42:46,460 | DEBUG: Data: None
2023-07-01 02:42:46,461 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:42:46,568 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3242
2023-07-01 02:42:46,569 | DEBUG: Response: 200 (3242 bytes)
2023-07-01 02:42:46,570 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:42:46,570 | DEBUG: Data: None
2023-07-01 02:42:46,570 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:42:46,788 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4441
2023-07-01 02:42:46,789 | DEBUG: Response: 200 (4441 bytes)
2023-07-01 02:42:46,790 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 02:42:46,790 | DEBUG: Data: None
2023-07-01 02:42:46,790 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:42:46,891 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 02:42:46,892 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 02:42:46,893 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 02:42:46,893 | DEBUG: Data: None
2023-07-01 02:42:46,893 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:42:47,092 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3782
2023-07-01 02:42:47,092 | DEBUG: Response: 200 (3782 bytes)
2023-07-01 02:42:47,093 | INFO: 127.0.0.1 - - [01/Jul/2023 02:42:47] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-01 02:42:47,242 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4441
2023-07-01 02:42:47,243 | DEBUG: Response: 200 (4441 bytes)
2023-07-01 02:42:47,244 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 02:42:47,244 | DEBUG: Data: None
2023-07-01 02:42:47,244 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:42:47,779 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3782
2023-07-01 02:42:47,780 | DEBUG: Response: 200 (3782 bytes)
2023-07-01 02:42:47,781 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:42:47,781 | DEBUG: Data: None
2023-07-01 02:42:47,781 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:42:48,305 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4990
2023-07-01 02:42:48,306 | DEBUG: Response: 200 (4990 bytes)
2023-07-01 02:42:48,306 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 02:42:48,306 | DEBUG: Data: None
2023-07-01 02:42:48,306 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:42:48,683 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 02:42:48,683 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 02:42:48,684 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 02:42:48,684 | DEBUG: Data: None
2023-07-01 02:42:48,684 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:42:49,030 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2396
2023-07-01 02:42:49,031 | DEBUG: Response: 200 (2396 bytes)
2023-07-01 02:42:49,032 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 02:42:49,032 | DEBUG: Data: None
2023-07-01 02:42:49,032 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:42:49,406 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6420
2023-07-01 02:42:49,407 | DEBUG: Response: 200 (6420 bytes)
2023-07-01 02:42:49,409 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:42:49,409 | DEBUG: Data: None
2023-07-01 02:42:49,409 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:42:49,797 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 02:42:49,798 | DEBUG: Response: 200 (136 bytes)
2023-07-01 02:42:49,799 | INFO: 127.0.0.1 - - [01/Jul/2023 02:42:49] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 02:43:20,864 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:43:20,866 | DEBUG: Data: None
2023-07-01 02:43:20,866 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:43:21,158 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 02:43:21,162 | DEBUG: Response: 200 (136 bytes)
2023-07-01 02:43:21,166 | INFO: 127.0.0.1 - - [01/Jul/2023 02:43:21] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-01 02:43:21,175 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:43:21,176 | DEBUG: Data: None
2023-07-01 02:43:21,176 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:43:21,635 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 3560
2023-07-01 02:43:21,641 | DEBUG: Response: 200 (3560 bytes)
2023-07-01 02:43:21,644 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 02:43:21,646 | DEBUG: Data: None
2023-07-01 02:43:21,647 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:43:21,793 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:43:21,794 | DEBUG: Data: None
2023-07-01 02:43:21,794 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:43:22,021 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4264
2023-07-01 02:43:22,022 | DEBUG: Response: 200 (4264 bytes)
2023-07-01 02:43:22,024 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 02:43:22,024 | DEBUG: Data: None
2023-07-01 02:43:22,024 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:43:22,164 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 3556
2023-07-01 02:43:22,171 | DEBUG: Response: 200 (3556 bytes)
2023-07-01 02:43:22,174 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 02:43:22,175 | DEBUG: Data: None
2023-07-01 02:43:22,175 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:43:22,375 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4193
2023-07-01 02:43:22,377 | DEBUG: Response: 200 (4193 bytes)
2023-07-01 02:43:22,380 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:43:22,381 | DEBUG: Data: None
2023-07-01 02:43:22,381 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:43:22,528 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4136
2023-07-01 02:43:22,529 | DEBUG: Response: 200 (4136 bytes)
2023-07-01 02:43:22,530 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 02:43:22,531 | DEBUG: Data: None
2023-07-01 02:43:22,531 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:43:22,675 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 02:43:22,677 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 02:43:22,677 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:43:22,677 | DEBUG: Data: None
2023-07-01 02:43:22,677 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:43:23,073 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5605
2023-07-01 02:43:23,074 | DEBUG: Response: 200 (5605 bytes)
2023-07-01 02:43:23,075 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 02:43:23,075 | DEBUG: Data: None
2023-07-01 02:43:23,075 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:43:23,087 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4264
2023-07-01 02:43:23,088 | DEBUG: Response: 200 (4264 bytes)
2023-07-01 02:43:23,091 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:43:23,091 | DEBUG: Data: None
2023-07-01 02:43:23,091 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:43:23,429 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 02:43:23,430 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 02:43:23,431 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:43:23,431 | DEBUG: Data: None
2023-07-01 02:43:23,431 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:43:23,431 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3175
2023-07-01 02:43:23,432 | DEBUG: Response: 200 (3175 bytes)
2023-07-01 02:43:23,433 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 02:43:23,433 | DEBUG: Data: None
2023-07-01 02:43:23,433 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:43:23,750 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3243
2023-07-01 02:43:23,750 | DEBUG: Response: 200 (3243 bytes)
2023-07-01 02:43:23,751 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:43:23,751 | DEBUG: Data: None
2023-07-01 02:43:23,751 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:43:23,793 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5604
2023-07-01 02:43:23,793 | DEBUG: Response: 200 (5604 bytes)
2023-07-01 02:43:23,794 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 02:43:23,794 | DEBUG: Data: None
2023-07-01 02:43:23,794 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:43:24,076 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 02:43:24,076 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 02:43:24,077 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 02:43:24,077 | DEBUG: Data: None
2023-07-01 02:43:24,077 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:43:24,141 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3175
2023-07-01 02:43:24,141 | DEBUG: Response: 200 (3175 bytes)
2023-07-01 02:43:24,142 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 02:43:24,142 | DEBUG: Data: None
2023-07-01 02:43:24,142 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:43:24,447 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4439
2023-07-01 02:43:24,449 | DEBUG: Response: 200 (4439 bytes)
2023-07-01 02:43:24,451 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 02:43:24,451 | DEBUG: Data: None
2023-07-01 02:43:24,452 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:43:24,478 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3243
2023-07-01 02:43:24,482 | DEBUG: Response: 200 (3243 bytes)
2023-07-01 02:43:24,485 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:43:24,485 | DEBUG: Data: None
2023-07-01 02:43:24,485 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:43:24,771 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3786
2023-07-01 02:43:24,772 | DEBUG: Response: 200 (3786 bytes)
2023-07-01 02:43:24,773 | INFO: 127.0.0.1 - - [01/Jul/2023 02:43:24] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-01 02:43:24,834 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 02:43:24,836 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 02:43:24,837 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 02:43:24,838 | DEBUG: Data: None
2023-07-01 02:43:24,838 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:43:25,167 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4439
2023-07-01 02:43:25,168 | DEBUG: Response: 200 (4439 bytes)
2023-07-01 02:43:25,169 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 02:43:25,169 | DEBUG: Data: None
2023-07-01 02:43:25,169 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:43:25,504 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3783
2023-07-01 02:43:25,506 | DEBUG: Response: 200 (3783 bytes)
2023-07-01 02:43:25,508 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:43:25,508 | DEBUG: Data: None
2023-07-01 02:43:25,508 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:43:25,846 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4999
2023-07-01 02:43:25,847 | DEBUG: Response: 200 (4999 bytes)
2023-07-01 02:43:25,849 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 02:43:25,849 | DEBUG: Data: None
2023-07-01 02:43:25,849 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:43:26,193 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 02:43:26,194 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 02:43:26,195 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 02:43:26,195 | DEBUG: Data: None
2023-07-01 02:43:26,195 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:43:26,572 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2396
2023-07-01 02:43:26,572 | DEBUG: Response: 200 (2396 bytes)
2023-07-01 02:43:26,573 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 02:43:26,573 | DEBUG: Data: None
2023-07-01 02:43:26,574 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:43:26,947 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6417
2023-07-01 02:43:26,948 | DEBUG: Response: 200 (6417 bytes)
2023-07-01 02:43:26,950 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:43:26,950 | DEBUG: Data: None
2023-07-01 02:43:26,950 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:43:27,287 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 02:43:27,287 | DEBUG: Response: 200 (136 bytes)
2023-07-01 02:43:27,288 | INFO: 127.0.0.1 - - [01/Jul/2023 02:43:27] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 02:45:16,189 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:45:16,190 | DEBUG: Data: None
2023-07-01 02:45:16,190 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:45:16,592 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 3630
2023-07-01 02:45:16,594 | DEBUG: Response: 200 (3630 bytes)
2023-07-01 02:45:16,598 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 02:45:16,599 | DEBUG: Data: None
2023-07-01 02:45:16,599 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:45:16,973 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4132
2023-07-01 02:45:16,974 | DEBUG: Response: 200 (4132 bytes)
2023-07-01 02:45:16,975 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 02:45:16,975 | DEBUG: Data: None
2023-07-01 02:45:16,975 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:45:17,385 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4264
2023-07-01 02:45:17,386 | DEBUG: Response: 200 (4264 bytes)
2023-07-01 02:45:17,387 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:45:17,387 | DEBUG: Data: None
2023-07-01 02:45:17,387 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:45:17,707 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 02:45:17,707 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 02:45:17,708 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:45:17,708 | DEBUG: Data: None
2023-07-01 02:45:17,708 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:45:18,083 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5602
2023-07-01 02:45:18,084 | DEBUG: Response: 200 (5602 bytes)
2023-07-01 02:45:18,085 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 02:45:18,085 | DEBUG: Data: None
2023-07-01 02:45:18,085 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:45:18,429 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3174
2023-07-01 02:45:18,430 | DEBUG: Response: 200 (3174 bytes)
2023-07-01 02:45:18,430 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 02:45:18,430 | DEBUG: Data: None
2023-07-01 02:45:18,430 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:45:18,807 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3241
2023-07-01 02:45:18,809 | DEBUG: Response: 200 (3241 bytes)
2023-07-01 02:45:18,810 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:45:18,810 | DEBUG: Data: None
2023-07-01 02:45:18,810 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:45:19,131 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 02:45:19,132 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 02:45:19,132 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 02:45:19,133 | DEBUG: Data: None
2023-07-01 02:45:19,133 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:45:19,474 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4441
2023-07-01 02:45:19,475 | DEBUG: Response: 200 (4441 bytes)
2023-07-01 02:45:19,476 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 02:45:19,476 | DEBUG: Data: None
2023-07-01 02:45:19,476 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:45:19,774 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3785
2023-07-01 02:45:19,774 | DEBUG: Response: 200 (3785 bytes)
2023-07-01 02:45:19,775 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:45:19,775 | DEBUG: Data: None
2023-07-01 02:45:19,775 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:45:20,226 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4997
2023-07-01 02:45:20,228 | DEBUG: Response: 200 (4997 bytes)
2023-07-01 02:45:20,229 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 02:45:20,230 | DEBUG: Data: None
2023-07-01 02:45:20,230 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:45:20,771 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5030
2023-07-01 02:45:20,773 | DEBUG: Response: 200 (5030 bytes)
2023-07-01 02:45:20,774 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 02:45:20,774 | DEBUG: Data: None
2023-07-01 02:45:20,774 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:45:21,117 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2396
2023-07-01 02:45:21,117 | DEBUG: Response: 200 (2396 bytes)
2023-07-01 02:45:21,118 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 02:45:21,118 | DEBUG: Data: None
2023-07-01 02:45:21,118 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:45:21,794 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6414
2023-07-01 02:45:21,795 | DEBUG: Response: 200 (6414 bytes)
2023-07-01 02:45:21,797 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:45:21,797 | DEBUG: Data: None
2023-07-01 02:45:21,797 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:45:22,185 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 02:45:22,185 | DEBUG: Response: 200 (136 bytes)
2023-07-01 02:45:22,186 | INFO: 127.0.0.1 - - [01/Jul/2023 02:45:22] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 02:45:47,020 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:45:47,021 | DEBUG: Data: None
2023-07-01 02:45:47,021 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:45:47,380 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 3562
2023-07-01 02:45:47,385 | DEBUG: Response: 200 (3562 bytes)
2023-07-01 02:45:47,392 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 02:45:47,394 | DEBUG: Data: None
2023-07-01 02:45:47,395 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:45:47,750 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4192
2023-07-01 02:45:47,753 | DEBUG: Response: 200 (4192 bytes)
2023-07-01 02:45:47,757 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 02:45:47,757 | DEBUG: Data: None
2023-07-01 02:45:47,757 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:45:48,105 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4264
2023-07-01 02:45:48,106 | DEBUG: Response: 200 (4264 bytes)
2023-07-01 02:45:48,107 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:45:48,107 | DEBUG: Data: None
2023-07-01 02:45:48,107 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:45:48,429 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 02:45:48,430 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 02:45:48,430 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:45:48,431 | DEBUG: Data: None
2023-07-01 02:45:48,431 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:45:48,810 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5589
2023-07-01 02:45:48,811 | DEBUG: Response: 200 (5589 bytes)
2023-07-01 02:45:48,812 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 02:45:48,812 | DEBUG: Data: None
2023-07-01 02:45:48,812 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:45:49,166 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3175
2023-07-01 02:45:49,167 | DEBUG: Response: 200 (3175 bytes)
2023-07-01 02:45:49,168 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 02:45:49,168 | DEBUG: Data: None
2023-07-01 02:45:49,168 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:45:49,514 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3242
2023-07-01 02:45:49,515 | DEBUG: Response: 200 (3242 bytes)
2023-07-01 02:45:49,517 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:45:49,517 | DEBUG: Data: None
2023-07-01 02:45:49,517 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:45:49,834 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 02:45:49,834 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 02:45:49,835 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 02:45:49,835 | DEBUG: Data: None
2023-07-01 02:45:49,835 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:45:50,183 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4441
2023-07-01 02:45:50,184 | DEBUG: Response: 200 (4441 bytes)
2023-07-01 02:45:50,187 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 02:45:50,187 | DEBUG: Data: None
2023-07-01 02:45:50,187 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:45:50,746 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3784
2023-07-01 02:45:50,746 | DEBUG: Response: 200 (3784 bytes)
2023-07-01 02:45:50,747 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:45:50,747 | DEBUG: Data: None
2023-07-01 02:45:50,747 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:45:51,095 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4998
2023-07-01 02:45:51,096 | DEBUG: Response: 200 (4998 bytes)
2023-07-01 02:45:51,097 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 02:45:51,097 | DEBUG: Data: None
2023-07-01 02:45:51,097 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:45:51,455 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5030
2023-07-01 02:45:51,456 | DEBUG: Response: 200 (5030 bytes)
2023-07-01 02:45:51,456 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 02:45:51,456 | DEBUG: Data: None
2023-07-01 02:45:51,456 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:45:51,812 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2401
2023-07-01 02:45:51,812 | DEBUG: Response: 200 (2401 bytes)
2023-07-01 02:45:51,813 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 02:45:51,813 | DEBUG: Data: None
2023-07-01 02:45:51,813 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:45:52,232 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6419
2023-07-01 02:45:52,233 | DEBUG: Response: 200 (6419 bytes)
2023-07-01 02:45:52,234 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:45:52,234 | DEBUG: Data: None
2023-07-01 02:45:52,234 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:45:52,550 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 02:45:52,551 | DEBUG: Response: 200 (136 bytes)
2023-07-01 02:45:52,552 | INFO: 127.0.0.1 - - [01/Jul/2023 02:45:52] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 02:46:12,439 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:46:12,440 | DEBUG: Data: None
2023-07-01 02:46:12,440 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:46:12,796 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 3561
2023-07-01 02:46:12,797 | DEBUG: Response: 200 (3561 bytes)
2023-07-01 02:46:12,798 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 02:46:12,798 | DEBUG: Data: None
2023-07-01 02:46:12,798 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:46:13,148 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4194
2023-07-01 02:46:13,148 | DEBUG: Response: 200 (4194 bytes)
2023-07-01 02:46:13,150 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 02:46:13,150 | DEBUG: Data: None
2023-07-01 02:46:13,150 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:46:13,545 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4265
2023-07-01 02:46:13,546 | DEBUG: Response: 200 (4265 bytes)
2023-07-01 02:46:13,548 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:46:13,548 | DEBUG: Data: None
2023-07-01 02:46:13,548 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:46:13,846 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 02:46:13,847 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 02:46:13,848 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:46:13,848 | DEBUG: Data: None
2023-07-01 02:46:13,848 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:46:14,278 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5601
2023-07-01 02:46:14,279 | DEBUG: Response: 200 (5601 bytes)
2023-07-01 02:46:14,280 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 02:46:14,280 | DEBUG: Data: None
2023-07-01 02:46:14,280 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:46:14,960 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3175
2023-07-01 02:46:14,961 | DEBUG: Response: 200 (3175 bytes)
2023-07-01 02:46:14,961 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 02:46:14,962 | DEBUG: Data: None
2023-07-01 02:46:14,962 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:46:15,374 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3242
2023-07-01 02:46:15,381 | DEBUG: Response: 200 (3242 bytes)
2023-07-01 02:46:15,382 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:46:15,382 | DEBUG: Data: None
2023-07-01 02:46:15,382 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:46:15,754 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 02:46:15,755 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 02:46:15,756 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 02:46:15,756 | DEBUG: Data: None
2023-07-01 02:46:15,756 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:46:16,098 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4440
2023-07-01 02:46:16,099 | DEBUG: Response: 200 (4440 bytes)
2023-07-01 02:46:16,100 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 02:46:16,100 | DEBUG: Data: None
2023-07-01 02:46:16,100 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:46:16,437 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3787
2023-07-01 02:46:16,438 | DEBUG: Response: 200 (3787 bytes)
2023-07-01 02:46:16,438 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:46:16,438 | DEBUG: Data: None
2023-07-01 02:46:16,438 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:46:16,791 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4998
2023-07-01 02:46:16,793 | DEBUG: Response: 200 (4998 bytes)
2023-07-01 02:46:16,795 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 02:46:16,795 | DEBUG: Data: None
2023-07-01 02:46:16,795 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:46:17,155 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 02:46:17,156 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 02:46:17,156 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 02:46:17,156 | DEBUG: Data: None
2023-07-01 02:46:17,156 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:46:17,502 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2395
2023-07-01 02:46:17,502 | DEBUG: Response: 200 (2395 bytes)
2023-07-01 02:46:17,503 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 02:46:17,503 | DEBUG: Data: None
2023-07-01 02:46:17,503 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:46:17,973 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6419
2023-07-01 02:46:17,974 | DEBUG: Response: 200 (6419 bytes)
2023-07-01 02:46:17,975 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:46:17,975 | DEBUG: Data: None
2023-07-01 02:46:17,976 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:46:18,275 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 02:46:18,275 | DEBUG: Response: 200 (136 bytes)
2023-07-01 02:46:18,276 | INFO: 127.0.0.1 - - [01/Jul/2023 02:46:18] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 02:56:13,247 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:56:13,249 | DEBUG: Data: None
2023-07-01 02:56:13,249 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:56:13,593 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:56:13,594 | DEBUG: Data: None
2023-07-01 02:56:13,594 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:56:13,627 | WARNING: Retrying due to ConnectionError(ProtocolError('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))) status: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:56:13,631 | DEBUG: Sleeping: 1.46 seconds prior to retry
2023-07-01 02:56:13,656 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4375
2023-07-01 02:56:13,659 | DEBUG: Response: 200 (4375 bytes)
2023-07-01 02:56:13,662 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 02:56:13,662 | DEBUG: Data: None
2023-07-01 02:56:13,662 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:56:14,059 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4810
2023-07-01 02:56:14,061 | DEBUG: Response: 200 (4810 bytes)
2023-07-01 02:56:14,064 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 02:56:14,064 | DEBUG: Data: None
2023-07-01 02:56:14,064 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:56:14,728 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4128
2023-07-01 02:56:14,729 | DEBUG: Response: 200 (4128 bytes)
2023-07-01 02:56:14,730 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:56:14,730 | DEBUG: Data: None
2023-07-01 02:56:14,730 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:56:15,062 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1793
2023-07-01 02:56:15,063 | DEBUG: Response: 200 (1793 bytes)
2023-07-01 02:56:15,063 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 02:56:15,064 | DEBUG: Data: None
2023-07-01 02:56:15,064 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:56:15,099 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:56:15,099 | DEBUG: Data: None
2023-07-01 02:56:15,099 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:56:15,100 | DEBUG: Starting new HTTPS connection (3): oauth.reddit.com:443
2023-07-01 02:56:15,359 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1730
2023-07-01 02:56:15,362 | DEBUG: Response: 200 (1730 bytes)
2023-07-01 02:56:15,364 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:56:15,364 | DEBUG: Data: None
2023-07-01 02:56:15,364 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:56:15,527 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4375
2023-07-01 02:56:15,528 | DEBUG: Response: 200 (4375 bytes)
2023-07-01 02:56:15,528 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 02:56:15,528 | DEBUG: Data: None
2023-07-01 02:56:15,529 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:56:15,813 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5599
2023-07-01 02:56:15,814 | DEBUG: Response: 200 (5599 bytes)
2023-07-01 02:56:15,817 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 02:56:15,817 | DEBUG: Data: None
2023-07-01 02:56:15,817 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:56:15,938 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4810
2023-07-01 02:56:15,940 | DEBUG: Response: 200 (4810 bytes)
2023-07-01 02:56:15,942 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 02:56:15,942 | DEBUG: Data: None
2023-07-01 02:56:15,942 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:56:16,166 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3174
2023-07-01 02:56:16,167 | DEBUG: Response: 200 (3174 bytes)
2023-07-01 02:56:16,168 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 02:56:16,168 | DEBUG: Data: None
2023-07-01 02:56:16,168 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:56:16,295 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4130
2023-07-01 02:56:16,297 | DEBUG: Response: 200 (4130 bytes)
2023-07-01 02:56:16,298 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:56:16,298 | DEBUG: Data: None
2023-07-01 02:56:16,298 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:56:16,642 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1793
2023-07-01 02:56:16,643 | DEBUG: Response: 200 (1793 bytes)
2023-07-01 02:56:16,644 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 02:56:16,644 | DEBUG: Data: None
2023-07-01 02:56:16,644 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:56:16,865 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3243
2023-07-01 02:56:16,866 | DEBUG: Response: 200 (3243 bytes)
2023-07-01 02:56:16,867 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:56:16,867 | DEBUG: Data: None
2023-07-01 02:56:16,868 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:56:16,951 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1730
2023-07-01 02:56:16,952 | DEBUG: Response: 200 (1730 bytes)
2023-07-01 02:56:16,952 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:56:16,952 | DEBUG: Data: None
2023-07-01 02:56:16,952 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:56:17,310 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1793
2023-07-01 02:56:17,310 | DEBUG: Response: 200 (1793 bytes)
2023-07-01 02:56:17,311 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 02:56:17,311 | DEBUG: Data: None
2023-07-01 02:56:17,311 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:56:17,434 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5603
2023-07-01 02:56:17,435 | DEBUG: Response: 200 (5603 bytes)
2023-07-01 02:56:17,436 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 02:56:17,436 | DEBUG: Data: None
2023-07-01 02:56:17,436 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:56:17,654 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4441
2023-07-01 02:56:17,655 | DEBUG: Response: 200 (4441 bytes)
2023-07-01 02:56:17,656 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 02:56:17,656 | DEBUG: Data: None
2023-07-01 02:56:17,656 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:56:17,785 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3174
2023-07-01 02:56:17,787 | DEBUG: Response: 200 (3174 bytes)
2023-07-01 02:56:17,789 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 02:56:17,789 | DEBUG: Data: None
2023-07-01 02:56:17,789 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:56:18,064 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3787
2023-07-01 02:56:18,065 | DEBUG: Response: 200 (3787 bytes)
2023-07-01 02:56:18,067 | INFO: 127.0.0.1 - - [01/Jul/2023 02:56:18] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-01 02:56:18,203 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3243
2023-07-01 02:56:18,204 | DEBUG: Response: 200 (3243 bytes)
2023-07-01 02:56:18,205 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:56:18,205 | DEBUG: Data: None
2023-07-01 02:56:18,205 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:56:18,518 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1793
2023-07-01 02:56:18,519 | DEBUG: Response: 200 (1793 bytes)
2023-07-01 02:56:18,519 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 02:56:18,519 | DEBUG: Data: None
2023-07-01 02:56:18,519 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:56:18,855 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4440
2023-07-01 02:56:18,856 | DEBUG: Response: 200 (4440 bytes)
2023-07-01 02:56:18,857 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 02:56:18,857 | DEBUG: Data: None
2023-07-01 02:56:18,857 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:56:19,167 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3784
2023-07-01 02:56:19,168 | DEBUG: Response: 200 (3784 bytes)
2023-07-01 02:56:19,169 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:56:19,169 | DEBUG: Data: None
2023-07-01 02:56:19,169 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:56:19,952 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4989
2023-07-01 02:56:19,953 | DEBUG: Response: 200 (4989 bytes)
2023-07-01 02:56:19,954 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 02:56:19,954 | DEBUG: Data: None
2023-07-01 02:56:19,954 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:56:20,303 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 02:56:20,304 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 02:56:20,304 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 02:56:20,304 | DEBUG: Data: None
2023-07-01 02:56:20,305 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:56:20,651 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2397
2023-07-01 02:56:20,652 | DEBUG: Response: 200 (2397 bytes)
2023-07-01 02:56:20,653 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 02:56:20,653 | DEBUG: Data: None
2023-07-01 02:56:20,653 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:56:21,039 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6415
2023-07-01 02:56:21,041 | DEBUG: Response: 200 (6415 bytes)
2023-07-01 02:56:21,043 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:56:21,043 | DEBUG: Data: None
2023-07-01 02:56:21,043 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:56:21,333 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 02:56:21,334 | DEBUG: Response: 200 (136 bytes)
2023-07-01 02:56:21,335 | INFO: 127.0.0.1 - - [01/Jul/2023 02:56:21] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 02:58:08,030 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:58:08,037 | DEBUG: Data: None
2023-07-01 02:58:08,037 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:58:08,430 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4306
2023-07-01 02:58:08,432 | DEBUG: Response: 200 (4306 bytes)
2023-07-01 02:58:08,434 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 02:58:08,435 | DEBUG: Data: None
2023-07-01 02:58:08,435 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:58:08,823 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4801
2023-07-01 02:58:08,824 | DEBUG: Response: 200 (4801 bytes)
2023-07-01 02:58:08,826 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 02:58:08,826 | DEBUG: Data: None
2023-07-01 02:58:08,826 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:58:09,207 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4131
2023-07-01 02:58:09,207 | DEBUG: Response: 200 (4131 bytes)
2023-07-01 02:58:09,208 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 02:58:09,209 | DEBUG: Data: None
2023-07-01 02:58:09,209 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:58:09,550 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1730
2023-07-01 02:58:09,551 | DEBUG: Response: 200 (1730 bytes)
2023-07-01 02:58:09,551 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:58:09,552 | DEBUG: Data: None
2023-07-01 02:58:09,552 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:58:09,864 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1793
2023-07-01 02:58:09,867 | DEBUG: Response: 200 (1793 bytes)
2023-07-01 02:58:09,867 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:58:09,867 | DEBUG: Data: None
2023-07-01 02:58:09,868 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:58:10,214 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5592
2023-07-01 02:58:10,215 | DEBUG: Response: 200 (5592 bytes)
2023-07-01 02:58:10,216 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 02:58:10,216 | DEBUG: Data: None
2023-07-01 02:58:10,216 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:58:10,555 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3173
2023-07-01 02:58:10,555 | DEBUG: Response: 200 (3173 bytes)
2023-07-01 02:58:10,556 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 02:58:10,556 | DEBUG: Data: None
2023-07-01 02:58:10,556 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:58:10,897 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3242
2023-07-01 02:58:10,897 | DEBUG: Response: 200 (3242 bytes)
2023-07-01 02:58:10,898 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:58:10,898 | DEBUG: Data: None
2023-07-01 02:58:10,898 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:58:11,203 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1793
2023-07-01 02:58:11,205 | DEBUG: Response: 200 (1793 bytes)
2023-07-01 02:58:11,206 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 02:58:11,206 | DEBUG: Data: None
2023-07-01 02:58:11,206 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:58:11,543 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4440
2023-07-01 02:58:11,544 | DEBUG: Response: 200 (4440 bytes)
2023-07-01 02:58:11,546 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 02:58:11,546 | DEBUG: Data: None
2023-07-01 02:58:11,546 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:58:11,882 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3783
2023-07-01 02:58:11,883 | DEBUG: Response: 200 (3783 bytes)
2023-07-01 02:58:11,884 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:58:11,884 | DEBUG: Data: None
2023-07-01 02:58:11,884 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:58:12,246 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5002
2023-07-01 02:58:12,247 | DEBUG: Response: 200 (5002 bytes)
2023-07-01 02:58:12,248 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 02:58:12,248 | DEBUG: Data: None
2023-07-01 02:58:12,248 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:58:12,716 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 02:58:12,718 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 02:58:12,719 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 02:58:12,719 | DEBUG: Data: None
2023-07-01 02:58:12,719 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:58:13,069 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2397
2023-07-01 02:58:13,070 | DEBUG: Response: 200 (2397 bytes)
2023-07-01 02:58:13,070 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 02:58:13,071 | DEBUG: Data: None
2023-07-01 02:58:13,071 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:58:13,456 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6408
2023-07-01 02:58:13,457 | DEBUG: Response: 200 (6408 bytes)
2023-07-01 02:58:13,459 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:58:13,459 | DEBUG: Data: None
2023-07-01 02:58:13,459 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:58:14,068 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 02:58:14,069 | DEBUG: Response: 200 (136 bytes)
2023-07-01 02:58:14,069 | INFO: 127.0.0.1 - - [01/Jul/2023 02:58:14] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 02:58:53,197 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:58:53,199 | DEBUG: Data: None
2023-07-01 02:58:53,199 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:58:53,559 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4376
2023-07-01 02:58:53,560 | DEBUG: Response: 200 (4376 bytes)
2023-07-01 02:58:53,561 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 02:58:53,561 | DEBUG: Data: None
2023-07-01 02:58:53,561 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:58:53,963 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4802
2023-07-01 02:58:53,964 | DEBUG: Response: 200 (4802 bytes)
2023-07-01 02:58:53,966 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 02:58:53,967 | DEBUG: Data: None
2023-07-01 02:58:53,967 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:58:54,332 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4129
2023-07-01 02:58:54,333 | DEBUG: Response: 200 (4129 bytes)
2023-07-01 02:58:54,335 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:58:54,335 | DEBUG: Data: None
2023-07-01 02:58:54,335 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:58:54,634 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1793
2023-07-01 02:58:54,635 | DEBUG: Response: 200 (1793 bytes)
2023-07-01 02:58:54,636 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 02:58:54,636 | DEBUG: Data: None
2023-07-01 02:58:54,636 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:58:54,927 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1729
2023-07-01 02:58:54,928 | DEBUG: Response: 200 (1729 bytes)
2023-07-01 02:58:54,928 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:58:54,929 | DEBUG: Data: None
2023-07-01 02:58:54,929 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:58:55,550 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5601
2023-07-01 02:58:55,551 | DEBUG: Response: 200 (5601 bytes)
2023-07-01 02:58:55,552 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 02:58:55,552 | DEBUG: Data: None
2023-07-01 02:58:55,553 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:58:55,884 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3174
2023-07-01 02:58:55,885 | DEBUG: Response: 200 (3174 bytes)
2023-07-01 02:58:55,886 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 02:58:55,886 | DEBUG: Data: None
2023-07-01 02:58:55,886 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:58:56,211 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3242
2023-07-01 02:58:56,212 | DEBUG: Response: 200 (3242 bytes)
2023-07-01 02:58:56,213 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:58:56,213 | DEBUG: Data: None
2023-07-01 02:58:56,213 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:58:56,550 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1793
2023-07-01 02:58:56,550 | DEBUG: Response: 200 (1793 bytes)
2023-07-01 02:58:56,551 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 02:58:56,551 | DEBUG: Data: None
2023-07-01 02:58:56,551 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:58:56,903 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4440
2023-07-01 02:58:56,904 | DEBUG: Response: 200 (4440 bytes)
2023-07-01 02:58:56,905 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 02:58:56,905 | DEBUG: Data: None
2023-07-01 02:58:56,905 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:58:57,216 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3783
2023-07-01 02:58:57,217 | DEBUG: Response: 200 (3783 bytes)
2023-07-01 02:58:57,218 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:58:57,218 | DEBUG: Data: None
2023-07-01 02:58:57,218 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:58:57,570 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5004
2023-07-01 02:58:57,571 | DEBUG: Response: 200 (5004 bytes)
2023-07-01 02:58:57,572 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 02:58:57,572 | DEBUG: Data: None
2023-07-01 02:58:57,572 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:58:57,923 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5032
2023-07-01 02:58:57,928 | DEBUG: Response: 200 (5032 bytes)
2023-07-01 02:58:57,929 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 02:58:57,929 | DEBUG: Data: None
2023-07-01 02:58:57,929 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:58:58,269 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2398
2023-07-01 02:58:58,269 | DEBUG: Response: 200 (2398 bytes)
2023-07-01 02:58:58,270 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 02:58:58,270 | DEBUG: Data: None
2023-07-01 02:58:58,270 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:58:58,665 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6414
2023-07-01 02:58:58,666 | DEBUG: Response: 200 (6414 bytes)
2023-07-01 02:58:58,668 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:58:58,668 | DEBUG: Data: None
2023-07-01 02:58:58,668 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:58:58,950 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 02:58:58,951 | DEBUG: Response: 200 (136 bytes)
2023-07-01 02:58:58,951 | INFO: 127.0.0.1 - - [01/Jul/2023 02:58:58] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 02:59:23,194 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:59:23,195 | DEBUG: Data: None
2023-07-01 02:59:23,196 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:59:23,579 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4305
2023-07-01 02:59:23,581 | DEBUG: Response: 200 (4305 bytes)
2023-07-01 02:59:23,587 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 02:59:23,588 | DEBUG: Data: None
2023-07-01 02:59:23,589 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:59:24,004 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4801
2023-07-01 02:59:24,006 | DEBUG: Response: 200 (4801 bytes)
2023-07-01 02:59:24,010 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 02:59:24,010 | DEBUG: Data: None
2023-07-01 02:59:24,010 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:59:24,381 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4130
2023-07-01 02:59:24,382 | DEBUG: Response: 200 (4130 bytes)
2023-07-01 02:59:24,383 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 02:59:24,383 | DEBUG: Data: None
2023-07-01 02:59:24,383 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:59:24,685 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1730
2023-07-01 02:59:24,687 | DEBUG: Response: 200 (1730 bytes)
2023-07-01 02:59:24,688 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:59:24,688 | DEBUG: Data: None
2023-07-01 02:59:24,688 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:59:25,007 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1793
2023-07-01 02:59:25,008 | DEBUG: Response: 200 (1793 bytes)
2023-07-01 02:59:25,008 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:59:25,008 | DEBUG: Data: None
2023-07-01 02:59:25,008 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:59:25,388 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5595
2023-07-01 02:59:25,393 | DEBUG: Response: 200 (5595 bytes)
2023-07-01 02:59:25,396 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 02:59:25,396 | DEBUG: Data: None
2023-07-01 02:59:25,396 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:59:25,725 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3174
2023-07-01 02:59:25,727 | DEBUG: Response: 200 (3174 bytes)
2023-07-01 02:59:25,728 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 02:59:25,728 | DEBUG: Data: None
2023-07-01 02:59:25,728 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:59:26,098 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3243
2023-07-01 02:59:26,099 | DEBUG: Response: 200 (3243 bytes)
2023-07-01 02:59:26,100 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 02:59:26,100 | DEBUG: Data: None
2023-07-01 02:59:26,100 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:59:26,410 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1793
2023-07-01 02:59:26,411 | DEBUG: Response: 200 (1793 bytes)
2023-07-01 02:59:26,412 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 02:59:26,412 | DEBUG: Data: None
2023-07-01 02:59:26,412 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:59:26,726 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4440
2023-07-01 02:59:26,727 | DEBUG: Response: 200 (4440 bytes)
2023-07-01 02:59:26,728 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 02:59:26,728 | DEBUG: Data: None
2023-07-01 02:59:26,728 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:59:27,047 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3784
2023-07-01 02:59:27,048 | DEBUG: Response: 200 (3784 bytes)
2023-07-01 02:59:27,048 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:59:27,048 | DEBUG: Data: None
2023-07-01 02:59:27,048 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:59:27,651 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4997
2023-07-01 02:59:27,651 | DEBUG: Response: 200 (4997 bytes)
2023-07-01 02:59:27,652 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 02:59:27,652 | DEBUG: Data: None
2023-07-01 02:59:27,652 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:59:28,017 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 02:59:28,017 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 02:59:28,018 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 02:59:28,018 | DEBUG: Data: None
2023-07-01 02:59:28,018 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:59:28,399 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2398
2023-07-01 02:59:28,400 | DEBUG: Response: 200 (2398 bytes)
2023-07-01 02:59:28,400 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 02:59:28,400 | DEBUG: Data: None
2023-07-01 02:59:28,401 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 02:59:29,137 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6413
2023-07-01 02:59:29,138 | DEBUG: Response: 200 (6413 bytes)
2023-07-01 02:59:29,143 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 02:59:29,143 | DEBUG: Data: None
2023-07-01 02:59:29,143 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 02:59:29,476 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 02:59:29,476 | DEBUG: Response: 200 (136 bytes)
2023-07-01 02:59:29,479 | INFO: 127.0.0.1 - - [01/Jul/2023 02:59:29] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 03:00:37,198 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:00:37,198 | DEBUG: Data: None
2023-07-01 03:00:37,199 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:00:37,560 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4376
2023-07-01 03:00:37,563 | DEBUG: Response: 200 (4376 bytes)
2023-07-01 03:00:37,566 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 03:00:37,566 | DEBUG: Data: None
2023-07-01 03:00:37,566 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:00:37,930 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4802
2023-07-01 03:00:37,931 | DEBUG: Response: 200 (4802 bytes)
2023-07-01 03:00:37,933 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 03:00:37,933 | DEBUG: Data: None
2023-07-01 03:00:37,933 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:00:38,354 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4182
2023-07-01 03:00:38,355 | DEBUG: Response: 200 (4182 bytes)
2023-07-01 03:00:38,356 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:00:38,356 | DEBUG: Data: None
2023-07-01 03:00:38,356 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:00:38,762 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1793
2023-07-01 03:00:38,762 | DEBUG: Response: 200 (1793 bytes)
2023-07-01 03:00:38,763 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 03:00:38,763 | DEBUG: Data: None
2023-07-01 03:00:38,763 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:00:39,396 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1730
2023-07-01 03:00:39,396 | DEBUG: Response: 200 (1730 bytes)
2023-07-01 03:00:39,397 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:00:39,397 | DEBUG: Data: None
2023-07-01 03:00:39,397 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:00:39,766 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5586
2023-07-01 03:00:39,767 | DEBUG: Response: 200 (5586 bytes)
2023-07-01 03:00:39,767 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 03:00:39,768 | DEBUG: Data: None
2023-07-01 03:00:39,768 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:00:40,130 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3174
2023-07-01 03:00:40,131 | DEBUG: Response: 200 (3174 bytes)
2023-07-01 03:00:40,132 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 03:00:40,132 | DEBUG: Data: None
2023-07-01 03:00:40,132 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:00:40,519 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3243
2023-07-01 03:00:40,521 | DEBUG: Response: 200 (3243 bytes)
2023-07-01 03:00:40,522 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:00:40,522 | DEBUG: Data: None
2023-07-01 03:00:40,522 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:00:40,872 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1793
2023-07-01 03:00:40,873 | DEBUG: Response: 200 (1793 bytes)
2023-07-01 03:00:40,873 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 03:00:40,873 | DEBUG: Data: None
2023-07-01 03:00:40,873 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:00:41,222 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4442
2023-07-01 03:00:41,222 | DEBUG: Response: 200 (4442 bytes)
2023-07-01 03:00:41,223 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 03:00:41,223 | DEBUG: Data: None
2023-07-01 03:00:41,223 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:00:41,571 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3784
2023-07-01 03:00:41,573 | DEBUG: Response: 200 (3784 bytes)
2023-07-01 03:00:41,574 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:00:41,575 | DEBUG: Data: None
2023-07-01 03:00:41,575 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:00:42,273 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5002
2023-07-01 03:00:42,274 | DEBUG: Response: 200 (5002 bytes)
2023-07-01 03:00:42,275 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 03:00:42,275 | DEBUG: Data: None
2023-07-01 03:00:42,275 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:00:42,841 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 03:00:42,842 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 03:00:42,844 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 03:00:42,844 | DEBUG: Data: None
2023-07-01 03:00:42,844 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:00:43,179 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2397
2023-07-01 03:00:43,179 | DEBUG: Response: 200 (2397 bytes)
2023-07-01 03:00:43,180 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 03:00:43,180 | DEBUG: Data: None
2023-07-01 03:00:43,180 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:00:43,583 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6413
2023-07-01 03:00:43,583 | DEBUG: Response: 200 (6413 bytes)
2023-07-01 03:00:43,585 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:00:43,585 | DEBUG: Data: None
2023-07-01 03:00:43,586 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:00:43,908 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 03:00:43,908 | DEBUG: Response: 200 (136 bytes)
2023-07-01 03:00:43,909 | INFO: 127.0.0.1 - - [01/Jul/2023 03:00:43] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 03:05:01,274 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:05:01,274 | DEBUG: Data: None
2023-07-01 03:05:01,275 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:05:01,567 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 03:05:01,569 | DEBUG: Response: 200 (136 bytes)
2023-07-01 03:05:01,570 | INFO: 127.0.0.1 - - [01/Jul/2023 03:05:01] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-01 03:08:23,857 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:08:23,858 | DEBUG: Data: None
2023-07-01 03:08:23,859 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:08:24,227 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4315
2023-07-01 03:08:24,229 | DEBUG: Response: 200 (4315 bytes)
2023-07-01 03:08:24,234 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 03:08:24,235 | DEBUG: Data: None
2023-07-01 03:08:24,235 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:08:24,963 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4954
2023-07-01 03:08:24,965 | DEBUG: Response: 200 (4954 bytes)
2023-07-01 03:08:24,971 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 03:08:24,971 | DEBUG: Data: None
2023-07-01 03:08:24,971 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:08:25,331 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4186
2023-07-01 03:08:25,332 | DEBUG: Response: 200 (4186 bytes)
2023-07-01 03:08:25,334 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:08:25,334 | DEBUG: Data: None
2023-07-01 03:08:25,334 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:08:25,638 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:08:25,639 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:08:25,640 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 03:08:25,641 | DEBUG: Data: None
2023-07-01 03:08:25,641 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:08:25,957 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1728
2023-07-01 03:08:25,958 | DEBUG: Response: 200 (1728 bytes)
2023-07-01 03:08:25,958 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:08:25,958 | DEBUG: Data: None
2023-07-01 03:08:25,958 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:08:26,392 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5586
2023-07-01 03:08:26,392 | DEBUG: Response: 200 (5586 bytes)
2023-07-01 03:08:26,393 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 03:08:26,393 | DEBUG: Data: None
2023-07-01 03:08:26,393 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:08:26,731 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3174
2023-07-01 03:08:26,733 | DEBUG: Response: 200 (3174 bytes)
2023-07-01 03:08:26,734 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 03:08:26,734 | DEBUG: Data: None
2023-07-01 03:08:26,734 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:08:27,069 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3360
2023-07-01 03:08:27,070 | DEBUG: Response: 200 (3360 bytes)
2023-07-01 03:08:27,071 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:08:27,071 | DEBUG: Data: None
2023-07-01 03:08:27,071 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:08:27,381 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:08:27,382 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:08:27,382 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 03:08:27,382 | DEBUG: Data: None
2023-07-01 03:08:27,382 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:08:27,710 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4441
2023-07-01 03:08:27,711 | DEBUG: Response: 200 (4441 bytes)
2023-07-01 03:08:27,712 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 03:08:27,712 | DEBUG: Data: None
2023-07-01 03:08:27,712 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:08:28,029 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3782
2023-07-01 03:08:28,030 | DEBUG: Response: 200 (3782 bytes)
2023-07-01 03:08:28,031 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:08:28,031 | DEBUG: Data: None
2023-07-01 03:08:28,031 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:08:28,367 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5004
2023-07-01 03:08:28,367 | DEBUG: Response: 200 (5004 bytes)
2023-07-01 03:08:28,368 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 03:08:28,368 | DEBUG: Data: None
2023-07-01 03:08:28,368 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:08:28,714 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 03:08:28,715 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 03:08:28,716 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 03:08:28,716 | DEBUG: Data: None
2023-07-01 03:08:28,716 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:08:29,034 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2400
2023-07-01 03:08:29,036 | DEBUG: Response: 200 (2400 bytes)
2023-07-01 03:08:29,037 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 03:08:29,037 | DEBUG: Data: None
2023-07-01 03:08:29,037 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:08:29,433 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6414
2023-07-01 03:08:29,434 | DEBUG: Response: 200 (6414 bytes)
2023-07-01 03:08:29,437 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:08:29,437 | DEBUG: Data: None
2023-07-01 03:08:29,437 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:08:29,711 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 03:08:29,711 | DEBUG: Response: 200 (136 bytes)
2023-07-01 03:08:29,712 | INFO: 127.0.0.1 - - [01/Jul/2023 03:08:29] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 03:19:56,182 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:19:56,183 | DEBUG: Data: None
2023-07-01 03:19:56,183 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:19:56,187 | DEBUG: Resetting dropped connection: oauth.reddit.com
2023-07-01 03:19:57,135 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4314
2023-07-01 03:19:57,137 | DEBUG: Response: 200 (4314 bytes)
2023-07-01 03:19:57,139 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 03:19:57,139 | DEBUG: Data: None
2023-07-01 03:19:57,139 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:19:57,530 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5166
2023-07-01 03:19:57,532 | DEBUG: Response: 200 (5166 bytes)
2023-07-01 03:19:57,536 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 03:19:57,536 | DEBUG: Data: None
2023-07-01 03:19:57,536 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:19:57,939 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4142
2023-07-01 03:19:57,941 | DEBUG: Response: 200 (4142 bytes)
2023-07-01 03:19:57,942 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:19:57,942 | DEBUG: Data: None
2023-07-01 03:19:57,942 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:19:58,245 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:19:58,246 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:19:58,247 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 03:19:58,247 | DEBUG: Data: None
2023-07-01 03:19:58,247 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:19:58,779 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2070
2023-07-01 03:19:58,781 | DEBUG: Response: 200 (2070 bytes)
2023-07-01 03:19:58,782 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:19:58,782 | DEBUG: Data: None
2023-07-01 03:19:58,782 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:19:59,283 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5631
2023-07-01 03:19:59,286 | DEBUG: Response: 200 (5631 bytes)
2023-07-01 03:19:59,288 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 03:19:59,288 | DEBUG: Data: None
2023-07-01 03:19:59,288 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:19:59,618 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3359
2023-07-01 03:19:59,618 | DEBUG: Response: 200 (3359 bytes)
2023-07-01 03:19:59,620 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 03:19:59,620 | DEBUG: Data: None
2023-07-01 03:19:59,620 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:19:59,964 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3278
2023-07-01 03:19:59,964 | DEBUG: Response: 200 (3278 bytes)
2023-07-01 03:19:59,965 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:19:59,965 | DEBUG: Data: None
2023-07-01 03:19:59,965 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:20:00,273 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:20:00,273 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:20:00,274 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 03:20:00,274 | DEBUG: Data: None
2023-07-01 03:20:00,274 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:20:00,274 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 03:20:01,160 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4440
2023-07-01 03:20:01,161 | DEBUG: Response: 200 (4440 bytes)
2023-07-01 03:20:01,162 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 03:20:01,162 | DEBUG: Data: None
2023-07-01 03:20:01,162 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:20:01,162 | DEBUG: Sleeping: 1.00 seconds prior to call
2023-07-01 03:20:02,507 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3783
2023-07-01 03:20:02,509 | DEBUG: Response: 200 (3783 bytes)
2023-07-01 03:20:02,509 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:20:02,509 | DEBUG: Data: None
2023-07-01 03:20:02,509 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:20:02,510 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 03:20:03,377 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4992
2023-07-01 03:20:03,378 | DEBUG: Response: 200 (4992 bytes)
2023-07-01 03:20:03,379 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 03:20:03,379 | DEBUG: Data: None
2023-07-01 03:20:03,379 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:20:03,379 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 03:20:04,243 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 03:20:04,243 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 03:20:04,245 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 03:20:04,245 | DEBUG: Data: None
2023-07-01 03:20:04,245 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:20:04,245 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 03:20:05,162 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2401
2023-07-01 03:20:05,163 | DEBUG: Response: 200 (2401 bytes)
2023-07-01 03:20:05,164 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 03:20:05,164 | DEBUG: Data: None
2023-07-01 03:20:05,164 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:20:05,164 | DEBUG: Sleeping: 1.00 seconds prior to call
2023-07-01 03:20:06,558 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6408
2023-07-01 03:20:06,559 | DEBUG: Response: 200 (6408 bytes)
2023-07-01 03:20:06,561 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:20:06,561 | DEBUG: Data: None
2023-07-01 03:20:06,561 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:20:06,561 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 03:20:07,399 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 03:20:07,519 | DEBUG: Response: 200 (136 bytes)
2023-07-01 03:20:07,520 | INFO: 127.0.0.1 - - [01/Jul/2023 03:20:07] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 03:23:01,192 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:23:01,193 | DEBUG: Data: None
2023-07-01 03:23:01,193 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:23:01,615 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4388
2023-07-01 03:23:01,617 | DEBUG: Response: 200 (4388 bytes)
2023-07-01 03:23:01,618 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 03:23:01,618 | DEBUG: Data: None
2023-07-01 03:23:01,618 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:23:02,386 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5163
2023-07-01 03:23:02,386 | DEBUG: Response: 200 (5163 bytes)
2023-07-01 03:23:02,389 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 03:23:02,389 | DEBUG: Data: None
2023-07-01 03:23:02,390 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:23:02,747 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4143
2023-07-01 03:23:02,748 | DEBUG: Response: 200 (4143 bytes)
2023-07-01 03:23:02,750 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:23:02,750 | DEBUG: Data: None
2023-07-01 03:23:02,750 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:23:04,015 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:23:04,016 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:23:04,016 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 03:23:04,016 | DEBUG: Data: None
2023-07-01 03:23:04,016 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:23:04,329 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2071
2023-07-01 03:23:04,330 | DEBUG: Response: 200 (2071 bytes)
2023-07-01 03:23:04,330 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:23:04,330 | DEBUG: Data: None
2023-07-01 03:23:04,330 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:23:04,741 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5627
2023-07-01 03:23:04,744 | DEBUG: Response: 200 (5627 bytes)
2023-07-01 03:23:04,748 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 03:23:04,749 | DEBUG: Data: None
2023-07-01 03:23:04,749 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:23:05,075 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3358
2023-07-01 03:23:05,078 | DEBUG: Response: 200 (3358 bytes)
2023-07-01 03:23:05,081 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 03:23:05,081 | DEBUG: Data: None
2023-07-01 03:23:05,081 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:23:05,410 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3282
2023-07-01 03:23:05,411 | DEBUG: Response: 200 (3282 bytes)
2023-07-01 03:23:05,412 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:23:05,412 | DEBUG: Data: None
2023-07-01 03:23:05,412 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:23:05,723 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:23:05,724 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:23:05,725 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 03:23:05,725 | DEBUG: Data: None
2023-07-01 03:23:05,725 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:23:06,060 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4440
2023-07-01 03:23:06,061 | DEBUG: Response: 200 (4440 bytes)
2023-07-01 03:23:06,062 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 03:23:06,062 | DEBUG: Data: None
2023-07-01 03:23:06,062 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:23:06,395 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3782
2023-07-01 03:23:06,396 | DEBUG: Response: 200 (3782 bytes)
2023-07-01 03:23:06,397 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:23:06,397 | DEBUG: Data: None
2023-07-01 03:23:06,397 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:23:06,780 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5003
2023-07-01 03:23:06,781 | DEBUG: Response: 200 (5003 bytes)
2023-07-01 03:23:06,782 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 03:23:06,782 | DEBUG: Data: None
2023-07-01 03:23:06,782 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:23:07,151 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 03:23:07,152 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 03:23:07,153 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 03:23:07,153 | DEBUG: Data: None
2023-07-01 03:23:07,153 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:23:07,547 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2400
2023-07-01 03:23:07,547 | DEBUG: Response: 200 (2400 bytes)
2023-07-01 03:23:07,549 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 03:23:07,549 | DEBUG: Data: None
2023-07-01 03:23:07,549 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:23:07,939 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6414
2023-07-01 03:23:07,941 | DEBUG: Response: 200 (6414 bytes)
2023-07-01 03:23:07,946 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:23:07,946 | DEBUG: Data: None
2023-07-01 03:23:07,946 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:23:08,257 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 03:23:08,257 | DEBUG: Response: 200 (136 bytes)
2023-07-01 03:23:08,258 | INFO: 127.0.0.1 - - [01/Jul/2023 03:23:08] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 03:23:23,366 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:23:23,366 | DEBUG: Data: None
2023-07-01 03:23:23,367 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:23:23,721 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4321
2023-07-01 03:23:23,722 | DEBUG: Response: 200 (4321 bytes)
2023-07-01 03:23:23,724 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 03:23:23,725 | DEBUG: Data: None
2023-07-01 03:23:23,725 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:23:24,158 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5169
2023-07-01 03:23:24,159 | DEBUG: Response: 200 (5169 bytes)
2023-07-01 03:23:24,163 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 03:23:24,163 | DEBUG: Data: None
2023-07-01 03:23:24,163 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:23:24,521 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4136
2023-07-01 03:23:24,523 | DEBUG: Response: 200 (4136 bytes)
2023-07-01 03:23:24,524 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:23:24,524 | DEBUG: Data: None
2023-07-01 03:23:24,524 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:23:24,889 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:23:24,890 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:23:24,891 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 03:23:24,891 | DEBUG: Data: None
2023-07-01 03:23:24,891 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:23:25,212 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2071
2023-07-01 03:23:25,212 | DEBUG: Response: 200 (2071 bytes)
2023-07-01 03:23:25,213 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:23:25,213 | DEBUG: Data: None
2023-07-01 03:23:25,213 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:23:25,606 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5634
2023-07-01 03:23:25,609 | DEBUG: Response: 200 (5634 bytes)
2023-07-01 03:23:25,610 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 03:23:25,610 | DEBUG: Data: None
2023-07-01 03:23:25,610 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:23:25,966 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3358
2023-07-01 03:23:25,966 | DEBUG: Response: 200 (3358 bytes)
2023-07-01 03:23:25,967 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 03:23:25,967 | DEBUG: Data: None
2023-07-01 03:23:25,967 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:23:26,311 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3281
2023-07-01 03:23:26,312 | DEBUG: Response: 200 (3281 bytes)
2023-07-01 03:23:26,314 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:23:26,314 | DEBUG: Data: None
2023-07-01 03:23:26,314 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:23:26,685 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1795
2023-07-01 03:23:26,687 | DEBUG: Response: 200 (1795 bytes)
2023-07-01 03:23:26,689 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 03:23:26,690 | DEBUG: Data: None
2023-07-01 03:23:26,690 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:23:27,049 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4438
2023-07-01 03:23:27,050 | DEBUG: Response: 200 (4438 bytes)
2023-07-01 03:23:27,052 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 03:23:27,052 | DEBUG: Data: None
2023-07-01 03:23:27,052 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:23:27,369 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3782
2023-07-01 03:23:27,371 | DEBUG: Response: 200 (3782 bytes)
2023-07-01 03:23:27,372 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:23:27,372 | DEBUG: Data: None
2023-07-01 03:23:27,372 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:23:27,728 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5001
2023-07-01 03:23:27,735 | DEBUG: Response: 200 (5001 bytes)
2023-07-01 03:23:27,736 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 03:23:27,736 | DEBUG: Data: None
2023-07-01 03:23:27,737 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:23:28,452 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 03:23:28,453 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 03:23:28,454 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 03:23:28,454 | DEBUG: Data: None
2023-07-01 03:23:28,454 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:23:28,789 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2398
2023-07-01 03:23:28,791 | DEBUG: Response: 200 (2398 bytes)
2023-07-01 03:23:28,793 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 03:23:28,793 | DEBUG: Data: None
2023-07-01 03:23:28,793 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:23:29,195 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6415
2023-07-01 03:23:29,196 | DEBUG: Response: 200 (6415 bytes)
2023-07-01 03:23:29,201 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:23:29,202 | DEBUG: Data: None
2023-07-01 03:23:29,202 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:23:29,519 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 03:23:29,519 | DEBUG: Response: 200 (136 bytes)
2023-07-01 03:23:29,520 | INFO: 127.0.0.1 - - [01/Jul/2023 03:23:29] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 03:29:30,198 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:29:30,199 | DEBUG: Data: None
2023-07-01 03:29:30,199 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:29:30,559 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4405
2023-07-01 03:29:30,560 | DEBUG: Response: 200 (4405 bytes)
2023-07-01 03:29:30,561 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 03:29:30,561 | DEBUG: Data: None
2023-07-01 03:29:30,561 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:29:30,978 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5360
2023-07-01 03:29:30,979 | DEBUG: Response: 200 (5360 bytes)
2023-07-01 03:29:30,982 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 03:29:30,982 | DEBUG: Data: None
2023-07-01 03:29:30,982 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:29:31,318 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4140
2023-07-01 03:29:31,320 | DEBUG: Response: 200 (4140 bytes)
2023-07-01 03:29:31,322 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:29:31,322 | DEBUG: Data: None
2023-07-01 03:29:31,322 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:29:31,647 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:29:31,647 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:29:31,648 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 03:29:31,648 | DEBUG: Data: None
2023-07-01 03:29:31,648 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:29:31,968 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2071
2023-07-01 03:29:31,969 | DEBUG: Response: 200 (2071 bytes)
2023-07-01 03:29:31,970 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:29:31,970 | DEBUG: Data: None
2023-07-01 03:29:31,970 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:29:32,602 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5636
2023-07-01 03:29:32,603 | DEBUG: Response: 200 (5636 bytes)
2023-07-01 03:29:32,604 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 03:29:32,604 | DEBUG: Data: None
2023-07-01 03:29:32,604 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:29:32,942 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3358
2023-07-01 03:29:32,946 | DEBUG: Response: 200 (3358 bytes)
2023-07-01 03:29:32,950 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 03:29:32,950 | DEBUG: Data: None
2023-07-01 03:29:32,950 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:29:33,305 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3458
2023-07-01 03:29:33,307 | DEBUG: Response: 200 (3458 bytes)
2023-07-01 03:29:33,308 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:29:33,308 | DEBUG: Data: None
2023-07-01 03:29:33,308 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:29:33,653 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:29:33,654 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:29:33,655 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 03:29:33,655 | DEBUG: Data: None
2023-07-01 03:29:33,655 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:29:34,006 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4442
2023-07-01 03:29:34,007 | DEBUG: Response: 200 (4442 bytes)
2023-07-01 03:29:34,008 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 03:29:34,008 | DEBUG: Data: None
2023-07-01 03:29:34,008 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:29:34,343 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3787
2023-07-01 03:29:34,345 | DEBUG: Response: 200 (3787 bytes)
2023-07-01 03:29:34,346 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:29:34,346 | DEBUG: Data: None
2023-07-01 03:29:34,346 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:29:34,718 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4996
2023-07-01 03:29:34,719 | DEBUG: Response: 200 (4996 bytes)
2023-07-01 03:29:34,720 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 03:29:34,720 | DEBUG: Data: None
2023-07-01 03:29:34,720 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:29:35,395 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5030
2023-07-01 03:29:35,395 | DEBUG: Response: 200 (5030 bytes)
2023-07-01 03:29:35,396 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 03:29:35,396 | DEBUG: Data: None
2023-07-01 03:29:35,396 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:29:35,787 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2398
2023-07-01 03:29:35,788 | DEBUG: Response: 200 (2398 bytes)
2023-07-01 03:29:35,789 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 03:29:35,789 | DEBUG: Data: None
2023-07-01 03:29:35,789 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:29:36,205 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6429
2023-07-01 03:29:36,206 | DEBUG: Response: 200 (6429 bytes)
2023-07-01 03:29:36,208 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:29:36,208 | DEBUG: Data: None
2023-07-01 03:29:36,208 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:29:36,493 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 03:29:36,493 | DEBUG: Response: 200 (136 bytes)
2023-07-01 03:29:36,494 | INFO: 127.0.0.1 - - [01/Jul/2023 03:29:36] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 03:30:25,549 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:30:25,550 | DEBUG: Data: None
2023-07-01 03:30:25,550 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:30:25,904 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4412
2023-07-01 03:30:25,905 | DEBUG: Response: 200 (4412 bytes)
2023-07-01 03:30:25,906 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 03:30:25,906 | DEBUG: Data: None
2023-07-01 03:30:25,906 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:30:26,306 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5358
2023-07-01 03:30:26,307 | DEBUG: Response: 200 (5358 bytes)
2023-07-01 03:30:26,309 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 03:30:26,309 | DEBUG: Data: None
2023-07-01 03:30:26,309 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:30:26,683 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4142
2023-07-01 03:30:26,685 | DEBUG: Response: 200 (4142 bytes)
2023-07-01 03:30:26,687 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:30:26,687 | DEBUG: Data: None
2023-07-01 03:30:26,687 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:30:27,072 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:30:27,074 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:30:27,075 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 03:30:27,075 | DEBUG: Data: None
2023-07-01 03:30:27,075 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:30:27,536 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2071
2023-07-01 03:30:27,537 | DEBUG: Response: 200 (2071 bytes)
2023-07-01 03:30:27,537 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:30:27,537 | DEBUG: Data: None
2023-07-01 03:30:27,537 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:30:27,917 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5640
2023-07-01 03:30:27,918 | DEBUG: Response: 200 (5640 bytes)
2023-07-01 03:30:27,919 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 03:30:27,919 | DEBUG: Data: None
2023-07-01 03:30:27,919 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:30:28,269 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3358
2023-07-01 03:30:28,271 | DEBUG: Response: 200 (3358 bytes)
2023-07-01 03:30:28,274 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 03:30:28,274 | DEBUG: Data: None
2023-07-01 03:30:28,274 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:30:28,653 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3458
2023-07-01 03:30:28,655 | DEBUG: Response: 200 (3458 bytes)
2023-07-01 03:30:28,656 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:30:28,656 | DEBUG: Data: None
2023-07-01 03:30:28,656 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:30:28,996 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:30:29,001 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:30:29,002 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 03:30:29,003 | DEBUG: Data: None
2023-07-01 03:30:29,003 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:30:29,369 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4438
2023-07-01 03:30:29,371 | DEBUG: Response: 200 (4438 bytes)
2023-07-01 03:30:29,373 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 03:30:29,373 | DEBUG: Data: None
2023-07-01 03:30:29,374 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:30:29,714 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3787
2023-07-01 03:30:29,716 | DEBUG: Response: 200 (3787 bytes)
2023-07-01 03:30:29,717 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:30:29,718 | DEBUG: Data: None
2023-07-01 03:30:29,718 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:30:30,107 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4996
2023-07-01 03:30:30,108 | DEBUG: Response: 200 (4996 bytes)
2023-07-01 03:30:30,109 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 03:30:30,109 | DEBUG: Data: None
2023-07-01 03:30:30,109 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:30:30,480 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5030
2023-07-01 03:30:30,481 | DEBUG: Response: 200 (5030 bytes)
2023-07-01 03:30:30,481 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 03:30:30,481 | DEBUG: Data: None
2023-07-01 03:30:30,481 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:30:30,868 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2399
2023-07-01 03:30:30,869 | DEBUG: Response: 200 (2399 bytes)
2023-07-01 03:30:30,870 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 03:30:30,870 | DEBUG: Data: None
2023-07-01 03:30:30,870 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:30:32,211 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6420
2023-07-01 03:30:32,212 | DEBUG: Response: 200 (6420 bytes)
2023-07-01 03:30:32,215 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:30:32,215 | DEBUG: Data: None
2023-07-01 03:30:32,215 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:30:32,867 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 03:30:32,868 | DEBUG: Response: 200 (136 bytes)
2023-07-01 03:30:32,868 | INFO: 127.0.0.1 - - [01/Jul/2023 03:30:32] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 03:31:19,348 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:31:19,348 | DEBUG: Data: None
2023-07-01 03:31:19,348 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:31:19,729 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4408
2023-07-01 03:31:19,732 | DEBUG: Response: 200 (4408 bytes)
2023-07-01 03:31:19,736 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 03:31:19,737 | DEBUG: Data: None
2023-07-01 03:31:19,737 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:31:20,138 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5354
2023-07-01 03:31:20,139 | DEBUG: Response: 200 (5354 bytes)
2023-07-01 03:31:20,141 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 03:31:20,141 | DEBUG: Data: None
2023-07-01 03:31:20,141 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:31:20,516 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4130
2023-07-01 03:31:20,518 | DEBUG: Response: 200 (4130 bytes)
2023-07-01 03:31:20,519 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:31:20,519 | DEBUG: Data: None
2023-07-01 03:31:20,519 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:31:21,094 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:31:21,095 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:31:21,095 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 03:31:21,095 | DEBUG: Data: None
2023-07-01 03:31:21,096 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:31:21,411 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2071
2023-07-01 03:31:21,412 | DEBUG: Response: 200 (2071 bytes)
2023-07-01 03:31:21,413 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:31:21,413 | DEBUG: Data: None
2023-07-01 03:31:21,413 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:31:21,801 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5638
2023-07-01 03:31:21,803 | DEBUG: Response: 200 (5638 bytes)
2023-07-01 03:31:21,804 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 03:31:21,804 | DEBUG: Data: None
2023-07-01 03:31:21,804 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:31:22,155 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3358
2023-07-01 03:31:22,156 | DEBUG: Response: 200 (3358 bytes)
2023-07-01 03:31:22,157 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 03:31:22,157 | DEBUG: Data: None
2023-07-01 03:31:22,157 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:31:22,528 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3458
2023-07-01 03:31:22,531 | DEBUG: Response: 200 (3458 bytes)
2023-07-01 03:31:22,534 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:31:22,534 | DEBUG: Data: None
2023-07-01 03:31:22,534 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:31:22,918 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:31:22,922 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:31:22,923 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 03:31:22,923 | DEBUG: Data: None
2023-07-01 03:31:22,923 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:31:23,252 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4442
2023-07-01 03:31:23,253 | DEBUG: Response: 200 (4442 bytes)
2023-07-01 03:31:23,254 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 03:31:23,254 | DEBUG: Data: None
2023-07-01 03:31:23,254 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:31:23,585 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3781
2023-07-01 03:31:23,586 | DEBUG: Response: 200 (3781 bytes)
2023-07-01 03:31:23,587 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:31:23,587 | DEBUG: Data: None
2023-07-01 03:31:23,587 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:31:23,965 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5004
2023-07-01 03:31:23,966 | DEBUG: Response: 200 (5004 bytes)
2023-07-01 03:31:23,967 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 03:31:23,967 | DEBUG: Data: None
2023-07-01 03:31:23,967 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:31:24,315 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5030
2023-07-01 03:31:24,316 | DEBUG: Response: 200 (5030 bytes)
2023-07-01 03:31:24,317 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 03:31:24,317 | DEBUG: Data: None
2023-07-01 03:31:24,317 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:31:24,681 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2398
2023-07-01 03:31:24,682 | DEBUG: Response: 200 (2398 bytes)
2023-07-01 03:31:24,682 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 03:31:24,682 | DEBUG: Data: None
2023-07-01 03:31:24,682 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:31:25,114 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6430
2023-07-01 03:31:25,115 | DEBUG: Response: 200 (6430 bytes)
2023-07-01 03:31:25,117 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:31:25,117 | DEBUG: Data: None
2023-07-01 03:31:25,117 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:31:25,412 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 03:31:25,412 | DEBUG: Response: 200 (136 bytes)
2023-07-01 03:31:25,412 | INFO: 127.0.0.1 - - [01/Jul/2023 03:31:25] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 03:31:52,189 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:31:52,190 | DEBUG: Data: None
2023-07-01 03:31:52,190 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:31:52,598 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4395
2023-07-01 03:31:52,600 | DEBUG: Response: 200 (4395 bytes)
2023-07-01 03:31:52,603 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 03:31:52,603 | DEBUG: Data: None
2023-07-01 03:31:52,603 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:31:53,042 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5359
2023-07-01 03:31:53,045 | DEBUG: Response: 200 (5359 bytes)
2023-07-01 03:31:53,049 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 03:31:53,049 | DEBUG: Data: None
2023-07-01 03:31:53,049 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:31:53,391 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4196
2023-07-01 03:31:53,393 | DEBUG: Response: 200 (4196 bytes)
2023-07-01 03:31:53,397 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:31:53,398 | DEBUG: Data: None
2023-07-01 03:31:53,398 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:31:53,727 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:31:53,728 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:31:53,728 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 03:31:53,728 | DEBUG: Data: None
2023-07-01 03:31:53,728 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:31:54,034 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2070
2023-07-01 03:31:54,037 | DEBUG: Response: 200 (2070 bytes)
2023-07-01 03:31:54,038 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:31:54,038 | DEBUG: Data: None
2023-07-01 03:31:54,038 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:31:54,463 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5632
2023-07-01 03:31:54,464 | DEBUG: Response: 200 (5632 bytes)
2023-07-01 03:31:54,465 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 03:31:54,465 | DEBUG: Data: None
2023-07-01 03:31:54,465 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:31:54,791 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3358
2023-07-01 03:31:54,793 | DEBUG: Response: 200 (3358 bytes)
2023-07-01 03:31:54,795 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 03:31:54,795 | DEBUG: Data: None
2023-07-01 03:31:54,795 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:31:55,187 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3454
2023-07-01 03:31:55,190 | DEBUG: Response: 200 (3454 bytes)
2023-07-01 03:31:55,193 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:31:55,193 | DEBUG: Data: None
2023-07-01 03:31:55,193 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:31:55,529 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:31:55,534 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:31:55,536 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 03:31:55,536 | DEBUG: Data: None
2023-07-01 03:31:55,536 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:31:55,913 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4442
2023-07-01 03:31:55,914 | DEBUG: Response: 200 (4442 bytes)
2023-07-01 03:31:55,915 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 03:31:55,915 | DEBUG: Data: None
2023-07-01 03:31:55,915 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:31:56,216 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3786
2023-07-01 03:31:56,217 | DEBUG: Response: 200 (3786 bytes)
2023-07-01 03:31:56,218 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:31:56,218 | DEBUG: Data: None
2023-07-01 03:31:56,218 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:31:56,601 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4997
2023-07-01 03:31:56,602 | DEBUG: Response: 200 (4997 bytes)
2023-07-01 03:31:56,604 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 03:31:56,604 | DEBUG: Data: None
2023-07-01 03:31:56,604 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:31:57,334 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 03:31:57,337 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 03:31:57,338 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 03:31:57,338 | DEBUG: Data: None
2023-07-01 03:31:57,338 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:31:57,683 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2399
2023-07-01 03:31:57,684 | DEBUG: Response: 200 (2399 bytes)
2023-07-01 03:31:57,685 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 03:31:57,685 | DEBUG: Data: None
2023-07-01 03:31:57,685 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:31:58,055 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6431
2023-07-01 03:31:58,058 | DEBUG: Response: 200 (6431 bytes)
2023-07-01 03:31:58,061 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:31:58,061 | DEBUG: Data: None
2023-07-01 03:31:58,061 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:31:58,351 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 03:31:58,353 | DEBUG: Response: 200 (136 bytes)
2023-07-01 03:31:58,356 | INFO: 127.0.0.1 - - [01/Jul/2023 03:31:58] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 03:39:12,197 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:39:12,197 | DEBUG: Data: None
2023-07-01 03:39:12,198 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:39:12,595 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4397
2023-07-01 03:39:12,597 | DEBUG: Response: 200 (4397 bytes)
2023-07-01 03:39:12,599 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 03:39:12,600 | DEBUG: Data: None
2023-07-01 03:39:12,600 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:13,020 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5360
2023-07-01 03:39:13,021 | DEBUG: Response: 200 (5360 bytes)
2023-07-01 03:39:13,023 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 03:39:13,023 | DEBUG: Data: None
2023-07-01 03:39:13,023 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:13,363 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4139
2023-07-01 03:39:13,364 | DEBUG: Response: 200 (4139 bytes)
2023-07-01 03:39:13,365 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:39:13,365 | DEBUG: Data: None
2023-07-01 03:39:13,365 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:13,678 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:39:13,679 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:39:13,679 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 03:39:13,679 | DEBUG: Data: None
2023-07-01 03:39:13,679 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:13,999 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2070
2023-07-01 03:39:14,000 | DEBUG: Response: 200 (2070 bytes)
2023-07-01 03:39:14,001 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:39:14,001 | DEBUG: Data: None
2023-07-01 03:39:14,001 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:39:14,358 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5648
2023-07-01 03:39:14,359 | DEBUG: Response: 200 (5648 bytes)
2023-07-01 03:39:14,360 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 03:39:14,360 | DEBUG: Data: None
2023-07-01 03:39:14,360 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:14,702 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3359
2023-07-01 03:39:14,702 | DEBUG: Response: 200 (3359 bytes)
2023-07-01 03:39:14,703 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 03:39:14,703 | DEBUG: Data: None
2023-07-01 03:39:14,704 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:15,038 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3453
2023-07-01 03:39:15,039 | DEBUG: Response: 200 (3453 bytes)
2023-07-01 03:39:15,039 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:39:15,039 | DEBUG: Data: None
2023-07-01 03:39:15,040 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:15,373 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:39:15,374 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:39:15,375 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 03:39:15,375 | DEBUG: Data: None
2023-07-01 03:39:15,375 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:15,713 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4441
2023-07-01 03:39:15,713 | DEBUG: Response: 200 (4441 bytes)
2023-07-01 03:39:15,714 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 03:39:15,714 | DEBUG: Data: None
2023-07-01 03:39:15,714 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:16,064 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3783
2023-07-01 03:39:16,065 | DEBUG: Response: 200 (3783 bytes)
2023-07-01 03:39:16,066 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:39:16,066 | DEBUG: Data: None
2023-07-01 03:39:16,066 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:39:16,446 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4998
2023-07-01 03:39:16,447 | DEBUG: Response: 200 (4998 bytes)
2023-07-01 03:39:16,448 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 03:39:16,448 | DEBUG: Data: None
2023-07-01 03:39:16,448 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:16,869 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5030
2023-07-01 03:39:16,871 | DEBUG: Response: 200 (5030 bytes)
2023-07-01 03:39:16,872 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 03:39:16,872 | DEBUG: Data: None
2023-07-01 03:39:16,872 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:17,232 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2398
2023-07-01 03:39:17,232 | DEBUG: Response: 200 (2398 bytes)
2023-07-01 03:39:17,233 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 03:39:17,233 | DEBUG: Data: None
2023-07-01 03:39:17,233 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:17,625 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6619
2023-07-01 03:39:17,627 | DEBUG: Response: 200 (6619 bytes)
2023-07-01 03:39:17,629 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:39:17,629 | DEBUG: Data: None
2023-07-01 03:39:17,629 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:39:17,943 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 03:39:17,944 | DEBUG: Response: 200 (136 bytes)
2023-07-01 03:39:17,945 | INFO: 127.0.0.1 - - [01/Jul/2023 03:39:17] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 03:39:25,144 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:39:25,145 | DEBUG: Data: None
2023-07-01 03:39:25,145 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:39:25,260 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:39:25,260 | DEBUG: Data: None
2023-07-01 03:39:25,260 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:39:25,262 | DEBUG: Resetting dropped connection: oauth.reddit.com
2023-07-01 03:39:25,409 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 03:39:25,411 | DEBUG: Response: 200 (136 bytes)
2023-07-01 03:39:25,413 | INFO: 127.0.0.1 - - [01/Jul/2023 03:39:25] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-01 03:39:25,556 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:39:25,556 | DEBUG: Data: None
2023-07-01 03:39:25,556 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:39:25,681 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4402
2023-07-01 03:39:25,681 | DEBUG: Response: 200 (4402 bytes)
2023-07-01 03:39:25,682 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 03:39:25,682 | DEBUG: Data: None
2023-07-01 03:39:25,682 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:25,899 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4395
2023-07-01 03:39:25,900 | DEBUG: Response: 200 (4395 bytes)
2023-07-01 03:39:25,901 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 03:39:25,901 | DEBUG: Data: None
2023-07-01 03:39:25,901 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:26,059 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5364
2023-07-01 03:39:26,061 | DEBUG: Response: 200 (5364 bytes)
2023-07-01 03:39:26,069 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 03:39:26,070 | DEBUG: Data: None
2023-07-01 03:39:26,070 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:26,274 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5363
2023-07-01 03:39:26,276 | DEBUG: Response: 200 (5363 bytes)
2023-07-01 03:39:26,281 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 03:39:26,281 | DEBUG: Data: None
2023-07-01 03:39:26,281 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:26,443 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4128
2023-07-01 03:39:26,444 | DEBUG: Response: 200 (4128 bytes)
2023-07-01 03:39:26,447 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:39:26,448 | DEBUG: Data: None
2023-07-01 03:39:26,448 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:26,657 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4194
2023-07-01 03:39:26,658 | DEBUG: Response: 200 (4194 bytes)
2023-07-01 03:39:26,659 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:39:26,659 | DEBUG: Data: None
2023-07-01 03:39:26,659 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:26,804 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:39:26,805 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:39:26,805 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 03:39:26,805 | DEBUG: Data: None
2023-07-01 03:39:26,805 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:26,991 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:39:26,992 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:39:26,993 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 03:39:26,993 | DEBUG: Data: None
2023-07-01 03:39:26,993 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:27,117 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2070
2023-07-01 03:39:27,117 | DEBUG: Response: 200 (2070 bytes)
2023-07-01 03:39:27,118 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:39:27,118 | DEBUG: Data: None
2023-07-01 03:39:27,118 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:39:27,318 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2070
2023-07-01 03:39:27,319 | DEBUG: Response: 200 (2070 bytes)
2023-07-01 03:39:27,320 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:39:27,321 | DEBUG: Data: None
2023-07-01 03:39:27,321 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:39:27,506 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5648
2023-07-01 03:39:27,506 | DEBUG: Response: 200 (5648 bytes)
2023-07-01 03:39:27,508 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 03:39:27,508 | DEBUG: Data: None
2023-07-01 03:39:27,508 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:27,660 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5647
2023-07-01 03:39:27,661 | DEBUG: Response: 200 (5647 bytes)
2023-07-01 03:39:27,662 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 03:39:27,662 | DEBUG: Data: None
2023-07-01 03:39:27,662 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:27,867 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3359
2023-07-01 03:39:27,867 | DEBUG: Response: 200 (3359 bytes)
2023-07-01 03:39:27,868 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 03:39:27,868 | DEBUG: Data: None
2023-07-01 03:39:27,868 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:28,030 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3359
2023-07-01 03:39:28,031 | DEBUG: Response: 200 (3359 bytes)
2023-07-01 03:39:28,031 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 03:39:28,032 | DEBUG: Data: None
2023-07-01 03:39:28,032 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:28,233 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3456
2023-07-01 03:39:28,233 | DEBUG: Response: 200 (3456 bytes)
2023-07-01 03:39:28,234 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:39:28,234 | DEBUG: Data: None
2023-07-01 03:39:28,234 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:28,374 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3457
2023-07-01 03:39:28,374 | DEBUG: Response: 200 (3457 bytes)
2023-07-01 03:39:28,375 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:39:28,375 | DEBUG: Data: None
2023-07-01 03:39:28,375 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:28,576 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:39:28,577 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:39:28,578 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 03:39:28,578 | DEBUG: Data: None
2023-07-01 03:39:28,578 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:28,708 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:39:28,709 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:39:28,709 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 03:39:28,709 | DEBUG: Data: None
2023-07-01 03:39:28,709 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:28,910 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4442
2023-07-01 03:39:28,911 | DEBUG: Response: 200 (4442 bytes)
2023-07-01 03:39:28,912 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 03:39:28,912 | DEBUG: Data: None
2023-07-01 03:39:28,913 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:29,295 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4440
2023-07-01 03:39:29,297 | DEBUG: Response: 200 (4440 bytes)
2023-07-01 03:39:29,299 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 03:39:29,299 | DEBUG: Data: None
2023-07-01 03:39:29,299 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:29,456 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3783
2023-07-01 03:39:29,457 | DEBUG: Response: 200 (3783 bytes)
2023-07-01 03:39:29,458 | INFO: 127.0.0.1 - - [01/Jul/2023 03:39:29] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-01 03:39:29,619 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3783
2023-07-01 03:39:29,620 | DEBUG: Response: 200 (3783 bytes)
2023-07-01 03:39:29,622 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:39:29,622 | DEBUG: Data: None
2023-07-01 03:39:29,622 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:39:30,060 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4994
2023-07-01 03:39:30,062 | DEBUG: Response: 200 (4994 bytes)
2023-07-01 03:39:30,062 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 03:39:30,062 | DEBUG: Data: None
2023-07-01 03:39:30,062 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:30,413 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5030
2023-07-01 03:39:30,414 | DEBUG: Response: 200 (5030 bytes)
2023-07-01 03:39:30,415 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 03:39:30,415 | DEBUG: Data: None
2023-07-01 03:39:30,415 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:30,790 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2398
2023-07-01 03:39:30,790 | DEBUG: Response: 200 (2398 bytes)
2023-07-01 03:39:30,791 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 03:39:30,791 | DEBUG: Data: None
2023-07-01 03:39:30,791 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:39:31,168 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6621
2023-07-01 03:39:31,170 | DEBUG: Response: 200 (6621 bytes)
2023-07-01 03:39:31,172 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:39:31,172 | DEBUG: Data: None
2023-07-01 03:39:31,172 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:39:31,472 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 03:39:31,472 | DEBUG: Response: 200 (136 bytes)
2023-07-01 03:39:31,473 | INFO: 127.0.0.1 - - [01/Jul/2023 03:39:31] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 03:42:40,176 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:42:40,176 | DEBUG: Data: None
2023-07-01 03:42:40,176 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:42:40,526 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4407
2023-07-01 03:42:40,528 | DEBUG: Response: 200 (4407 bytes)
2023-07-01 03:42:40,528 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 03:42:40,529 | DEBUG: Data: None
2023-07-01 03:42:40,529 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:42:40,974 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5462
2023-07-01 03:42:40,977 | DEBUG: Response: 200 (5462 bytes)
2023-07-01 03:42:40,985 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 03:42:40,986 | DEBUG: Data: None
2023-07-01 03:42:40,986 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:42:41,348 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4199
2023-07-01 03:42:41,350 | DEBUG: Response: 200 (4199 bytes)
2023-07-01 03:42:41,352 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:42:41,352 | DEBUG: Data: None
2023-07-01 03:42:41,353 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:42:41,693 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:42:41,694 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:42:41,695 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 03:42:41,695 | DEBUG: Data: None
2023-07-01 03:42:41,695 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:42:42,023 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2069
2023-07-01 03:42:42,028 | DEBUG: Response: 200 (2069 bytes)
2023-07-01 03:42:42,032 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:42:42,033 | DEBUG: Data: None
2023-07-01 03:42:42,033 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:42:42,438 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5645
2023-07-01 03:42:42,439 | DEBUG: Response: 200 (5645 bytes)
2023-07-01 03:42:42,443 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 03:42:42,444 | DEBUG: Data: None
2023-07-01 03:42:42,444 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:42:42,752 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3357
2023-07-01 03:42:42,753 | DEBUG: Response: 200 (3357 bytes)
2023-07-01 03:42:42,754 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 03:42:42,754 | DEBUG: Data: None
2023-07-01 03:42:42,754 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:42:43,109 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3452
2023-07-01 03:42:43,109 | DEBUG: Response: 200 (3452 bytes)
2023-07-01 03:42:43,110 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:42:43,111 | DEBUG: Data: None
2023-07-01 03:42:43,111 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:42:43,428 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:42:43,429 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:42:43,429 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 03:42:43,429 | DEBUG: Data: None
2023-07-01 03:42:43,429 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:42:43,796 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4441
2023-07-01 03:42:43,797 | DEBUG: Response: 200 (4441 bytes)
2023-07-01 03:42:43,799 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 03:42:43,799 | DEBUG: Data: None
2023-07-01 03:42:43,799 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:42:44,113 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3785
2023-07-01 03:42:44,113 | DEBUG: Response: 200 (3785 bytes)
2023-07-01 03:42:44,114 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:42:44,114 | DEBUG: Data: None
2023-07-01 03:42:44,114 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:42:44,480 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4992
2023-07-01 03:42:44,481 | DEBUG: Response: 200 (4992 bytes)
2023-07-01 03:42:44,482 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 03:42:44,482 | DEBUG: Data: None
2023-07-01 03:42:44,482 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:42:44,820 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 03:42:44,825 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 03:42:44,826 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 03:42:44,827 | DEBUG: Data: None
2023-07-01 03:42:44,827 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:42:45,212 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2400
2023-07-01 03:42:45,212 | DEBUG: Response: 200 (2400 bytes)
2023-07-01 03:42:45,213 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 03:42:45,213 | DEBUG: Data: None
2023-07-01 03:42:45,213 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:42:45,610 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6615
2023-07-01 03:42:45,611 | DEBUG: Response: 200 (6615 bytes)
2023-07-01 03:42:45,613 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:42:45,614 | DEBUG: Data: None
2023-07-01 03:42:45,614 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:42:45,944 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 03:42:45,945 | DEBUG: Response: 200 (136 bytes)
2023-07-01 03:42:45,946 | INFO: 127.0.0.1 - - [01/Jul/2023 03:42:45] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-01 03:42:59,335 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:42:59,336 | DEBUG: Data: None
2023-07-01 03:42:59,336 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:42:59,747 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4400
2023-07-01 03:42:59,748 | DEBUG: Response: 200 (4400 bytes)
2023-07-01 03:42:59,749 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 03:42:59,749 | DEBUG: Data: None
2023-07-01 03:42:59,749 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:43:00,130 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5460
2023-07-01 03:43:00,131 | DEBUG: Response: 200 (5460 bytes)
2023-07-01 03:43:00,133 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 03:43:00,133 | DEBUG: Data: None
2023-07-01 03:43:00,133 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:43:00,489 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4199
2023-07-01 03:43:00,495 | DEBUG: Response: 200 (4199 bytes)
2023-07-01 03:43:00,496 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:43:00,496 | DEBUG: Data: None
2023-07-01 03:43:00,496 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:43:00,818 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:43:00,818 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:43:00,818 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 03:43:00,819 | DEBUG: Data: None
2023-07-01 03:43:00,819 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:43:01,117 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2069
2023-07-01 03:43:01,117 | DEBUG: Response: 200 (2069 bytes)
2023-07-01 03:43:01,118 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:43:01,118 | DEBUG: Data: None
2023-07-01 03:43:01,118 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:43:01,460 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5630
2023-07-01 03:43:01,461 | DEBUG: Response: 200 (5630 bytes)
2023-07-01 03:43:01,462 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 03:43:01,462 | DEBUG: Data: None
2023-07-01 03:43:01,462 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:43:01,807 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3355
2023-07-01 03:43:01,808 | DEBUG: Response: 200 (3355 bytes)
2023-07-01 03:43:01,809 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 03:43:01,809 | DEBUG: Data: None
2023-07-01 03:43:01,809 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:43:03,155 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3451
2023-07-01 03:43:03,156 | DEBUG: Response: 200 (3451 bytes)
2023-07-01 03:43:03,157 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:43:03,157 | DEBUG: Data: None
2023-07-01 03:43:03,157 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:43:03,464 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:43:03,465 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:43:03,465 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 03:43:03,465 | DEBUG: Data: None
2023-07-01 03:43:03,465 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:43:03,829 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4441
2023-07-01 03:43:03,830 | DEBUG: Response: 200 (4441 bytes)
2023-07-01 03:43:03,831 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 03:43:03,831 | DEBUG: Data: None
2023-07-01 03:43:03,831 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:43:04,143 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3783
2023-07-01 03:43:04,143 | DEBUG: Response: 200 (3783 bytes)
2023-07-01 03:43:04,145 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:43:04,145 | DEBUG: Data: None
2023-07-01 03:43:04,145 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:43:04,494 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5000
2023-07-01 03:43:04,495 | DEBUG: Response: 200 (5000 bytes)
2023-07-01 03:43:04,496 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 03:43:04,496 | DEBUG: Data: None
2023-07-01 03:43:04,496 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:43:04,837 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5032
2023-07-01 03:43:04,838 | DEBUG: Response: 200 (5032 bytes)
2023-07-01 03:43:04,839 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 03:43:04,839 | DEBUG: Data: None
2023-07-01 03:43:04,839 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:43:05,318 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2397
2023-07-01 03:43:05,319 | DEBUG: Response: 200 (2397 bytes)
2023-07-01 03:43:05,320 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 03:43:05,320 | DEBUG: Data: None
2023-07-01 03:43:05,320 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:43:05,717 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6623
2023-07-01 03:43:05,718 | DEBUG: Response: 200 (6623 bytes)
2023-07-01 03:43:05,720 | INFO: 127.0.0.1 - - [01/Jul/2023 03:43:05] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 03:43:05,727 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:43:05,727 | DEBUG: Data: None
2023-07-01 03:43:05,727 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:43:06,152 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4390
2023-07-01 03:43:06,153 | DEBUG: Response: 200 (4390 bytes)
2023-07-01 03:43:06,153 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 03:43:06,154 | DEBUG: Data: None
2023-07-01 03:43:06,154 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:43:06,554 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5456
2023-07-01 03:43:06,554 | DEBUG: Response: 200 (5456 bytes)
2023-07-01 03:43:06,556 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 03:43:06,556 | DEBUG: Data: None
2023-07-01 03:43:06,556 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:43:06,928 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4144
2023-07-01 03:43:06,929 | DEBUG: Response: 200 (4144 bytes)
2023-07-01 03:43:06,930 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:43:06,930 | DEBUG: Data: None
2023-07-01 03:43:06,930 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:43:07,293 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:43:07,294 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:43:07,295 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 03:43:07,295 | DEBUG: Data: None
2023-07-01 03:43:07,295 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:43:07,625 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2069
2023-07-01 03:43:07,625 | DEBUG: Response: 200 (2069 bytes)
2023-07-01 03:43:07,626 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:43:07,626 | DEBUG: Data: None
2023-07-01 03:43:07,626 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:43:08,008 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5638
2023-07-01 03:43:08,009 | DEBUG: Response: 200 (5638 bytes)
2023-07-01 03:43:08,010 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 03:43:08,010 | DEBUG: Data: None
2023-07-01 03:43:08,010 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:43:09,074 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3355
2023-07-01 03:43:09,075 | DEBUG: Response: 200 (3355 bytes)
2023-07-01 03:43:09,076 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 03:43:09,076 | DEBUG: Data: None
2023-07-01 03:43:09,076 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:43:09,464 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3457
2023-07-01 03:43:09,464 | DEBUG: Response: 200 (3457 bytes)
2023-07-01 03:43:09,465 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:43:09,465 | DEBUG: Data: None
2023-07-01 03:43:09,465 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:43:10,134 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:43:10,135 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:43:10,135 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 03:43:10,135 | DEBUG: Data: None
2023-07-01 03:43:10,136 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:43:10,500 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4442
2023-07-01 03:43:10,500 | DEBUG: Response: 200 (4442 bytes)
2023-07-01 03:43:10,501 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 03:43:10,501 | DEBUG: Data: None
2023-07-01 03:43:10,501 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:43:10,823 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3787
2023-07-01 03:43:10,823 | DEBUG: Response: 200 (3787 bytes)
2023-07-01 03:43:10,824 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:43:10,824 | DEBUG: Data: None
2023-07-01 03:43:10,824 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:43:11,158 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4991
2023-07-01 03:43:11,158 | DEBUG: Response: 200 (4991 bytes)
2023-07-01 03:43:11,159 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 03:43:11,159 | DEBUG: Data: None
2023-07-01 03:43:11,159 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:43:11,530 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 03:43:11,532 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 03:43:11,532 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 03:43:11,533 | DEBUG: Data: None
2023-07-01 03:43:11,533 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:43:11,897 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2399
2023-07-01 03:43:11,898 | DEBUG: Response: 200 (2399 bytes)
2023-07-01 03:43:11,898 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 03:43:11,898 | DEBUG: Data: None
2023-07-01 03:43:11,898 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:43:12,273 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6625
2023-07-01 03:43:12,274 | DEBUG: Response: 200 (6625 bytes)
2023-07-01 03:43:12,276 | INFO: 127.0.0.1 - - [01/Jul/2023 03:43:12] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 03:44:04,915 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:44:04,916 | DEBUG: Data: None
2023-07-01 03:44:04,916 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:44:05,264 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4392
2023-07-01 03:44:05,267 | DEBUG: Response: 200 (4392 bytes)
2023-07-01 03:44:05,268 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 03:44:05,268 | DEBUG: Data: None
2023-07-01 03:44:05,268 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:44:05,690 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5455
2023-07-01 03:44:05,693 | DEBUG: Response: 200 (5455 bytes)
2023-07-01 03:44:05,695 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 03:44:05,695 | DEBUG: Data: None
2023-07-01 03:44:05,696 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:44:06,048 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4126
2023-07-01 03:44:06,051 | DEBUG: Response: 200 (4126 bytes)
2023-07-01 03:44:06,054 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:44:06,054 | DEBUG: Data: None
2023-07-01 03:44:06,054 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:44:06,359 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:44:06,360 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:44:06,360 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 03:44:06,361 | DEBUG: Data: None
2023-07-01 03:44:06,361 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:44:06,689 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2069
2023-07-01 03:44:06,692 | DEBUG: Response: 200 (2069 bytes)
2023-07-01 03:44:06,693 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:44:06,693 | DEBUG: Data: None
2023-07-01 03:44:06,693 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:44:07,062 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5632
2023-07-01 03:44:07,063 | DEBUG: Response: 200 (5632 bytes)
2023-07-01 03:44:07,064 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 03:44:07,064 | DEBUG: Data: None
2023-07-01 03:44:07,064 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:44:08,324 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3358
2023-07-01 03:44:08,325 | DEBUG: Response: 200 (3358 bytes)
2023-07-01 03:44:08,326 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 03:44:08,326 | DEBUG: Data: None
2023-07-01 03:44:08,326 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:44:08,664 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3453
2023-07-01 03:44:08,669 | DEBUG: Response: 200 (3453 bytes)
2023-07-01 03:44:08,670 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:44:08,671 | DEBUG: Data: None
2023-07-01 03:44:08,671 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:44:08,994 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:44:08,995 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:44:08,995 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 03:44:08,996 | DEBUG: Data: None
2023-07-01 03:44:08,996 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:44:09,338 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4440
2023-07-01 03:44:09,342 | DEBUG: Response: 200 (4440 bytes)
2023-07-01 03:44:09,345 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 03:44:09,345 | DEBUG: Data: None
2023-07-01 03:44:09,345 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:44:09,652 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3787
2023-07-01 03:44:09,653 | DEBUG: Response: 200 (3787 bytes)
2023-07-01 03:44:09,654 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:44:09,654 | DEBUG: Data: None
2023-07-01 03:44:09,654 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:44:09,981 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5000
2023-07-01 03:44:09,982 | DEBUG: Response: 200 (5000 bytes)
2023-07-01 03:44:09,983 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 03:44:09,983 | DEBUG: Data: None
2023-07-01 03:44:09,983 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:44:10,302 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5032
2023-07-01 03:44:10,303 | DEBUG: Response: 200 (5032 bytes)
2023-07-01 03:44:10,304 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 03:44:10,304 | DEBUG: Data: None
2023-07-01 03:44:10,304 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:44:10,641 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2398
2023-07-01 03:44:10,643 | DEBUG: Response: 200 (2398 bytes)
2023-07-01 03:44:10,644 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 03:44:10,644 | DEBUG: Data: None
2023-07-01 03:44:10,644 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:44:13,182 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6623
2023-07-01 03:44:13,186 | DEBUG: Response: 200 (6623 bytes)
2023-07-01 03:44:13,195 | INFO: 127.0.0.1 - - [01/Jul/2023 03:44:13] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 03:44:37,331 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:44:37,331 | DEBUG: Data: None
2023-07-01 03:44:37,331 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:44:37,728 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4400
2023-07-01 03:44:37,728 | DEBUG: Response: 200 (4400 bytes)
2023-07-01 03:44:37,731 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 03:44:37,731 | DEBUG: Data: None
2023-07-01 03:44:37,731 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:44:38,105 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5457
2023-07-01 03:44:38,105 | DEBUG: Response: 200 (5457 bytes)
2023-07-01 03:44:38,108 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 03:44:38,108 | DEBUG: Data: None
2023-07-01 03:44:38,108 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:44:38,713 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4136
2023-07-01 03:44:38,714 | DEBUG: Response: 200 (4136 bytes)
2023-07-01 03:44:38,715 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:44:38,715 | DEBUG: Data: None
2023-07-01 03:44:38,715 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:44:39,387 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:44:39,388 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:44:39,389 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 03:44:39,389 | DEBUG: Data: None
2023-07-01 03:44:39,389 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:44:39,706 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2069
2023-07-01 03:44:39,708 | DEBUG: Response: 200 (2069 bytes)
2023-07-01 03:44:39,710 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:44:39,711 | DEBUG: Data: None
2023-07-01 03:44:39,711 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:44:40,086 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5643
2023-07-01 03:44:40,087 | DEBUG: Response: 200 (5643 bytes)
2023-07-01 03:44:40,088 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 03:44:40,088 | DEBUG: Data: None
2023-07-01 03:44:40,088 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:44:40,418 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3354
2023-07-01 03:44:40,419 | DEBUG: Response: 200 (3354 bytes)
2023-07-01 03:44:40,419 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 03:44:40,419 | DEBUG: Data: None
2023-07-01 03:44:40,420 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:44:40,767 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3456
2023-07-01 03:44:40,768 | DEBUG: Response: 200 (3456 bytes)
2023-07-01 03:44:40,771 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:44:40,771 | DEBUG: Data: None
2023-07-01 03:44:40,771 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:44:41,107 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:44:41,109 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:44:41,110 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 03:44:41,110 | DEBUG: Data: None
2023-07-01 03:44:41,110 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:44:41,448 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4441
2023-07-01 03:44:41,449 | DEBUG: Response: 200 (4441 bytes)
2023-07-01 03:44:41,451 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 03:44:41,451 | DEBUG: Data: None
2023-07-01 03:44:41,451 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:44:41,792 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3781
2023-07-01 03:44:41,795 | DEBUG: Response: 200 (3781 bytes)
2023-07-01 03:44:41,796 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:44:41,796 | DEBUG: Data: None
2023-07-01 03:44:41,796 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:44:42,147 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4993
2023-07-01 03:44:42,149 | DEBUG: Response: 200 (4993 bytes)
2023-07-01 03:44:42,151 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 03:44:42,152 | DEBUG: Data: None
2023-07-01 03:44:42,152 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:44:42,478 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 03:44:42,481 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 03:44:42,483 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 03:44:42,483 | DEBUG: Data: None
2023-07-01 03:44:42,483 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:44:42,874 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2397
2023-07-01 03:44:42,875 | DEBUG: Response: 200 (2397 bytes)
2023-07-01 03:44:42,876 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 03:44:42,876 | DEBUG: Data: None
2023-07-01 03:44:42,876 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:44:43,247 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6623
2023-07-01 03:44:43,248 | DEBUG: Response: 200 (6623 bytes)
2023-07-01 03:44:43,252 | INFO: 127.0.0.1 - - [01/Jul/2023 03:44:43] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 03:45:01,521 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:45:01,522 | DEBUG: Data: None
2023-07-01 03:45:01,522 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:45:01,645 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:45:01,645 | DEBUG: Data: None
2023-07-01 03:45:01,645 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:45:01,812 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 03:45:01,816 | DEBUG: Response: 200 (136 bytes)
2023-07-01 03:45:01,819 | INFO: 127.0.0.1 - - [01/Jul/2023 03:45:01] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-01 03:45:01,951 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:45:01,951 | DEBUG: Data: None
2023-07-01 03:45:01,952 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:45:02,022 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4402
2023-07-01 03:45:02,025 | DEBUG: Response: 200 (4402 bytes)
2023-07-01 03:45:02,027 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 03:45:02,028 | DEBUG: Data: None
2023-07-01 03:45:02,028 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:45:02,307 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4400
2023-07-01 03:45:02,308 | DEBUG: Response: 200 (4400 bytes)
2023-07-01 03:45:02,309 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 03:45:02,309 | DEBUG: Data: None
2023-07-01 03:45:02,309 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:45:02,471 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5460
2023-07-01 03:45:02,472 | DEBUG: Response: 200 (5460 bytes)
2023-07-01 03:45:02,475 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 03:45:02,475 | DEBUG: Data: None
2023-07-01 03:45:02,475 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:45:02,862 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4129
2023-07-01 03:45:02,863 | DEBUG: Response: 200 (4129 bytes)
2023-07-01 03:45:02,864 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:45:02,864 | DEBUG: Data: None
2023-07-01 03:45:02,864 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:45:03,222 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:45:03,223 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:45:03,223 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 03:45:03,223 | DEBUG: Data: None
2023-07-01 03:45:03,223 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:45:03,537 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2069
2023-07-01 03:45:03,538 | DEBUG: Response: 200 (2069 bytes)
2023-07-01 03:45:03,539 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:45:03,539 | DEBUG: Data: None
2023-07-01 03:45:03,539 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:45:03,901 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5648
2023-07-01 03:45:03,902 | DEBUG: Response: 200 (5648 bytes)
2023-07-01 03:45:03,903 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 03:45:03,903 | DEBUG: Data: None
2023-07-01 03:45:03,903 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:45:04,032 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5463
2023-07-01 03:45:04,033 | DEBUG: Response: 200 (5463 bytes)
2023-07-01 03:45:04,035 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 03:45:04,035 | DEBUG: Data: None
2023-07-01 03:45:04,035 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:45:04,235 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3355
2023-07-01 03:45:04,235 | DEBUG: Response: 200 (3355 bytes)
2023-07-01 03:45:04,236 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 03:45:04,236 | DEBUG: Data: None
2023-07-01 03:45:04,236 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:45:04,382 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4198
2023-07-01 03:45:04,383 | DEBUG: Response: 200 (4198 bytes)
2023-07-01 03:45:04,384 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:45:04,384 | DEBUG: Data: None
2023-07-01 03:45:04,384 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:45:04,592 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3459
2023-07-01 03:45:04,592 | DEBUG: Response: 200 (3459 bytes)
2023-07-01 03:45:04,593 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:45:04,593 | DEBUG: Data: None
2023-07-01 03:45:04,593 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:45:04,708 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:45:04,709 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:45:04,709 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 03:45:04,709 | DEBUG: Data: None
2023-07-01 03:45:04,709 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:45:05,019 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2069
2023-07-01 03:45:05,020 | DEBUG: Response: 200 (2069 bytes)
2023-07-01 03:45:05,020 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:45:05,021 | DEBUG: Data: None
2023-07-01 03:45:05,021 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:45:05,137 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:45:05,138 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:45:05,138 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 03:45:05,138 | DEBUG: Data: None
2023-07-01 03:45:05,138 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:45:05,360 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5645
2023-07-01 03:45:05,361 | DEBUG: Response: 200 (5645 bytes)
2023-07-01 03:45:05,362 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 03:45:05,362 | DEBUG: Data: None
2023-07-01 03:45:05,362 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:45:05,505 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4438
2023-07-01 03:45:05,505 | DEBUG: Response: 200 (4438 bytes)
2023-07-01 03:45:05,508 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 03:45:05,508 | DEBUG: Data: None
2023-07-01 03:45:05,508 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:45:05,668 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3355
2023-07-01 03:45:05,669 | DEBUG: Response: 200 (3355 bytes)
2023-07-01 03:45:05,670 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 03:45:05,670 | DEBUG: Data: None
2023-07-01 03:45:05,670 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:45:05,820 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3786
2023-07-01 03:45:05,820 | DEBUG: Response: 200 (3786 bytes)
2023-07-01 03:45:05,821 | INFO: 127.0.0.1 - - [01/Jul/2023 03:45:05] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-01 03:45:06,013 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3457
2023-07-01 03:45:06,013 | DEBUG: Response: 200 (3457 bytes)
2023-07-01 03:45:06,014 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:45:06,014 | DEBUG: Data: None
2023-07-01 03:45:06,014 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:45:06,336 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:45:06,337 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:45:06,337 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 03:45:06,337 | DEBUG: Data: None
2023-07-01 03:45:06,337 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:45:06,701 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4441
2023-07-01 03:45:06,702 | DEBUG: Response: 200 (4441 bytes)
2023-07-01 03:45:06,703 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 03:45:06,703 | DEBUG: Data: None
2023-07-01 03:45:06,703 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:45:07,039 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3781
2023-07-01 03:45:07,039 | DEBUG: Response: 200 (3781 bytes)
2023-07-01 03:45:07,040 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:45:07,040 | DEBUG: Data: None
2023-07-01 03:45:07,040 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:45:07,376 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4993
2023-07-01 03:45:07,380 | DEBUG: Response: 200 (4993 bytes)
2023-07-01 03:45:07,381 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 03:45:07,381 | DEBUG: Data: None
2023-07-01 03:45:07,381 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:45:07,719 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5032
2023-07-01 03:45:07,720 | DEBUG: Response: 200 (5032 bytes)
2023-07-01 03:45:07,721 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 03:45:07,721 | DEBUG: Data: None
2023-07-01 03:45:07,721 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:45:08,070 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2398
2023-07-01 03:45:08,070 | DEBUG: Response: 200 (2398 bytes)
2023-07-01 03:45:08,071 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 03:45:08,071 | DEBUG: Data: None
2023-07-01 03:45:08,071 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:45:08,444 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6624
2023-07-01 03:45:08,445 | DEBUG: Response: 200 (6624 bytes)
2023-07-01 03:45:08,450 | INFO: 127.0.0.1 - - [01/Jul/2023 03:45:08] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 03:46:28,182 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:46:28,183 | DEBUG: Data: None
2023-07-01 03:46:28,183 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:46:28,567 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4398
2023-07-01 03:46:28,570 | DEBUG: Response: 200 (4398 bytes)
2023-07-01 03:46:28,572 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 03:46:28,572 | DEBUG: Data: None
2023-07-01 03:46:28,572 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:46:29,002 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5457
2023-07-01 03:46:29,004 | DEBUG: Response: 200 (5457 bytes)
2023-07-01 03:46:29,008 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 03:46:29,008 | DEBUG: Data: None
2023-07-01 03:46:29,008 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:46:29,375 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4142
2023-07-01 03:46:29,376 | DEBUG: Response: 200 (4142 bytes)
2023-07-01 03:46:29,377 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:46:29,377 | DEBUG: Data: None
2023-07-01 03:46:29,378 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:46:29,713 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:46:29,716 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:46:29,717 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 03:46:29,717 | DEBUG: Data: None
2023-07-01 03:46:29,717 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:46:30,060 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2069
2023-07-01 03:46:30,060 | DEBUG: Response: 200 (2069 bytes)
2023-07-01 03:46:30,061 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:46:30,061 | DEBUG: Data: None
2023-07-01 03:46:30,062 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:46:30,462 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5648
2023-07-01 03:46:30,464 | DEBUG: Response: 200 (5648 bytes)
2023-07-01 03:46:30,465 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 03:46:30,465 | DEBUG: Data: None
2023-07-01 03:46:30,465 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:46:31,147 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3355
2023-07-01 03:46:31,147 | DEBUG: Response: 200 (3355 bytes)
2023-07-01 03:46:31,148 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 03:46:31,148 | DEBUG: Data: None
2023-07-01 03:46:31,148 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:46:31,508 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3456
2023-07-01 03:46:31,508 | DEBUG: Response: 200 (3456 bytes)
2023-07-01 03:46:31,509 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:46:31,509 | DEBUG: Data: None
2023-07-01 03:46:31,509 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:46:32,057 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:46:32,057 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:46:32,057 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 03:46:32,058 | DEBUG: Data: None
2023-07-01 03:46:32,058 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:46:32,439 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4442
2023-07-01 03:46:32,440 | DEBUG: Response: 200 (4442 bytes)
2023-07-01 03:46:32,441 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 03:46:32,441 | DEBUG: Data: None
2023-07-01 03:46:32,441 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:46:32,776 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3786
2023-07-01 03:46:32,778 | DEBUG: Response: 200 (3786 bytes)
2023-07-01 03:46:32,778 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:46:32,779 | DEBUG: Data: None
2023-07-01 03:46:32,779 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:46:33,116 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5005
2023-07-01 03:46:33,117 | DEBUG: Response: 200 (5005 bytes)
2023-07-01 03:46:33,118 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 03:46:33,118 | DEBUG: Data: None
2023-07-01 03:46:33,118 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:46:33,687 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 03:46:33,688 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 03:46:33,688 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 03:46:33,688 | DEBUG: Data: None
2023-07-01 03:46:33,688 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:46:34,263 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2398
2023-07-01 03:46:34,264 | DEBUG: Response: 200 (2398 bytes)
2023-07-01 03:46:34,264 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 03:46:34,265 | DEBUG: Data: None
2023-07-01 03:46:34,265 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:46:34,678 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6621
2023-07-01 03:46:34,678 | DEBUG: Response: 200 (6621 bytes)
2023-07-01 03:46:34,681 | INFO: 127.0.0.1 - - [01/Jul/2023 03:46:34] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 03:47:37,504 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:47:37,504 | DEBUG: Data: None
2023-07-01 03:47:37,505 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:47:37,840 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4405
2023-07-01 03:47:37,842 | DEBUG: Response: 200 (4405 bytes)
2023-07-01 03:47:37,844 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 03:47:37,844 | DEBUG: Data: None
2023-07-01 03:47:37,845 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:47:38,506 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5456
2023-07-01 03:47:38,510 | DEBUG: Response: 200 (5456 bytes)
2023-07-01 03:47:38,517 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 03:47:38,517 | DEBUG: Data: None
2023-07-01 03:47:38,517 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:47:38,869 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4196
2023-07-01 03:47:38,870 | DEBUG: Response: 200 (4196 bytes)
2023-07-01 03:47:38,871 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:47:38,871 | DEBUG: Data: None
2023-07-01 03:47:38,871 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:47:39,195 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:47:39,197 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:47:39,197 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 03:47:39,197 | DEBUG: Data: None
2023-07-01 03:47:39,197 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:47:39,511 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2069
2023-07-01 03:47:39,512 | DEBUG: Response: 200 (2069 bytes)
2023-07-01 03:47:39,513 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:47:39,513 | DEBUG: Data: None
2023-07-01 03:47:39,513 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:47:40,070 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5649
2023-07-01 03:47:40,071 | DEBUG: Response: 200 (5649 bytes)
2023-07-01 03:47:40,072 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 03:47:40,072 | DEBUG: Data: None
2023-07-01 03:47:40,072 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:47:40,459 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3357
2023-07-01 03:47:40,461 | DEBUG: Response: 200 (3357 bytes)
2023-07-01 03:47:40,462 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 03:47:40,462 | DEBUG: Data: None
2023-07-01 03:47:40,462 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:47:40,834 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3456
2023-07-01 03:47:40,835 | DEBUG: Response: 200 (3456 bytes)
2023-07-01 03:47:40,836 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:47:40,836 | DEBUG: Data: None
2023-07-01 03:47:40,837 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:47:41,186 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:47:41,186 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:47:41,187 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 03:47:41,187 | DEBUG: Data: None
2023-07-01 03:47:41,187 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:47:41,515 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4440
2023-07-01 03:47:41,516 | DEBUG: Response: 200 (4440 bytes)
2023-07-01 03:47:41,517 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 03:47:41,517 | DEBUG: Data: None
2023-07-01 03:47:41,517 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:47:42,180 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3781
2023-07-01 03:47:42,180 | DEBUG: Response: 200 (3781 bytes)
2023-07-01 03:47:42,181 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:47:42,181 | DEBUG: Data: None
2023-07-01 03:47:42,181 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:47:42,553 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4992
2023-07-01 03:47:42,555 | DEBUG: Response: 200 (4992 bytes)
2023-07-01 03:47:42,555 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 03:47:42,555 | DEBUG: Data: None
2023-07-01 03:47:42,555 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:47:43,151 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5030
2023-07-01 03:47:43,152 | DEBUG: Response: 200 (5030 bytes)
2023-07-01 03:47:43,153 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 03:47:43,153 | DEBUG: Data: None
2023-07-01 03:47:43,153 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:47:43,508 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2397
2023-07-01 03:47:43,509 | DEBUG: Response: 200 (2397 bytes)
2023-07-01 03:47:43,509 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 03:47:43,509 | DEBUG: Data: None
2023-07-01 03:47:43,510 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:47:43,891 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6620
2023-07-01 03:47:43,892 | DEBUG: Response: 200 (6620 bytes)
2023-07-01 03:47:43,894 | INFO: 127.0.0.1 - - [01/Jul/2023 03:47:43] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 03:48:03,042 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:48:03,043 | DEBUG: Data: None
2023-07-01 03:48:03,043 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:48:03,386 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4402
2023-07-01 03:48:03,388 | DEBUG: Response: 200 (4402 bytes)
2023-07-01 03:48:03,392 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 03:48:03,393 | DEBUG: Data: None
2023-07-01 03:48:03,393 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:48:03,763 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5456
2023-07-01 03:48:03,764 | DEBUG: Response: 200 (5456 bytes)
2023-07-01 03:48:03,766 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 03:48:03,766 | DEBUG: Data: None
2023-07-01 03:48:03,766 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:48:04,148 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4143
2023-07-01 03:48:04,153 | DEBUG: Response: 200 (4143 bytes)
2023-07-01 03:48:04,156 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:48:04,156 | DEBUG: Data: None
2023-07-01 03:48:04,156 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:48:04,490 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:48:04,492 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:48:04,492 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 03:48:04,492 | DEBUG: Data: None
2023-07-01 03:48:04,492 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:48:04,817 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2067
2023-07-01 03:48:04,819 | DEBUG: Response: 200 (2067 bytes)
2023-07-01 03:48:04,819 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:48:04,819 | DEBUG: Data: None
2023-07-01 03:48:04,819 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:48:05,204 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5640
2023-07-01 03:48:05,205 | DEBUG: Response: 200 (5640 bytes)
2023-07-01 03:48:05,206 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 03:48:05,206 | DEBUG: Data: None
2023-07-01 03:48:05,206 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:48:05,530 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3356
2023-07-01 03:48:05,531 | DEBUG: Response: 200 (3356 bytes)
2023-07-01 03:48:05,532 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 03:48:05,532 | DEBUG: Data: None
2023-07-01 03:48:05,532 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:48:05,879 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3457
2023-07-01 03:48:05,880 | DEBUG: Response: 200 (3457 bytes)
2023-07-01 03:48:05,880 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:48:05,880 | DEBUG: Data: None
2023-07-01 03:48:05,880 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:48:06,240 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 03:48:06,240 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 03:48:06,241 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 03:48:06,241 | DEBUG: Data: None
2023-07-01 03:48:06,241 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:48:06,575 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4440
2023-07-01 03:48:06,576 | DEBUG: Response: 200 (4440 bytes)
2023-07-01 03:48:06,577 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 03:48:06,577 | DEBUG: Data: None
2023-07-01 03:48:06,577 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:48:06,897 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3786
2023-07-01 03:48:06,898 | DEBUG: Response: 200 (3786 bytes)
2023-07-01 03:48:06,899 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:48:06,899 | DEBUG: Data: None
2023-07-01 03:48:06,899 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:48:07,246 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4992
2023-07-01 03:48:07,247 | DEBUG: Response: 200 (4992 bytes)
2023-07-01 03:48:07,248 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 03:48:07,248 | DEBUG: Data: None
2023-07-01 03:48:07,248 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:48:07,621 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5030
2023-07-01 03:48:07,623 | DEBUG: Response: 200 (5030 bytes)
2023-07-01 03:48:07,623 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 03:48:07,623 | DEBUG: Data: None
2023-07-01 03:48:07,623 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:48:07,971 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2401
2023-07-01 03:48:07,972 | DEBUG: Response: 200 (2401 bytes)
2023-07-01 03:48:07,973 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 03:48:07,973 | DEBUG: Data: None
2023-07-01 03:48:07,973 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:48:08,372 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6625
2023-07-01 03:48:08,373 | DEBUG: Response: 200 (6625 bytes)
2023-07-01 03:48:08,375 | INFO: 127.0.0.1 - - [01/Jul/2023 03:48:08] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 03:51:41,188 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:51:41,189 | DEBUG: Data: None
2023-07-01 03:51:41,189 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:51:41,647 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4388
2023-07-01 03:51:41,648 | DEBUG: Response: 200 (4388 bytes)
2023-07-01 03:51:41,649 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 03:51:41,649 | DEBUG: Data: None
2023-07-01 03:51:41,649 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:51:42,089 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5459
2023-07-01 03:51:42,092 | DEBUG: Response: 200 (5459 bytes)
2023-07-01 03:51:42,096 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 03:51:42,096 | DEBUG: Data: None
2023-07-01 03:51:42,096 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:51:42,449 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4140
2023-07-01 03:51:42,450 | DEBUG: Response: 200 (4140 bytes)
2023-07-01 03:51:42,451 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:51:42,451 | DEBUG: Data: None
2023-07-01 03:51:42,451 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:51:43,205 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1796
2023-07-01 03:51:43,206 | DEBUG: Response: 200 (1796 bytes)
2023-07-01 03:51:43,206 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 03:51:43,206 | DEBUG: Data: None
2023-07-01 03:51:43,206 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:51:43,513 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2065
2023-07-01 03:51:43,513 | DEBUG: Response: 200 (2065 bytes)
2023-07-01 03:51:43,514 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:51:43,514 | DEBUG: Data: None
2023-07-01 03:51:43,514 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:51:43,865 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5646
2023-07-01 03:51:43,867 | DEBUG: Response: 200 (5646 bytes)
2023-07-01 03:51:43,869 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 03:51:43,869 | DEBUG: Data: None
2023-07-01 03:51:43,869 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:51:44,194 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3358
2023-07-01 03:51:44,195 | DEBUG: Response: 200 (3358 bytes)
2023-07-01 03:51:44,195 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 03:51:44,196 | DEBUG: Data: None
2023-07-01 03:51:44,196 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:51:44,584 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3455
2023-07-01 03:51:44,585 | DEBUG: Response: 200 (3455 bytes)
2023-07-01 03:51:44,586 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 03:51:44,586 | DEBUG: Data: None
2023-07-01 03:51:44,586 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:51:44,909 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1796
2023-07-01 03:51:44,910 | DEBUG: Response: 200 (1796 bytes)
2023-07-01 03:51:44,911 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 03:51:44,911 | DEBUG: Data: None
2023-07-01 03:51:44,911 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:51:45,247 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4440
2023-07-01 03:51:45,247 | DEBUG: Response: 200 (4440 bytes)
2023-07-01 03:51:45,248 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 03:51:45,248 | DEBUG: Data: None
2023-07-01 03:51:45,248 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:51:45,564 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3784
2023-07-01 03:51:45,565 | DEBUG: Response: 200 (3784 bytes)
2023-07-01 03:51:45,565 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 03:51:45,565 | DEBUG: Data: None
2023-07-01 03:51:45,566 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 03:51:45,922 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5005
2023-07-01 03:51:45,923 | DEBUG: Response: 200 (5005 bytes)
2023-07-01 03:51:45,924 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 03:51:45,924 | DEBUG: Data: None
2023-07-01 03:51:45,924 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:51:46,615 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 03:51:46,617 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 03:51:46,617 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 03:51:46,618 | DEBUG: Data: None
2023-07-01 03:51:46,618 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:51:46,993 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2398
2023-07-01 03:51:46,994 | DEBUG: Response: 200 (2398 bytes)
2023-07-01 03:51:46,995 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 03:51:46,995 | DEBUG: Data: None
2023-07-01 03:51:46,995 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 03:51:47,405 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6618
2023-07-01 03:51:47,406 | DEBUG: Response: 200 (6618 bytes)
2023-07-01 03:51:47,408 | INFO: 127.0.0.1 - - [01/Jul/2023 03:51:47] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 04:03:17,206 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:03:17,207 | DEBUG: Data: None
2023-07-01 04:03:17,207 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:03:17,215 | DEBUG: Resetting dropped connection: oauth.reddit.com
2023-07-01 04:03:17,891 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4403
2023-07-01 04:03:17,893 | DEBUG: Response: 200 (4403 bytes)
2023-07-01 04:03:17,894 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 04:03:17,894 | DEBUG: Data: None
2023-07-01 04:03:17,894 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:03:18,296 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5559
2023-07-01 04:03:18,303 | DEBUG: Response: 200 (5559 bytes)
2023-07-01 04:03:18,306 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 04:03:18,306 | DEBUG: Data: None
2023-07-01 04:03:18,306 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:03:18,631 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4457
2023-07-01 04:03:18,634 | DEBUG: Response: 200 (4457 bytes)
2023-07-01 04:03:18,635 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:03:18,635 | DEBUG: Data: None
2023-07-01 04:03:18,635 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:03:18,992 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1796
2023-07-01 04:03:18,993 | DEBUG: Response: 200 (1796 bytes)
2023-07-01 04:03:18,993 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 04:03:18,993 | DEBUG: Data: None
2023-07-01 04:03:18,993 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:03:19,304 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2071
2023-07-01 04:03:19,305 | DEBUG: Response: 200 (2071 bytes)
2023-07-01 04:03:19,306 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:03:19,306 | DEBUG: Data: None
2023-07-01 04:03:19,306 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:03:20,031 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5632
2023-07-01 04:03:20,033 | DEBUG: Response: 200 (5632 bytes)
2023-07-01 04:03:20,037 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 04:03:20,038 | DEBUG: Data: None
2023-07-01 04:03:20,038 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:03:20,369 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3447
2023-07-01 04:03:20,371 | DEBUG: Response: 200 (3447 bytes)
2023-07-01 04:03:20,373 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 04:03:20,374 | DEBUG: Data: None
2023-07-01 04:03:20,374 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:03:20,741 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3717
2023-07-01 04:03:20,742 | DEBUG: Response: 200 (3717 bytes)
2023-07-01 04:03:20,743 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:03:20,743 | DEBUG: Data: None
2023-07-01 04:03:20,743 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:03:21,086 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1796
2023-07-01 04:03:21,090 | DEBUG: Response: 200 (1796 bytes)
2023-07-01 04:03:21,091 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 04:03:21,091 | DEBUG: Data: None
2023-07-01 04:03:21,091 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:03:21,495 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4440
2023-07-01 04:03:21,495 | DEBUG: Response: 200 (4440 bytes)
2023-07-01 04:03:21,496 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 04:03:21,496 | DEBUG: Data: None
2023-07-01 04:03:21,496 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:03:22,134 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3784
2023-07-01 04:03:22,134 | DEBUG: Response: 200 (3784 bytes)
2023-07-01 04:03:22,136 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:03:22,136 | DEBUG: Data: None
2023-07-01 04:03:22,136 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:03:22,578 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4999
2023-07-01 04:03:22,581 | DEBUG: Response: 200 (4999 bytes)
2023-07-01 04:03:22,582 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 04:03:22,582 | DEBUG: Data: None
2023-07-01 04:03:22,582 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:03:25,079 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5030
2023-07-01 04:03:25,081 | DEBUG: Response: 200 (5030 bytes)
2023-07-01 04:03:25,082 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 04:03:25,082 | DEBUG: Data: None
2023-07-01 04:03:25,082 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:03:25,426 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2397
2023-07-01 04:03:25,427 | DEBUG: Response: 200 (2397 bytes)
2023-07-01 04:03:25,427 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 04:03:25,427 | DEBUG: Data: None
2023-07-01 04:03:25,427 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:03:25,802 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6665
2023-07-01 04:03:25,803 | DEBUG: Response: 200 (6665 bytes)
2023-07-01 04:03:25,805 | INFO: 127.0.0.1 - - [01/Jul/2023 04:03:25] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 04:11:23,392 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:11:23,392 | DEBUG: Data: None
2023-07-01 04:11:23,392 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:11:23,742 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4396
2023-07-01 04:11:23,745 | DEBUG: Response: 200 (4396 bytes)
2023-07-01 04:11:23,749 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 04:11:23,749 | DEBUG: Data: None
2023-07-01 04:11:23,750 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:11:24,181 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5567
2023-07-01 04:11:24,187 | DEBUG: Response: 200 (5567 bytes)
2023-07-01 04:11:24,193 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 04:11:24,194 | DEBUG: Data: None
2023-07-01 04:11:24,194 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:11:24,529 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4568
2023-07-01 04:11:24,535 | DEBUG: Response: 200 (4568 bytes)
2023-07-01 04:11:24,537 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:11:24,537 | DEBUG: Data: None
2023-07-01 04:11:24,538 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:11:24,865 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1796
2023-07-01 04:11:24,871 | DEBUG: Response: 200 (1796 bytes)
2023-07-01 04:11:24,874 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 04:11:24,874 | DEBUG: Data: None
2023-07-01 04:11:24,874 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:11:25,196 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2067
2023-07-01 04:11:25,197 | DEBUG: Response: 200 (2067 bytes)
2023-07-01 04:11:25,198 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:11:25,198 | DEBUG: Data: None
2023-07-01 04:11:25,198 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:11:25,625 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5641
2023-07-01 04:11:25,627 | DEBUG: Response: 200 (5641 bytes)
2023-07-01 04:11:25,628 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 04:11:25,628 | DEBUG: Data: None
2023-07-01 04:11:25,628 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:11:25,988 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3446
2023-07-01 04:11:25,989 | DEBUG: Response: 200 (3446 bytes)
2023-07-01 04:11:25,991 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 04:11:25,991 | DEBUG: Data: None
2023-07-01 04:11:25,992 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:11:26,368 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3715
2023-07-01 04:11:26,369 | DEBUG: Response: 200 (3715 bytes)
2023-07-01 04:11:26,370 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:11:26,370 | DEBUG: Data: None
2023-07-01 04:11:26,370 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:11:26,725 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1796
2023-07-01 04:11:26,727 | DEBUG: Response: 200 (1796 bytes)
2023-07-01 04:11:26,728 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 04:11:26,728 | DEBUG: Data: None
2023-07-01 04:11:26,728 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:11:27,109 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4441
2023-07-01 04:11:27,111 | DEBUG: Response: 200 (4441 bytes)
2023-07-01 04:11:27,113 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 04:11:27,113 | DEBUG: Data: None
2023-07-01 04:11:27,113 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:11:27,477 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3782
2023-07-01 04:11:27,479 | DEBUG: Response: 200 (3782 bytes)
2023-07-01 04:11:27,480 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:11:27,480 | DEBUG: Data: None
2023-07-01 04:11:27,480 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:11:27,875 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5002
2023-07-01 04:11:27,875 | DEBUG: Response: 200 (5002 bytes)
2023-07-01 04:11:27,876 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 04:11:27,876 | DEBUG: Data: None
2023-07-01 04:11:27,876 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:11:28,225 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5032
2023-07-01 04:11:28,229 | DEBUG: Response: 200 (5032 bytes)
2023-07-01 04:11:28,232 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 04:11:28,233 | DEBUG: Data: None
2023-07-01 04:11:28,233 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:11:28,609 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2397
2023-07-01 04:11:28,610 | DEBUG: Response: 200 (2397 bytes)
2023-07-01 04:11:28,611 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 04:11:28,611 | DEBUG: Data: None
2023-07-01 04:11:28,611 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:11:29,017 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6651
2023-07-01 04:11:29,020 | DEBUG: Response: 200 (6651 bytes)
2023-07-01 04:11:29,022 | INFO: 127.0.0.1 - - [01/Jul/2023 04:11:29] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 04:12:40,194 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:12:40,194 | DEBUG: Data: None
2023-07-01 04:12:40,195 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:12:40,548 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4386
2023-07-01 04:12:40,555 | DEBUG: Response: 200 (4386 bytes)
2023-07-01 04:12:40,559 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 04:12:40,560 | DEBUG: Data: None
2023-07-01 04:12:40,560 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:12:40,991 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5562
2023-07-01 04:12:40,993 | DEBUG: Response: 200 (5562 bytes)
2023-07-01 04:12:41,002 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 04:12:41,003 | DEBUG: Data: None
2023-07-01 04:12:41,003 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:12:41,461 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4567
2023-07-01 04:12:41,464 | DEBUG: Response: 200 (4567 bytes)
2023-07-01 04:12:41,465 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:12:41,465 | DEBUG: Data: None
2023-07-01 04:12:41,465 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:12:41,836 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1796
2023-07-01 04:12:41,840 | DEBUG: Response: 200 (1796 bytes)
2023-07-01 04:12:41,841 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 04:12:41,841 | DEBUG: Data: None
2023-07-01 04:12:41,841 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:12:42,160 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2068
2023-07-01 04:12:42,161 | DEBUG: Response: 200 (2068 bytes)
2023-07-01 04:12:42,162 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:12:42,162 | DEBUG: Data: None
2023-07-01 04:12:42,162 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:12:42,520 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5640
2023-07-01 04:12:42,523 | DEBUG: Response: 200 (5640 bytes)
2023-07-01 04:12:42,524 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 04:12:42,524 | DEBUG: Data: None
2023-07-01 04:12:42,524 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:12:42,872 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3449
2023-07-01 04:12:42,872 | DEBUG: Response: 200 (3449 bytes)
2023-07-01 04:12:42,873 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 04:12:42,873 | DEBUG: Data: None
2023-07-01 04:12:42,873 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:12:43,254 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3712
2023-07-01 04:12:43,254 | DEBUG: Response: 200 (3712 bytes)
2023-07-01 04:12:43,255 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:12:43,256 | DEBUG: Data: None
2023-07-01 04:12:43,256 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:12:43,598 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1796
2023-07-01 04:12:43,599 | DEBUG: Response: 200 (1796 bytes)
2023-07-01 04:12:43,599 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 04:12:43,599 | DEBUG: Data: None
2023-07-01 04:12:43,600 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:12:43,958 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4441
2023-07-01 04:12:43,959 | DEBUG: Response: 200 (4441 bytes)
2023-07-01 04:12:43,960 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 04:12:43,960 | DEBUG: Data: None
2023-07-01 04:12:43,960 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:12:44,274 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3787
2023-07-01 04:12:44,275 | DEBUG: Response: 200 (3787 bytes)
2023-07-01 04:12:44,275 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:12:44,275 | DEBUG: Data: None
2023-07-01 04:12:44,275 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:12:44,624 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4995
2023-07-01 04:12:44,625 | DEBUG: Response: 200 (4995 bytes)
2023-07-01 04:12:44,627 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 04:12:44,627 | DEBUG: Data: None
2023-07-01 04:12:44,628 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:12:44,986 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5032
2023-07-01 04:12:44,986 | DEBUG: Response: 200 (5032 bytes)
2023-07-01 04:12:44,987 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 04:12:44,987 | DEBUG: Data: None
2023-07-01 04:12:44,987 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:12:45,331 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2398
2023-07-01 04:12:45,331 | DEBUG: Response: 200 (2398 bytes)
2023-07-01 04:12:45,332 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 04:12:45,332 | DEBUG: Data: None
2023-07-01 04:12:45,332 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:12:45,737 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6661
2023-07-01 04:12:45,738 | DEBUG: Response: 200 (6661 bytes)
2023-07-01 04:12:45,740 | INFO: 127.0.0.1 - - [01/Jul/2023 04:12:45] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 04:15:52,188 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:15:52,188 | DEBUG: Data: None
2023-07-01 04:15:52,188 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:15:52,606 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4387
2023-07-01 04:15:52,609 | DEBUG: Response: 200 (4387 bytes)
2023-07-01 04:15:52,610 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 04:15:52,611 | DEBUG: Data: None
2023-07-01 04:15:52,611 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:15:53,239 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5569
2023-07-01 04:15:53,239 | DEBUG: Response: 200 (5569 bytes)
2023-07-01 04:15:53,242 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 04:15:53,242 | DEBUG: Data: None
2023-07-01 04:15:53,242 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:15:53,935 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4569
2023-07-01 04:15:53,936 | DEBUG: Response: 200 (4569 bytes)
2023-07-01 04:15:53,937 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:15:53,937 | DEBUG: Data: None
2023-07-01 04:15:53,937 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:15:54,289 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:15:54,290 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:15:54,290 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 04:15:54,290 | DEBUG: Data: None
2023-07-01 04:15:54,290 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:15:54,635 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2065
2023-07-01 04:15:54,636 | DEBUG: Response: 200 (2065 bytes)
2023-07-01 04:15:54,637 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:15:54,637 | DEBUG: Data: None
2023-07-01 04:15:54,637 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:15:55,068 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5632
2023-07-01 04:15:55,069 | DEBUG: Response: 200 (5632 bytes)
2023-07-01 04:15:55,070 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 04:15:55,070 | DEBUG: Data: None
2023-07-01 04:15:55,070 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:15:55,403 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3447
2023-07-01 04:15:55,404 | DEBUG: Response: 200 (3447 bytes)
2023-07-01 04:15:55,405 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 04:15:55,405 | DEBUG: Data: None
2023-07-01 04:15:55,405 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:15:55,778 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3718
2023-07-01 04:15:55,778 | DEBUG: Response: 200 (3718 bytes)
2023-07-01 04:15:55,779 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:15:55,779 | DEBUG: Data: None
2023-07-01 04:15:55,780 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:15:56,123 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:15:56,124 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:15:56,125 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 04:15:56,125 | DEBUG: Data: None
2023-07-01 04:15:56,125 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:15:56,457 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4442
2023-07-01 04:15:56,457 | DEBUG: Response: 200 (4442 bytes)
2023-07-01 04:15:56,459 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 04:15:56,459 | DEBUG: Data: None
2023-07-01 04:15:56,459 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:15:56,762 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3785
2023-07-01 04:15:56,763 | DEBUG: Response: 200 (3785 bytes)
2023-07-01 04:15:56,764 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:15:56,764 | DEBUG: Data: None
2023-07-01 04:15:56,764 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:15:57,202 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5004
2023-07-01 04:15:57,203 | DEBUG: Response: 200 (5004 bytes)
2023-07-01 04:15:57,203 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 04:15:57,203 | DEBUG: Data: None
2023-07-01 04:15:57,203 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:15:57,544 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 04:15:57,544 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 04:15:57,545 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 04:15:57,545 | DEBUG: Data: None
2023-07-01 04:15:57,545 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:15:57,895 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2398
2023-07-01 04:15:57,896 | DEBUG: Response: 200 (2398 bytes)
2023-07-01 04:15:57,896 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 04:15:57,896 | DEBUG: Data: None
2023-07-01 04:15:57,896 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:15:58,272 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6666
2023-07-01 04:15:58,275 | DEBUG: Response: 200 (6666 bytes)
2023-07-01 04:15:58,282 | INFO: 127.0.0.1 - - [01/Jul/2023 04:15:58] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 04:20:57,186 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:20:57,186 | DEBUG: Data: None
2023-07-01 04:20:57,186 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:20:57,723 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4383
2023-07-01 04:20:57,725 | DEBUG: Response: 200 (4383 bytes)
2023-07-01 04:20:57,726 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 04:20:57,726 | DEBUG: Data: None
2023-07-01 04:20:57,726 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:20:58,134 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5593
2023-07-01 04:20:58,135 | DEBUG: Response: 200 (5593 bytes)
2023-07-01 04:20:58,137 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 04:20:58,137 | DEBUG: Data: None
2023-07-01 04:20:58,137 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:20:58,491 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4619
2023-07-01 04:20:58,492 | DEBUG: Response: 200 (4619 bytes)
2023-07-01 04:20:58,494 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:20:58,494 | DEBUG: Data: None
2023-07-01 04:20:58,494 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:20:58,832 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:20:58,832 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:20:58,833 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 04:20:58,833 | DEBUG: Data: None
2023-07-01 04:20:58,833 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:20:59,164 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2208
2023-07-01 04:20:59,165 | DEBUG: Response: 200 (2208 bytes)
2023-07-01 04:20:59,168 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:20:59,168 | DEBUG: Data: None
2023-07-01 04:20:59,168 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:20:59,582 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5635
2023-07-01 04:20:59,583 | DEBUG: Response: 200 (5635 bytes)
2023-07-01 04:20:59,584 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 04:20:59,584 | DEBUG: Data: None
2023-07-01 04:20:59,584 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:20:59,936 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3527
2023-07-01 04:20:59,939 | DEBUG: Response: 200 (3527 bytes)
2023-07-01 04:20:59,940 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 04:20:59,940 | DEBUG: Data: None
2023-07-01 04:20:59,940 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:21:00,305 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3714
2023-07-01 04:21:00,306 | DEBUG: Response: 200 (3714 bytes)
2023-07-01 04:21:00,308 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:21:00,308 | DEBUG: Data: None
2023-07-01 04:21:00,308 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:21:00,647 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:21:00,648 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:21:00,649 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 04:21:00,649 | DEBUG: Data: None
2023-07-01 04:21:00,649 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:21:01,100 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4440
2023-07-01 04:21:01,101 | DEBUG: Response: 200 (4440 bytes)
2023-07-01 04:21:01,102 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 04:21:01,102 | DEBUG: Data: None
2023-07-01 04:21:01,102 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:21:01,464 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3783
2023-07-01 04:21:01,466 | DEBUG: Response: 200 (3783 bytes)
2023-07-01 04:21:01,468 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:21:01,468 | DEBUG: Data: None
2023-07-01 04:21:01,468 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:21:01,801 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4996
2023-07-01 04:21:01,801 | DEBUG: Response: 200 (4996 bytes)
2023-07-01 04:21:01,802 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 04:21:01,802 | DEBUG: Data: None
2023-07-01 04:21:01,802 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:21:02,183 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5030
2023-07-01 04:21:02,184 | DEBUG: Response: 200 (5030 bytes)
2023-07-01 04:21:02,185 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 04:21:02,185 | DEBUG: Data: None
2023-07-01 04:21:02,185 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:21:02,536 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2398
2023-07-01 04:21:02,538 | DEBUG: Response: 200 (2398 bytes)
2023-07-01 04:21:02,538 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 04:21:02,538 | DEBUG: Data: None
2023-07-01 04:21:02,538 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:21:02,947 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6665
2023-07-01 04:21:02,948 | DEBUG: Response: 200 (6665 bytes)
2023-07-01 04:21:02,950 | INFO: 127.0.0.1 - - [01/Jul/2023 04:21:02] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 04:23:29,350 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:23:29,350 | DEBUG: Data: None
2023-07-01 04:23:29,350 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:23:29,713 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4389
2023-07-01 04:23:29,716 | DEBUG: Response: 200 (4389 bytes)
2023-07-01 04:23:29,720 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 04:23:29,720 | DEBUG: Data: None
2023-07-01 04:23:29,720 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:23:30,113 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5593
2023-07-01 04:23:30,114 | DEBUG: Response: 200 (5593 bytes)
2023-07-01 04:23:30,116 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 04:23:30,116 | DEBUG: Data: None
2023-07-01 04:23:30,116 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:23:30,505 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4562
2023-07-01 04:23:30,506 | DEBUG: Response: 200 (4562 bytes)
2023-07-01 04:23:30,507 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:23:30,507 | DEBUG: Data: None
2023-07-01 04:23:30,507 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:23:30,849 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:23:30,850 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:23:30,850 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 04:23:30,850 | DEBUG: Data: None
2023-07-01 04:23:30,850 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:23:31,166 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2204
2023-07-01 04:23:31,167 | DEBUG: Response: 200 (2204 bytes)
2023-07-01 04:23:31,167 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:23:31,168 | DEBUG: Data: None
2023-07-01 04:23:31,168 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:23:31,611 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5626
2023-07-01 04:23:31,612 | DEBUG: Response: 200 (5626 bytes)
2023-07-01 04:23:31,613 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 04:23:31,613 | DEBUG: Data: None
2023-07-01 04:23:31,613 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:23:31,971 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3528
2023-07-01 04:23:31,972 | DEBUG: Response: 200 (3528 bytes)
2023-07-01 04:23:31,973 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 04:23:31,973 | DEBUG: Data: None
2023-07-01 04:23:31,973 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:23:32,338 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3717
2023-07-01 04:23:32,339 | DEBUG: Response: 200 (3717 bytes)
2023-07-01 04:23:32,340 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:23:32,340 | DEBUG: Data: None
2023-07-01 04:23:32,341 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:23:32,717 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:23:32,718 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:23:32,718 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 04:23:32,719 | DEBUG: Data: None
2023-07-01 04:23:32,719 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:23:33,077 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4443
2023-07-01 04:23:33,078 | DEBUG: Response: 200 (4443 bytes)
2023-07-01 04:23:33,079 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 04:23:33,079 | DEBUG: Data: None
2023-07-01 04:23:33,079 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:23:33,420 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3783
2023-07-01 04:23:33,424 | DEBUG: Response: 200 (3783 bytes)
2023-07-01 04:23:33,426 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:23:33,426 | DEBUG: Data: None
2023-07-01 04:23:33,426 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:23:33,791 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4995
2023-07-01 04:23:33,792 | DEBUG: Response: 200 (4995 bytes)
2023-07-01 04:23:33,793 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 04:23:33,793 | DEBUG: Data: None
2023-07-01 04:23:33,793 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:23:34,186 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 04:23:34,189 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 04:23:34,190 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 04:23:34,190 | DEBUG: Data: None
2023-07-01 04:23:34,190 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:23:34,597 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2399
2023-07-01 04:23:34,599 | DEBUG: Response: 200 (2399 bytes)
2023-07-01 04:23:34,600 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 04:23:34,600 | DEBUG: Data: None
2023-07-01 04:23:34,600 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:23:35,378 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6659
2023-07-01 04:23:35,378 | DEBUG: Response: 200 (6659 bytes)
2023-07-01 04:23:35,381 | INFO: 127.0.0.1 - - [01/Jul/2023 04:23:35] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 04:24:28,355 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:24:28,356 | DEBUG: Data: None
2023-07-01 04:24:28,356 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:24:28,754 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4401
2023-07-01 04:24:28,758 | DEBUG: Response: 200 (4401 bytes)
2023-07-01 04:24:28,761 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 04:24:28,762 | DEBUG: Data: None
2023-07-01 04:24:28,762 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:24:29,217 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5595
2023-07-01 04:24:29,218 | DEBUG: Response: 200 (5595 bytes)
2023-07-01 04:24:29,220 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 04:24:29,221 | DEBUG: Data: None
2023-07-01 04:24:29,221 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:24:29,555 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4562
2023-07-01 04:24:29,556 | DEBUG: Response: 200 (4562 bytes)
2023-07-01 04:24:29,559 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:24:29,559 | DEBUG: Data: None
2023-07-01 04:24:29,559 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:24:29,878 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:24:29,879 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:24:29,880 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 04:24:29,880 | DEBUG: Data: None
2023-07-01 04:24:29,880 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:24:30,220 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2209
2023-07-01 04:24:30,221 | DEBUG: Response: 200 (2209 bytes)
2023-07-01 04:24:30,222 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:24:30,222 | DEBUG: Data: None
2023-07-01 04:24:30,222 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:24:30,589 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5639
2023-07-01 04:24:30,590 | DEBUG: Response: 200 (5639 bytes)
2023-07-01 04:24:30,593 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 04:24:30,593 | DEBUG: Data: None
2023-07-01 04:24:30,593 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:24:30,937 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3528
2023-07-01 04:24:30,938 | DEBUG: Response: 200 (3528 bytes)
2023-07-01 04:24:30,939 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 04:24:30,939 | DEBUG: Data: None
2023-07-01 04:24:30,939 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:24:31,303 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3714
2023-07-01 04:24:31,307 | DEBUG: Response: 200 (3714 bytes)
2023-07-01 04:24:31,308 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:24:31,308 | DEBUG: Data: None
2023-07-01 04:24:31,308 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:24:31,859 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:24:31,859 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:24:31,860 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 04:24:31,860 | DEBUG: Data: None
2023-07-01 04:24:31,860 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:24:32,210 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4441
2023-07-01 04:24:32,211 | DEBUG: Response: 200 (4441 bytes)
2023-07-01 04:24:32,213 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 04:24:32,213 | DEBUG: Data: None
2023-07-01 04:24:32,213 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:24:32,513 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3784
2023-07-01 04:24:32,514 | DEBUG: Response: 200 (3784 bytes)
2023-07-01 04:24:32,515 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:24:32,515 | DEBUG: Data: None
2023-07-01 04:24:32,515 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:24:32,897 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4996
2023-07-01 04:24:32,898 | DEBUG: Response: 200 (4996 bytes)
2023-07-01 04:24:32,898 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 04:24:32,899 | DEBUG: Data: None
2023-07-01 04:24:32,899 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:24:33,247 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 04:24:33,248 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 04:24:33,249 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 04:24:33,249 | DEBUG: Data: None
2023-07-01 04:24:33,249 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:24:33,594 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2400
2023-07-01 04:24:33,595 | DEBUG: Response: 200 (2400 bytes)
2023-07-01 04:24:33,595 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 04:24:33,596 | DEBUG: Data: None
2023-07-01 04:24:33,596 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:24:33,970 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6958
2023-07-01 04:24:33,972 | DEBUG: Response: 200 (6958 bytes)
2023-07-01 04:24:33,975 | INFO: 127.0.0.1 - - [01/Jul/2023 04:24:33] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 04:25:09,740 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:25:09,741 | DEBUG: Data: None
2023-07-01 04:25:09,741 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:25:10,348 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4395
2023-07-01 04:25:10,349 | DEBUG: Response: 200 (4395 bytes)
2023-07-01 04:25:10,350 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 04:25:10,350 | DEBUG: Data: None
2023-07-01 04:25:10,350 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:25:10,788 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5602
2023-07-01 04:25:10,789 | DEBUG: Response: 200 (5602 bytes)
2023-07-01 04:25:10,792 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 04:25:10,792 | DEBUG: Data: None
2023-07-01 04:25:10,792 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:25:11,136 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4564
2023-07-01 04:25:11,140 | DEBUG: Response: 200 (4564 bytes)
2023-07-01 04:25:11,146 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:25:11,146 | DEBUG: Data: None
2023-07-01 04:25:11,146 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:25:11,466 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:25:11,467 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:25:11,468 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 04:25:11,468 | DEBUG: Data: None
2023-07-01 04:25:11,468 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:25:11,801 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2205
2023-07-01 04:25:11,802 | DEBUG: Response: 200 (2205 bytes)
2023-07-01 04:25:11,803 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:25:11,803 | DEBUG: Data: None
2023-07-01 04:25:11,803 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:25:12,207 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5633
2023-07-01 04:25:12,208 | DEBUG: Response: 200 (5633 bytes)
2023-07-01 04:25:12,209 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 04:25:12,209 | DEBUG: Data: None
2023-07-01 04:25:12,209 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:25:12,581 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3529
2023-07-01 04:25:12,582 | DEBUG: Response: 200 (3529 bytes)
2023-07-01 04:25:12,583 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 04:25:12,583 | DEBUG: Data: None
2023-07-01 04:25:12,583 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:25:12,976 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3717
2023-07-01 04:25:12,977 | DEBUG: Response: 200 (3717 bytes)
2023-07-01 04:25:12,978 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:25:12,978 | DEBUG: Data: None
2023-07-01 04:25:12,978 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:25:13,310 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:25:13,311 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:25:13,311 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 04:25:13,311 | DEBUG: Data: None
2023-07-01 04:25:13,312 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:25:14,088 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4441
2023-07-01 04:25:14,089 | DEBUG: Response: 200 (4441 bytes)
2023-07-01 04:25:14,090 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 04:25:14,090 | DEBUG: Data: None
2023-07-01 04:25:14,090 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:25:14,431 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3783
2023-07-01 04:25:14,432 | DEBUG: Response: 200 (3783 bytes)
2023-07-01 04:25:14,433 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:25:14,433 | DEBUG: Data: None
2023-07-01 04:25:14,433 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:25:14,821 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4994
2023-07-01 04:25:14,822 | DEBUG: Response: 200 (4994 bytes)
2023-07-01 04:25:14,823 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 04:25:14,823 | DEBUG: Data: None
2023-07-01 04:25:14,823 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:25:15,166 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 04:25:15,167 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 04:25:15,168 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 04:25:15,168 | DEBUG: Data: None
2023-07-01 04:25:15,168 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:25:15,569 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2398
2023-07-01 04:25:15,570 | DEBUG: Response: 200 (2398 bytes)
2023-07-01 04:25:15,570 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 04:25:15,570 | DEBUG: Data: None
2023-07-01 04:25:15,570 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:25:15,971 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6958
2023-07-01 04:25:15,972 | DEBUG: Response: 200 (6958 bytes)
2023-07-01 04:25:15,976 | INFO: 127.0.0.1 - - [01/Jul/2023 04:25:15] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 04:25:37,672 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:25:37,674 | DEBUG: Data: None
2023-07-01 04:25:37,674 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:25:38,030 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4399
2023-07-01 04:25:38,036 | DEBUG: Response: 200 (4399 bytes)
2023-07-01 04:25:38,040 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 04:25:38,041 | DEBUG: Data: None
2023-07-01 04:25:38,041 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:25:38,476 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5591
2023-07-01 04:25:38,479 | DEBUG: Response: 200 (5591 bytes)
2023-07-01 04:25:38,481 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 04:25:38,481 | DEBUG: Data: None
2023-07-01 04:25:38,481 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:25:38,825 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4560
2023-07-01 04:25:38,826 | DEBUG: Response: 200 (4560 bytes)
2023-07-01 04:25:38,827 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:25:38,827 | DEBUG: Data: None
2023-07-01 04:25:38,827 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:25:39,183 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:25:39,189 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:25:39,190 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 04:25:39,191 | DEBUG: Data: None
2023-07-01 04:25:39,191 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:25:39,533 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2206
2023-07-01 04:25:39,533 | DEBUG: Response: 200 (2206 bytes)
2023-07-01 04:25:39,534 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:25:39,534 | DEBUG: Data: None
2023-07-01 04:25:39,534 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:25:39,900 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5634
2023-07-01 04:25:39,900 | DEBUG: Response: 200 (5634 bytes)
2023-07-01 04:25:39,901 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 04:25:39,902 | DEBUG: Data: None
2023-07-01 04:25:39,902 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:25:40,274 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3528
2023-07-01 04:25:40,275 | DEBUG: Response: 200 (3528 bytes)
2023-07-01 04:25:40,276 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 04:25:40,276 | DEBUG: Data: None
2023-07-01 04:25:40,276 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:25:40,658 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3709
2023-07-01 04:25:40,663 | DEBUG: Response: 200 (3709 bytes)
2023-07-01 04:25:40,664 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:25:40,664 | DEBUG: Data: None
2023-07-01 04:25:40,664 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:25:41,032 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:25:41,033 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:25:41,033 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 04:25:41,033 | DEBUG: Data: None
2023-07-01 04:25:41,033 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:25:41,382 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4442
2023-07-01 04:25:41,382 | DEBUG: Response: 200 (4442 bytes)
2023-07-01 04:25:41,383 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 04:25:41,383 | DEBUG: Data: None
2023-07-01 04:25:41,383 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:25:41,723 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3784
2023-07-01 04:25:41,724 | DEBUG: Response: 200 (3784 bytes)
2023-07-01 04:25:41,724 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:25:41,724 | DEBUG: Data: None
2023-07-01 04:25:41,724 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:25:42,089 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5000
2023-07-01 04:25:42,090 | DEBUG: Response: 200 (5000 bytes)
2023-07-01 04:25:42,091 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 04:25:42,091 | DEBUG: Data: None
2023-07-01 04:25:42,091 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:25:42,456 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5030
2023-07-01 04:25:42,458 | DEBUG: Response: 200 (5030 bytes)
2023-07-01 04:25:42,458 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 04:25:42,459 | DEBUG: Data: None
2023-07-01 04:25:42,459 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:25:42,830 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2400
2023-07-01 04:25:42,831 | DEBUG: Response: 200 (2400 bytes)
2023-07-01 04:25:42,832 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 04:25:42,832 | DEBUG: Data: None
2023-07-01 04:25:42,832 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:25:43,216 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6961
2023-07-01 04:25:43,217 | DEBUG: Response: 200 (6961 bytes)
2023-07-01 04:25:43,219 | INFO: 127.0.0.1 - - [01/Jul/2023 04:25:43] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 04:28:08,638 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:28:08,638 | DEBUG: Data: None
2023-07-01 04:28:08,638 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:28:09,094 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4380
2023-07-01 04:28:09,096 | DEBUG: Response: 200 (4380 bytes)
2023-07-01 04:28:09,098 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 04:28:09,098 | DEBUG: Data: None
2023-07-01 04:28:09,098 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:28:09,532 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5590
2023-07-01 04:28:09,534 | DEBUG: Response: 200 (5590 bytes)
2023-07-01 04:28:09,536 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 04:28:09,536 | DEBUG: Data: None
2023-07-01 04:28:09,537 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:28:09,900 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4567
2023-07-01 04:28:09,900 | DEBUG: Response: 200 (4567 bytes)
2023-07-01 04:28:09,902 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:28:09,902 | DEBUG: Data: None
2023-07-01 04:28:09,902 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:28:10,268 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:28:10,269 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:28:10,270 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 04:28:10,270 | DEBUG: Data: None
2023-07-01 04:28:10,270 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:28:10,605 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2207
2023-07-01 04:28:10,606 | DEBUG: Response: 200 (2207 bytes)
2023-07-01 04:28:10,606 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:28:10,606 | DEBUG: Data: None
2023-07-01 04:28:10,606 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:28:10,975 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5630
2023-07-01 04:28:10,981 | DEBUG: Response: 200 (5630 bytes)
2023-07-01 04:28:10,982 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 04:28:10,982 | DEBUG: Data: None
2023-07-01 04:28:10,982 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:28:11,344 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3528
2023-07-01 04:28:11,345 | DEBUG: Response: 200 (3528 bytes)
2023-07-01 04:28:11,346 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 04:28:11,346 | DEBUG: Data: None
2023-07-01 04:28:11,347 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:28:11,750 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3839
2023-07-01 04:28:11,752 | DEBUG: Response: 200 (3839 bytes)
2023-07-01 04:28:11,754 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:28:11,754 | DEBUG: Data: None
2023-07-01 04:28:11,754 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:28:12,082 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:28:12,083 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:28:12,083 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 04:28:12,083 | DEBUG: Data: None
2023-07-01 04:28:12,083 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:28:12,432 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4441
2023-07-01 04:28:12,436 | DEBUG: Response: 200 (4441 bytes)
2023-07-01 04:28:12,436 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 04:28:12,437 | DEBUG: Data: None
2023-07-01 04:28:12,437 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:28:12,886 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3784
2023-07-01 04:28:12,887 | DEBUG: Response: 200 (3784 bytes)
2023-07-01 04:28:12,889 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:28:12,889 | DEBUG: Data: None
2023-07-01 04:28:12,889 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:28:13,236 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4991
2023-07-01 04:28:13,241 | DEBUG: Response: 200 (4991 bytes)
2023-07-01 04:28:13,243 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 04:28:13,243 | DEBUG: Data: None
2023-07-01 04:28:13,243 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:28:13,602 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 04:28:13,605 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 04:28:13,606 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 04:28:13,606 | DEBUG: Data: None
2023-07-01 04:28:13,606 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:28:13,939 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2398
2023-07-01 04:28:13,939 | DEBUG: Response: 200 (2398 bytes)
2023-07-01 04:28:13,940 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 04:28:13,940 | DEBUG: Data: None
2023-07-01 04:28:13,940 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:28:14,314 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6960
2023-07-01 04:28:14,318 | DEBUG: Response: 200 (6960 bytes)
2023-07-01 04:28:14,321 | INFO: 127.0.0.1 - - [01/Jul/2023 04:28:14] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 04:28:34,937 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:28:34,938 | DEBUG: Data: None
2023-07-01 04:28:34,938 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:28:35,577 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4376
2023-07-01 04:28:35,581 | DEBUG: Response: 200 (4376 bytes)
2023-07-01 04:28:35,583 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 04:28:35,584 | DEBUG: Data: None
2023-07-01 04:28:35,584 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:28:35,986 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5597
2023-07-01 04:28:35,990 | DEBUG: Response: 200 (5597 bytes)
2023-07-01 04:28:35,995 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 04:28:35,996 | DEBUG: Data: None
2023-07-01 04:28:35,996 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:28:36,381 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4563
2023-07-01 04:28:36,383 | DEBUG: Response: 200 (4563 bytes)
2023-07-01 04:28:36,385 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:28:36,385 | DEBUG: Data: None
2023-07-01 04:28:36,385 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:28:36,755 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:28:36,756 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:28:36,756 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 04:28:36,756 | DEBUG: Data: None
2023-07-01 04:28:36,756 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:28:37,074 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2210
2023-07-01 04:28:37,075 | DEBUG: Response: 200 (2210 bytes)
2023-07-01 04:28:37,077 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:28:37,077 | DEBUG: Data: None
2023-07-01 04:28:37,077 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:28:37,428 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5636
2023-07-01 04:28:37,434 | DEBUG: Response: 200 (5636 bytes)
2023-07-01 04:28:37,436 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 04:28:37,436 | DEBUG: Data: None
2023-07-01 04:28:37,436 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:28:37,784 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3527
2023-07-01 04:28:37,786 | DEBUG: Response: 200 (3527 bytes)
2023-07-01 04:28:37,787 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 04:28:37,787 | DEBUG: Data: None
2023-07-01 04:28:37,787 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:28:38,142 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3833
2023-07-01 04:28:38,146 | DEBUG: Response: 200 (3833 bytes)
2023-07-01 04:28:38,147 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:28:38,147 | DEBUG: Data: None
2023-07-01 04:28:38,147 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:28:38,740 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:28:38,741 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:28:38,741 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 04:28:38,742 | DEBUG: Data: None
2023-07-01 04:28:38,742 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:28:39,089 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4439
2023-07-01 04:28:39,089 | DEBUG: Response: 200 (4439 bytes)
2023-07-01 04:28:39,090 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 04:28:39,091 | DEBUG: Data: None
2023-07-01 04:28:39,091 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:28:39,440 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3787
2023-07-01 04:28:39,441 | DEBUG: Response: 200 (3787 bytes)
2023-07-01 04:28:39,442 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:28:39,442 | DEBUG: Data: None
2023-07-01 04:28:39,442 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:28:39,810 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5003
2023-07-01 04:28:39,815 | DEBUG: Response: 200 (5003 bytes)
2023-07-01 04:28:39,815 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 04:28:39,815 | DEBUG: Data: None
2023-07-01 04:28:39,815 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:28:40,140 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 04:28:40,147 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 04:28:40,148 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 04:28:40,148 | DEBUG: Data: None
2023-07-01 04:28:40,148 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:28:40,517 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2401
2023-07-01 04:28:40,517 | DEBUG: Response: 200 (2401 bytes)
2023-07-01 04:28:40,518 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 04:28:40,518 | DEBUG: Data: None
2023-07-01 04:28:40,518 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:28:40,915 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6961
2023-07-01 04:28:40,920 | DEBUG: Response: 200 (6961 bytes)
2023-07-01 04:28:40,922 | INFO: 127.0.0.1 - - [01/Jul/2023 04:28:40] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 04:28:58,185 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:28:58,185 | DEBUG: Data: None
2023-07-01 04:28:58,185 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:28:58,567 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4391
2023-07-01 04:28:58,570 | DEBUG: Response: 200 (4391 bytes)
2023-07-01 04:28:58,574 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 04:28:58,576 | DEBUG: Data: None
2023-07-01 04:28:58,577 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:28:58,998 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5591
2023-07-01 04:28:59,002 | DEBUG: Response: 200 (5591 bytes)
2023-07-01 04:28:59,008 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 04:28:59,008 | DEBUG: Data: None
2023-07-01 04:28:59,009 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:28:59,375 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4560
2023-07-01 04:28:59,380 | DEBUG: Response: 200 (4560 bytes)
2023-07-01 04:28:59,383 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:28:59,383 | DEBUG: Data: None
2023-07-01 04:28:59,383 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:28:59,735 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:28:59,736 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:28:59,736 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 04:28:59,736 | DEBUG: Data: None
2023-07-01 04:28:59,736 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:29:00,126 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2207
2023-07-01 04:29:00,127 | DEBUG: Response: 200 (2207 bytes)
2023-07-01 04:29:00,128 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:29:00,128 | DEBUG: Data: None
2023-07-01 04:29:00,128 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:29:00,571 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5633
2023-07-01 04:29:00,574 | DEBUG: Response: 200 (5633 bytes)
2023-07-01 04:29:00,577 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 04:29:00,577 | DEBUG: Data: None
2023-07-01 04:29:00,578 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:29:00,972 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3528
2023-07-01 04:29:00,975 | DEBUG: Response: 200 (3528 bytes)
2023-07-01 04:29:00,976 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 04:29:00,976 | DEBUG: Data: None
2023-07-01 04:29:00,976 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:29:01,325 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3839
2023-07-01 04:29:01,328 | DEBUG: Response: 200 (3839 bytes)
2023-07-01 04:29:01,329 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:29:01,329 | DEBUG: Data: None
2023-07-01 04:29:01,329 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:29:01,715 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:29:01,716 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:29:01,716 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 04:29:01,716 | DEBUG: Data: None
2023-07-01 04:29:01,716 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:29:02,087 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4440
2023-07-01 04:29:02,089 | DEBUG: Response: 200 (4440 bytes)
2023-07-01 04:29:02,091 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 04:29:02,092 | DEBUG: Data: None
2023-07-01 04:29:02,092 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:29:02,468 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3780
2023-07-01 04:29:02,469 | DEBUG: Response: 200 (3780 bytes)
2023-07-01 04:29:02,472 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:29:02,472 | DEBUG: Data: None
2023-07-01 04:29:02,472 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:29:02,979 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4995
2023-07-01 04:29:02,983 | DEBUG: Response: 200 (4995 bytes)
2023-07-01 04:29:02,985 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 04:29:02,985 | DEBUG: Data: None
2023-07-01 04:29:02,986 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:29:03,332 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 04:29:03,336 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 04:29:03,339 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 04:29:03,339 | DEBUG: Data: None
2023-07-01 04:29:03,339 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:29:03,666 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2398
2023-07-01 04:29:03,668 | DEBUG: Response: 200 (2398 bytes)
2023-07-01 04:29:03,670 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 04:29:03,670 | DEBUG: Data: None
2023-07-01 04:29:03,670 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:29:04,064 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6969
2023-07-01 04:29:04,067 | DEBUG: Response: 200 (6969 bytes)
2023-07-01 04:29:04,070 | INFO: 127.0.0.1 - - [01/Jul/2023 04:29:04] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 04:31:19,026 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:31:19,027 | DEBUG: Data: None
2023-07-01 04:31:19,027 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:31:19,412 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4386
2023-07-01 04:31:19,414 | DEBUG: Response: 200 (4386 bytes)
2023-07-01 04:31:19,419 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 04:31:19,420 | DEBUG: Data: None
2023-07-01 04:31:19,420 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:31:19,832 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5776
2023-07-01 04:31:19,839 | DEBUG: Response: 200 (5776 bytes)
2023-07-01 04:31:19,841 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 04:31:19,841 | DEBUG: Data: None
2023-07-01 04:31:19,841 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:31:20,225 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4563
2023-07-01 04:31:20,229 | DEBUG: Response: 200 (4563 bytes)
2023-07-01 04:31:20,230 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:31:20,230 | DEBUG: Data: None
2023-07-01 04:31:20,230 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:31:20,588 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:31:20,592 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:31:20,593 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 04:31:20,593 | DEBUG: Data: None
2023-07-01 04:31:20,593 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:31:20,897 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2206
2023-07-01 04:31:20,897 | DEBUG: Response: 200 (2206 bytes)
2023-07-01 04:31:20,898 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:31:20,898 | DEBUG: Data: None
2023-07-01 04:31:20,898 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:31:21,292 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5637
2023-07-01 04:31:21,296 | DEBUG: Response: 200 (5637 bytes)
2023-07-01 04:31:21,298 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 04:31:21,298 | DEBUG: Data: None
2023-07-01 04:31:21,298 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:31:21,660 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3528
2023-07-01 04:31:21,661 | DEBUG: Response: 200 (3528 bytes)
2023-07-01 04:31:21,662 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 04:31:21,662 | DEBUG: Data: None
2023-07-01 04:31:21,662 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:31:22,009 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3836
2023-07-01 04:31:22,011 | DEBUG: Response: 200 (3836 bytes)
2023-07-01 04:31:22,012 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:31:22,012 | DEBUG: Data: None
2023-07-01 04:31:22,012 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:31:22,418 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:31:22,421 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:31:22,422 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 04:31:22,422 | DEBUG: Data: None
2023-07-01 04:31:22,422 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:31:22,769 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4440
2023-07-01 04:31:22,772 | DEBUG: Response: 200 (4440 bytes)
2023-07-01 04:31:22,773 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 04:31:22,773 | DEBUG: Data: None
2023-07-01 04:31:22,773 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:31:23,088 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3780
2023-07-01 04:31:23,089 | DEBUG: Response: 200 (3780 bytes)
2023-07-01 04:31:23,089 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:31:23,090 | DEBUG: Data: None
2023-07-01 04:31:23,090 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:31:23,440 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4996
2023-07-01 04:31:23,443 | DEBUG: Response: 200 (4996 bytes)
2023-07-01 04:31:23,444 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 04:31:23,444 | DEBUG: Data: None
2023-07-01 04:31:23,444 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:31:23,865 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 04:31:23,866 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 04:31:23,867 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 04:31:23,867 | DEBUG: Data: None
2023-07-01 04:31:23,867 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:31:24,661 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2401
2023-07-01 04:31:24,670 | DEBUG: Response: 200 (2401 bytes)
2023-07-01 04:31:24,671 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 04:31:24,671 | DEBUG: Data: None
2023-07-01 04:31:24,671 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:31:25,079 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6962
2023-07-01 04:31:25,092 | DEBUG: Response: 200 (6962 bytes)
2023-07-01 04:31:25,095 | INFO: 127.0.0.1 - - [01/Jul/2023 04:31:25] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 04:32:04,112 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:32:04,112 | DEBUG: Data: None
2023-07-01 04:32:04,113 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:32:04,451 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4394
2023-07-01 04:32:04,459 | DEBUG: Response: 200 (4394 bytes)
2023-07-01 04:32:04,463 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 04:32:04,464 | DEBUG: Data: None
2023-07-01 04:32:04,465 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:32:04,892 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5779
2023-07-01 04:32:04,900 | DEBUG: Response: 200 (5779 bytes)
2023-07-01 04:32:04,904 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 04:32:04,904 | DEBUG: Data: None
2023-07-01 04:32:04,904 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:32:05,282 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4617
2023-07-01 04:32:05,287 | DEBUG: Response: 200 (4617 bytes)
2023-07-01 04:32:05,288 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 04:32:05,288 | DEBUG: Data: None
2023-07-01 04:32:05,288 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:32:06,143 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2208
2023-07-01 04:32:06,144 | DEBUG: Response: 200 (2208 bytes)
2023-07-01 04:32:06,144 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:32:06,144 | DEBUG: Data: None
2023-07-01 04:32:06,144 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:32:06,470 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:32:06,471 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:32:06,472 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:32:06,472 | DEBUG: Data: None
2023-07-01 04:32:06,472 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:32:06,858 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5636
2023-07-01 04:32:06,862 | DEBUG: Response: 200 (5636 bytes)
2023-07-01 04:32:06,864 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 04:32:06,864 | DEBUG: Data: None
2023-07-01 04:32:06,864 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:32:07,276 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3529
2023-07-01 04:32:07,277 | DEBUG: Response: 200 (3529 bytes)
2023-07-01 04:32:07,278 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 04:32:07,278 | DEBUG: Data: None
2023-07-01 04:32:07,278 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:32:07,631 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3831
2023-07-01 04:32:07,632 | DEBUG: Response: 200 (3831 bytes)
2023-07-01 04:32:07,633 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:32:07,633 | DEBUG: Data: None
2023-07-01 04:32:07,633 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:32:07,985 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:32:07,987 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:32:07,987 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 04:32:07,987 | DEBUG: Data: None
2023-07-01 04:32:07,987 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:32:08,323 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4439
2023-07-01 04:32:08,327 | DEBUG: Response: 200 (4439 bytes)
2023-07-01 04:32:08,328 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 04:32:08,328 | DEBUG: Data: None
2023-07-01 04:32:08,328 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:32:08,868 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3784
2023-07-01 04:32:08,869 | DEBUG: Response: 200 (3784 bytes)
2023-07-01 04:32:08,870 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:32:08,870 | DEBUG: Data: None
2023-07-01 04:32:08,870 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:32:09,197 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5003
2023-07-01 04:32:09,200 | DEBUG: Response: 200 (5003 bytes)
2023-07-01 04:32:09,201 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 04:32:09,201 | DEBUG: Data: None
2023-07-01 04:32:09,201 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:32:09,573 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 04:32:09,574 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 04:32:09,574 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 04:32:09,574 | DEBUG: Data: None
2023-07-01 04:32:09,574 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:32:10,010 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2398
2023-07-01 04:32:10,011 | DEBUG: Response: 200 (2398 bytes)
2023-07-01 04:32:10,011 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 04:32:10,011 | DEBUG: Data: None
2023-07-01 04:32:10,011 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:32:10,383 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6955
2023-07-01 04:32:10,386 | DEBUG: Response: 200 (6955 bytes)
2023-07-01 04:32:10,389 | INFO: 127.0.0.1 - - [01/Jul/2023 04:32:10] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 04:32:41,097 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:32:41,098 | DEBUG: Data: None
2023-07-01 04:32:41,098 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:32:41,436 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4381
2023-07-01 04:32:41,438 | DEBUG: Response: 200 (4381 bytes)
2023-07-01 04:32:41,439 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 04:32:41,439 | DEBUG: Data: None
2023-07-01 04:32:41,439 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:32:42,203 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5772
2023-07-01 04:32:42,205 | DEBUG: Response: 200 (5772 bytes)
2023-07-01 04:32:42,208 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 04:32:42,208 | DEBUG: Data: None
2023-07-01 04:32:42,208 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:32:42,608 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4559
2023-07-01 04:32:42,611 | DEBUG: Response: 200 (4559 bytes)
2023-07-01 04:32:42,613 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:32:42,613 | DEBUG: Data: None
2023-07-01 04:32:42,613 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:32:42,955 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:32:42,956 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:32:42,957 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 04:32:42,957 | DEBUG: Data: None
2023-07-01 04:32:42,957 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:32:43,273 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2211
2023-07-01 04:32:43,273 | DEBUG: Response: 200 (2211 bytes)
2023-07-01 04:32:43,274 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:32:43,274 | DEBUG: Data: None
2023-07-01 04:32:43,274 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:32:43,649 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5639
2023-07-01 04:32:43,651 | DEBUG: Response: 200 (5639 bytes)
2023-07-01 04:32:43,652 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 04:32:43,652 | DEBUG: Data: None
2023-07-01 04:32:43,652 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:32:44,341 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3528
2023-07-01 04:32:44,341 | DEBUG: Response: 200 (3528 bytes)
2023-07-01 04:32:44,342 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 04:32:44,342 | DEBUG: Data: None
2023-07-01 04:32:44,342 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:32:44,700 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3928
2023-07-01 04:32:44,701 | DEBUG: Response: 200 (3928 bytes)
2023-07-01 04:32:44,702 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:32:44,702 | DEBUG: Data: None
2023-07-01 04:32:44,702 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:32:45,061 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:32:45,061 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:32:45,062 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 04:32:45,062 | DEBUG: Data: None
2023-07-01 04:32:45,062 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:32:45,387 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4440
2023-07-01 04:32:45,391 | DEBUG: Response: 200 (4440 bytes)
2023-07-01 04:32:45,391 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 04:32:45,392 | DEBUG: Data: None
2023-07-01 04:32:45,392 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:32:45,707 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3783
2023-07-01 04:32:45,708 | DEBUG: Response: 200 (3783 bytes)
2023-07-01 04:32:45,708 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:32:45,708 | DEBUG: Data: None
2023-07-01 04:32:45,708 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:32:46,052 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5002
2023-07-01 04:32:46,054 | DEBUG: Response: 200 (5002 bytes)
2023-07-01 04:32:46,055 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 04:32:46,055 | DEBUG: Data: None
2023-07-01 04:32:46,055 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:32:46,413 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 04:32:46,415 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 04:32:46,416 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 04:32:46,416 | DEBUG: Data: None
2023-07-01 04:32:46,416 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:32:46,760 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2400
2023-07-01 04:32:46,761 | DEBUG: Response: 200 (2400 bytes)
2023-07-01 04:32:46,761 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 04:32:46,761 | DEBUG: Data: None
2023-07-01 04:32:46,761 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:32:47,148 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6967
2023-07-01 04:32:47,152 | DEBUG: Response: 200 (6967 bytes)
2023-07-01 04:32:47,154 | INFO: 127.0.0.1 - - [01/Jul/2023 04:32:47] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 04:34:19,996 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:34:19,997 | DEBUG: Data: None
2023-07-01 04:34:19,998 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:34:20,423 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4398
2023-07-01 04:34:20,427 | DEBUG: Response: 200 (4398 bytes)
2023-07-01 04:34:20,429 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 04:34:20,430 | DEBUG: Data: None
2023-07-01 04:34:20,430 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:34:20,871 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5770
2023-07-01 04:34:20,874 | DEBUG: Response: 200 (5770 bytes)
2023-07-01 04:34:20,877 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 04:34:20,877 | DEBUG: Data: None
2023-07-01 04:34:20,877 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:34:21,244 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4558
2023-07-01 04:34:21,247 | DEBUG: Response: 200 (4558 bytes)
2023-07-01 04:34:21,250 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:34:21,251 | DEBUG: Data: None
2023-07-01 04:34:21,251 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:34:21,591 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:34:21,593 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:34:21,596 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 04:34:21,597 | DEBUG: Data: None
2023-07-01 04:34:21,597 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:34:21,954 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2205
2023-07-01 04:34:21,956 | DEBUG: Response: 200 (2205 bytes)
2023-07-01 04:34:21,957 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:34:21,957 | DEBUG: Data: None
2023-07-01 04:34:21,957 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:34:22,319 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5633
2023-07-01 04:34:22,322 | DEBUG: Response: 200 (5633 bytes)
2023-07-01 04:34:22,322 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 04:34:22,323 | DEBUG: Data: None
2023-07-01 04:34:22,323 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:34:22,680 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3528
2023-07-01 04:34:22,680 | DEBUG: Response: 200 (3528 bytes)
2023-07-01 04:34:22,681 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 04:34:22,681 | DEBUG: Data: None
2023-07-01 04:34:22,681 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:34:23,046 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3928
2023-07-01 04:34:23,047 | DEBUG: Response: 200 (3928 bytes)
2023-07-01 04:34:23,048 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:34:23,048 | DEBUG: Data: None
2023-07-01 04:34:23,048 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:34:23,365 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:34:23,365 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:34:23,366 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 04:34:23,366 | DEBUG: Data: None
2023-07-01 04:34:23,366 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:34:23,743 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4439
2023-07-01 04:34:23,750 | DEBUG: Response: 200 (4439 bytes)
2023-07-01 04:34:23,752 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 04:34:23,752 | DEBUG: Data: None
2023-07-01 04:34:23,752 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:34:24,122 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3783
2023-07-01 04:34:24,123 | DEBUG: Response: 200 (3783 bytes)
2023-07-01 04:34:24,123 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:34:24,123 | DEBUG: Data: None
2023-07-01 04:34:24,123 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:34:24,602 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4999
2023-07-01 04:34:24,606 | DEBUG: Response: 200 (4999 bytes)
2023-07-01 04:34:24,607 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 04:34:24,607 | DEBUG: Data: None
2023-07-01 04:34:24,607 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:34:24,957 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 04:34:24,960 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 04:34:24,960 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 04:34:24,960 | DEBUG: Data: None
2023-07-01 04:34:24,960 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:34:25,296 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2402
2023-07-01 04:34:25,298 | DEBUG: Response: 200 (2402 bytes)
2023-07-01 04:34:25,298 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 04:34:25,299 | DEBUG: Data: None
2023-07-01 04:34:25,299 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:34:25,680 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6963
2023-07-01 04:34:25,683 | DEBUG: Response: 200 (6963 bytes)
2023-07-01 04:34:25,685 | INFO: 127.0.0.1 - - [01/Jul/2023 04:34:25] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 04:34:39,693 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:34:39,693 | DEBUG: Data: None
2023-07-01 04:34:39,693 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:34:40,063 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4401
2023-07-01 04:34:40,068 | DEBUG: Response: 200 (4401 bytes)
2023-07-01 04:34:40,072 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 04:34:40,073 | DEBUG: Data: None
2023-07-01 04:34:40,073 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:34:40,469 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5773
2023-07-01 04:34:40,472 | DEBUG: Response: 200 (5773 bytes)
2023-07-01 04:34:40,474 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 04:34:40,474 | DEBUG: Data: None
2023-07-01 04:34:40,475 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:34:40,832 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4554
2023-07-01 04:34:40,835 | DEBUG: Response: 200 (4554 bytes)
2023-07-01 04:34:40,837 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:34:40,837 | DEBUG: Data: None
2023-07-01 04:34:40,837 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:34:41,158 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:34:41,159 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:34:41,160 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 04:34:41,160 | DEBUG: Data: None
2023-07-01 04:34:41,160 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:34:41,474 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2202
2023-07-01 04:34:41,475 | DEBUG: Response: 200 (2202 bytes)
2023-07-01 04:34:41,476 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:34:41,476 | DEBUG: Data: None
2023-07-01 04:34:41,476 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:34:41,894 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5631
2023-07-01 04:34:41,897 | DEBUG: Response: 200 (5631 bytes)
2023-07-01 04:34:41,898 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 04:34:41,898 | DEBUG: Data: None
2023-07-01 04:34:41,898 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:34:42,580 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3527
2023-07-01 04:34:42,583 | DEBUG: Response: 200 (3527 bytes)
2023-07-01 04:34:42,584 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 04:34:42,584 | DEBUG: Data: None
2023-07-01 04:34:42,584 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:34:42,938 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3927
2023-07-01 04:34:42,939 | DEBUG: Response: 200 (3927 bytes)
2023-07-01 04:34:42,940 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:34:42,940 | DEBUG: Data: None
2023-07-01 04:34:42,940 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:34:43,288 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:34:43,291 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:34:43,292 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 04:34:43,292 | DEBUG: Data: None
2023-07-01 04:34:43,292 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:34:43,637 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4442
2023-07-01 04:34:43,638 | DEBUG: Response: 200 (4442 bytes)
2023-07-01 04:34:43,640 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 04:34:43,640 | DEBUG: Data: None
2023-07-01 04:34:43,640 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:34:43,977 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3787
2023-07-01 04:34:43,978 | DEBUG: Response: 200 (3787 bytes)
2023-07-01 04:34:43,980 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:34:43,981 | DEBUG: Data: None
2023-07-01 04:34:43,981 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:34:44,341 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4991
2023-07-01 04:34:44,344 | DEBUG: Response: 200 (4991 bytes)
2023-07-01 04:34:44,346 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 04:34:44,346 | DEBUG: Data: None
2023-07-01 04:34:44,346 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:34:44,696 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 04:34:44,701 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 04:34:44,702 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 04:34:44,702 | DEBUG: Data: None
2023-07-01 04:34:44,702 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:34:45,041 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2401
2023-07-01 04:34:45,043 | DEBUG: Response: 200 (2401 bytes)
2023-07-01 04:34:45,044 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 04:34:45,044 | DEBUG: Data: None
2023-07-01 04:34:45,044 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:34:45,431 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6959
2023-07-01 04:34:45,434 | DEBUG: Response: 200 (6959 bytes)
2023-07-01 04:34:45,438 | INFO: 127.0.0.1 - - [01/Jul/2023 04:34:45] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 04:37:10,203 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:37:10,204 | DEBUG: Data: None
2023-07-01 04:37:10,204 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:37:10,553 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4392
2023-07-01 04:37:10,556 | DEBUG: Response: 200 (4392 bytes)
2023-07-01 04:37:10,556 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 04:37:10,557 | DEBUG: Data: None
2023-07-01 04:37:10,557 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:37:10,978 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5858
2023-07-01 04:37:10,981 | DEBUG: Response: 200 (5858 bytes)
2023-07-01 04:37:10,983 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 04:37:10,983 | DEBUG: Data: None
2023-07-01 04:37:10,983 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:37:11,322 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4616
2023-07-01 04:37:11,325 | DEBUG: Response: 200 (4616 bytes)
2023-07-01 04:37:11,326 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:37:11,326 | DEBUG: Data: None
2023-07-01 04:37:11,326 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:37:11,691 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:37:11,696 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:37:11,702 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 04:37:11,703 | DEBUG: Data: None
2023-07-01 04:37:11,703 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:37:12,020 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2203
2023-07-01 04:37:12,023 | DEBUG: Response: 200 (2203 bytes)
2023-07-01 04:37:12,028 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:37:12,029 | DEBUG: Data: None
2023-07-01 04:37:12,029 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:37:12,477 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4920
2023-07-01 04:37:12,480 | DEBUG: Response: 200 (4920 bytes)
2023-07-01 04:37:12,488 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 04:37:12,488 | DEBUG: Data: None
2023-07-01 04:37:12,488 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:37:12,833 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3528
2023-07-01 04:37:12,835 | DEBUG: Response: 200 (3528 bytes)
2023-07-01 04:37:12,836 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 04:37:12,836 | DEBUG: Data: None
2023-07-01 04:37:12,836 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:37:13,205 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3928
2023-07-01 04:37:13,209 | DEBUG: Response: 200 (3928 bytes)
2023-07-01 04:37:13,211 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:37:13,212 | DEBUG: Data: None
2023-07-01 04:37:13,212 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:37:13,554 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:37:13,557 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:37:13,559 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 04:37:13,560 | DEBUG: Data: None
2023-07-01 04:37:13,560 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:37:14,075 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9792
2023-07-01 04:37:14,081 | DEBUG: Response: 200 (9792 bytes)
2023-07-01 04:37:14,085 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:37:14,086 | DEBUG: Data: None
2023-07-01 04:37:14,086 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:37:14,442 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4995
2023-07-01 04:37:14,445 | DEBUG: Response: 200 (4995 bytes)
2023-07-01 04:37:14,446 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 04:37:14,446 | DEBUG: Data: None
2023-07-01 04:37:14,446 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:37:14,826 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 04:37:14,829 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 04:37:14,830 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 04:37:14,830 | DEBUG: Data: None
2023-07-01 04:37:14,830 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:37:15,196 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2398
2023-07-01 04:37:15,197 | DEBUG: Response: 200 (2398 bytes)
2023-07-01 04:37:15,197 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 04:37:15,197 | DEBUG: Data: None
2023-07-01 04:37:15,197 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:37:15,575 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6964
2023-07-01 04:37:15,579 | DEBUG: Response: 200 (6964 bytes)
2023-07-01 04:37:15,582 | INFO: 127.0.0.1 - - [01/Jul/2023 04:37:15] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 04:38:12,861 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:38:12,863 | DEBUG: Data: None
2023-07-01 04:38:12,864 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:38:13,330 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4329
2023-07-01 04:38:13,333 | DEBUG: Response: 200 (4329 bytes)
2023-07-01 04:38:13,336 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 04:38:13,336 | DEBUG: Data: None
2023-07-01 04:38:13,337 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:38:13,794 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5858
2023-07-01 04:38:13,799 | DEBUG: Response: 200 (5858 bytes)
2023-07-01 04:38:13,806 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 04:38:13,806 | DEBUG: Data: None
2023-07-01 04:38:13,806 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:38:14,206 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4613
2023-07-01 04:38:14,209 | DEBUG: Response: 200 (4613 bytes)
2023-07-01 04:38:14,211 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 04:38:14,211 | DEBUG: Data: None
2023-07-01 04:38:14,211 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:38:14,526 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2202
2023-07-01 04:38:14,527 | DEBUG: Response: 200 (2202 bytes)
2023-07-01 04:38:14,527 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:38:14,527 | DEBUG: Data: None
2023-07-01 04:38:14,527 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:38:15,137 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:38:15,138 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:38:15,138 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:38:15,138 | DEBUG: Data: None
2023-07-01 04:38:15,139 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:38:15,514 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5642
2023-07-01 04:38:15,517 | DEBUG: Response: 200 (5642 bytes)
2023-07-01 04:38:15,518 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 04:38:15,518 | DEBUG: Data: None
2023-07-01 04:38:15,518 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:38:15,886 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3527
2023-07-01 04:38:15,888 | DEBUG: Response: 200 (3527 bytes)
2023-07-01 04:38:15,889 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 04:38:15,889 | DEBUG: Data: None
2023-07-01 04:38:15,889 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:38:16,493 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3922
2023-07-01 04:38:16,494 | DEBUG: Response: 200 (3922 bytes)
2023-07-01 04:38:16,495 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:38:16,495 | DEBUG: Data: None
2023-07-01 04:38:16,495 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:38:16,866 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:38:16,866 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:38:16,867 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mih69/
2023-07-01 04:38:16,867 | DEBUG: Data: None
2023-07-01 04:38:16,867 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:38:17,220 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mih69/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4441
2023-07-01 04:38:17,224 | DEBUG: Response: 200 (4441 bytes)
2023-07-01 04:38:17,225 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14migbj/
2023-07-01 04:38:17,225 | DEBUG: Data: None
2023-07-01 04:38:17,225 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:38:17,565 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14migbj/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3783
2023-07-01 04:38:17,565 | DEBUG: Response: 200 (3783 bytes)
2023-07-01 04:38:17,566 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:38:17,566 | DEBUG: Data: None
2023-07-01 04:38:17,566 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:38:17,983 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4996
2023-07-01 04:38:17,986 | DEBUG: Response: 200 (4996 bytes)
2023-07-01 04:38:17,987 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 04:38:17,987 | DEBUG: Data: None
2023-07-01 04:38:17,987 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:38:18,337 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 04:38:18,339 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 04:38:18,340 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 04:38:18,340 | DEBUG: Data: None
2023-07-01 04:38:18,340 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:38:18,693 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2397
2023-07-01 04:38:18,694 | DEBUG: Response: 200 (2397 bytes)
2023-07-01 04:38:18,694 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 04:38:18,694 | DEBUG: Data: None
2023-07-01 04:38:18,694 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:38:19,100 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6960
2023-07-01 04:38:19,102 | DEBUG: Response: 200 (6960 bytes)
2023-07-01 04:38:19,104 | INFO: 127.0.0.1 - - [01/Jul/2023 04:38:19] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 04:39:05,052 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:39:05,053 | DEBUG: Data: None
2023-07-01 04:39:05,054 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:39:05,428 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4331
2023-07-01 04:39:05,431 | DEBUG: Response: 200 (4331 bytes)
2023-07-01 04:39:05,432 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 04:39:05,433 | DEBUG: Data: None
2023-07-01 04:39:05,433 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:39:05,925 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5859
2023-07-01 04:39:05,929 | DEBUG: Response: 200 (5859 bytes)
2023-07-01 04:39:05,936 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 04:39:05,936 | DEBUG: Data: None
2023-07-01 04:39:05,936 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:39:06,286 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4564
2023-07-01 04:39:06,291 | DEBUG: Response: 200 (4564 bytes)
2023-07-01 04:39:06,294 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 04:39:06,295 | DEBUG: Data: None
2023-07-01 04:39:06,295 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:39:06,611 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2199
2023-07-01 04:39:06,611 | DEBUG: Response: 200 (2199 bytes)
2023-07-01 04:39:06,612 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:39:06,612 | DEBUG: Data: None
2023-07-01 04:39:06,612 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:39:07,341 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:39:07,342 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:39:07,343 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:39:07,343 | DEBUG: Data: None
2023-07-01 04:39:07,343 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:39:08,334 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4922
2023-07-01 04:39:08,339 | DEBUG: Response: 200 (4922 bytes)
2023-07-01 04:39:08,340 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 04:39:08,340 | DEBUG: Data: None
2023-07-01 04:39:08,340 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:39:09,293 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3529
2023-07-01 04:39:09,294 | DEBUG: Response: 200 (3529 bytes)
2023-07-01 04:39:09,295 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 04:39:09,295 | DEBUG: Data: None
2023-07-01 04:39:09,295 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:39:09,645 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3923
2023-07-01 04:39:09,646 | DEBUG: Response: 200 (3923 bytes)
2023-07-01 04:39:09,647 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:39:09,647 | DEBUG: Data: None
2023-07-01 04:39:09,647 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:39:09,992 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:39:09,992 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:39:09,993 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 04:39:09,993 | DEBUG: Data: None
2023-07-01 04:39:09,993 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:39:10,857 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9805
2023-07-01 04:39:10,862 | DEBUG: Response: 200 (9805 bytes)
2023-07-01 04:39:10,866 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:39:10,866 | DEBUG: Data: None
2023-07-01 04:39:10,866 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:39:11,211 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5003
2023-07-01 04:39:11,214 | DEBUG: Response: 200 (5003 bytes)
2023-07-01 04:39:11,215 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 04:39:11,215 | DEBUG: Data: None
2023-07-01 04:39:11,215 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:39:11,601 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 04:39:11,604 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 04:39:11,605 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 04:39:11,605 | DEBUG: Data: None
2023-07-01 04:39:11,605 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:39:11,954 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2397
2023-07-01 04:39:11,955 | DEBUG: Response: 200 (2397 bytes)
2023-07-01 04:39:11,955 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 04:39:11,955 | DEBUG: Data: None
2023-07-01 04:39:11,955 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:39:12,346 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6955
2023-07-01 04:39:12,349 | DEBUG: Response: 200 (6955 bytes)
2023-07-01 04:39:12,352 | INFO: 127.0.0.1 - - [01/Jul/2023 04:39:12] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 04:40:00,991 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:40:00,992 | DEBUG: Data: None
2023-07-01 04:40:00,992 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:40:01,796 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4391
2023-07-01 04:40:01,799 | DEBUG: Response: 200 (4391 bytes)
2023-07-01 04:40:01,801 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 04:40:01,801 | DEBUG: Data: None
2023-07-01 04:40:01,801 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:40:02,256 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5863
2023-07-01 04:40:02,258 | DEBUG: Response: 200 (5863 bytes)
2023-07-01 04:40:02,263 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 04:40:02,264 | DEBUG: Data: None
2023-07-01 04:40:02,264 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:40:02,264 | DEBUG: Sleeping: 0.49 seconds prior to call
2023-07-01 04:40:03,250 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4563
2023-07-01 04:40:03,252 | DEBUG: Response: 200 (4563 bytes)
2023-07-01 04:40:03,254 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:40:03,254 | DEBUG: Data: None
2023-07-01 04:40:03,254 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:40:03,254 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 04:40:04,118 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:40:04,134 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:40:04,135 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 04:40:04,135 | DEBUG: Data: None
2023-07-01 04:40:04,135 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:40:04,135 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 04:40:04,968 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2203
2023-07-01 04:40:04,974 | DEBUG: Response: 200 (2203 bytes)
2023-07-01 04:40:04,975 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:40:04,975 | DEBUG: Data: None
2023-07-01 04:40:04,975 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:40:04,975 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 04:40:05,864 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4918
2023-07-01 04:40:05,871 | DEBUG: Response: 200 (4918 bytes)
2023-07-01 04:40:05,872 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 04:40:05,872 | DEBUG: Data: None
2023-07-01 04:40:05,872 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:40:05,872 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 04:40:06,832 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3528
2023-07-01 04:40:06,834 | DEBUG: Response: 200 (3528 bytes)
2023-07-01 04:40:06,835 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 04:40:06,836 | DEBUG: Data: None
2023-07-01 04:40:06,836 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:40:06,836 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 04:40:07,686 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3928
2023-07-01 04:40:07,690 | DEBUG: Response: 200 (3928 bytes)
2023-07-01 04:40:07,692 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:40:07,692 | DEBUG: Data: None
2023-07-01 04:40:07,692 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:40:07,692 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 04:40:08,569 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:40:08,570 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:40:08,571 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 04:40:08,571 | DEBUG: Data: None
2023-07-01 04:40:08,571 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:40:08,571 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 04:40:09,540 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9783
2023-07-01 04:40:09,548 | DEBUG: Response: 200 (9783 bytes)
2023-07-01 04:40:09,551 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:40:09,551 | DEBUG: Data: None
2023-07-01 04:40:09,551 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:40:09,551 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 04:40:10,434 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5003
2023-07-01 04:40:10,435 | DEBUG: Response: 200 (5003 bytes)
2023-07-01 04:40:10,437 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 04:40:10,437 | DEBUG: Data: None
2023-07-01 04:40:10,437 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:40:10,437 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 04:40:11,302 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 04:40:11,306 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 04:40:11,308 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 04:40:11,308 | DEBUG: Data: None
2023-07-01 04:40:11,308 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:40:11,308 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 04:40:12,128 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2400
2023-07-01 04:40:12,129 | DEBUG: Response: 200 (2400 bytes)
2023-07-01 04:40:12,129 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 04:40:12,129 | DEBUG: Data: None
2023-07-01 04:40:12,129 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:40:12,129 | DEBUG: Sleeping: 1.00 seconds prior to call
2023-07-01 04:40:13,579 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6953
2023-07-01 04:40:13,582 | DEBUG: Response: 200 (6953 bytes)
2023-07-01 04:40:13,584 | INFO: 127.0.0.1 - - [01/Jul/2023 04:40:13] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 04:53:00,181 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:53:00,181 | DEBUG: Data: None
2023-07-01 04:53:00,181 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:53:00,184 | DEBUG: Resetting dropped connection: oauth.reddit.com
2023-07-01 04:53:00,634 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4387
2023-07-01 04:53:00,636 | DEBUG: Response: 200 (4387 bytes)
2023-07-01 04:53:00,638 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 04:53:00,638 | DEBUG: Data: None
2023-07-01 04:53:00,638 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:53:01,499 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6024
2023-07-01 04:53:01,502 | DEBUG: Response: 200 (6024 bytes)
2023-07-01 04:53:01,512 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 04:53:01,512 | DEBUG: Data: None
2023-07-01 04:53:01,513 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:53:01,886 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4625
2023-07-01 04:53:01,888 | DEBUG: Response: 200 (4625 bytes)
2023-07-01 04:53:01,891 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:53:01,891 | DEBUG: Data: None
2023-07-01 04:53:01,891 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:53:02,280 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:53:02,281 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:53:02,281 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 04:53:02,281 | DEBUG: Data: None
2023-07-01 04:53:02,281 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:53:02,590 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2197
2023-07-01 04:53:02,591 | DEBUG: Response: 200 (2197 bytes)
2023-07-01 04:53:02,592 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:53:02,592 | DEBUG: Data: None
2023-07-01 04:53:02,592 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:53:02,958 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4922
2023-07-01 04:53:02,959 | DEBUG: Response: 200 (4922 bytes)
2023-07-01 04:53:02,961 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 04:53:02,961 | DEBUG: Data: None
2023-07-01 04:53:02,961 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:53:03,320 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3850
2023-07-01 04:53:03,321 | DEBUG: Response: 200 (3850 bytes)
2023-07-01 04:53:03,322 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 04:53:03,322 | DEBUG: Data: None
2023-07-01 04:53:03,322 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:53:03,677 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3927
2023-07-01 04:53:03,680 | DEBUG: Response: 200 (3927 bytes)
2023-07-01 04:53:03,681 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:53:03,682 | DEBUG: Data: None
2023-07-01 04:53:03,682 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:53:04,001 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:53:04,002 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:53:04,003 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 04:53:04,003 | DEBUG: Data: None
2023-07-01 04:53:04,003 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:53:04,462 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9806
2023-07-01 04:53:04,463 | DEBUG: Response: 200 (9806 bytes)
2023-07-01 04:53:04,467 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:53:04,467 | DEBUG: Data: None
2023-07-01 04:53:04,467 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:53:05,932 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5005
2023-07-01 04:53:05,933 | DEBUG: Response: 200 (5005 bytes)
2023-07-01 04:53:05,935 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 04:53:05,935 | DEBUG: Data: None
2023-07-01 04:53:05,935 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:53:06,272 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 04:53:06,273 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 04:53:06,274 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 04:53:06,274 | DEBUG: Data: None
2023-07-01 04:53:06,274 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:53:06,606 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2397
2023-07-01 04:53:06,607 | DEBUG: Response: 200 (2397 bytes)
2023-07-01 04:53:06,607 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 04:53:06,607 | DEBUG: Data: None
2023-07-01 04:53:06,607 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:53:07,033 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6960
2023-07-01 04:53:07,035 | DEBUG: Response: 200 (6960 bytes)
2023-07-01 04:53:07,038 | INFO: 127.0.0.1 - - [01/Jul/2023 04:53:07] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 04:53:40,181 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:53:40,181 | DEBUG: Data: None
2023-07-01 04:53:40,181 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:53:40,544 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4399
2023-07-01 04:53:40,550 | DEBUG: Response: 200 (4399 bytes)
2023-07-01 04:53:40,551 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 04:53:40,551 | DEBUG: Data: None
2023-07-01 04:53:40,551 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:53:41,072 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6028
2023-07-01 04:53:41,074 | DEBUG: Response: 200 (6028 bytes)
2023-07-01 04:53:41,076 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 04:53:41,077 | DEBUG: Data: None
2023-07-01 04:53:41,077 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:53:41,463 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4572
2023-07-01 04:53:41,468 | DEBUG: Response: 200 (4572 bytes)
2023-07-01 04:53:41,469 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:53:41,469 | DEBUG: Data: None
2023-07-01 04:53:41,469 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:53:41,858 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:53:41,859 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:53:41,859 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 04:53:41,860 | DEBUG: Data: None
2023-07-01 04:53:41,860 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:53:42,337 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2202
2023-07-01 04:53:42,338 | DEBUG: Response: 200 (2202 bytes)
2023-07-01 04:53:42,340 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:53:42,340 | DEBUG: Data: None
2023-07-01 04:53:42,340 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:53:42,688 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4926
2023-07-01 04:53:42,692 | DEBUG: Response: 200 (4926 bytes)
2023-07-01 04:53:42,693 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 04:53:42,693 | DEBUG: Data: None
2023-07-01 04:53:42,693 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:53:43,042 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3849
2023-07-01 04:53:43,043 | DEBUG: Response: 200 (3849 bytes)
2023-07-01 04:53:43,044 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 04:53:43,044 | DEBUG: Data: None
2023-07-01 04:53:43,044 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:53:43,400 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3922
2023-07-01 04:53:43,401 | DEBUG: Response: 200 (3922 bytes)
2023-07-01 04:53:43,402 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 04:53:43,402 | DEBUG: Data: None
2023-07-01 04:53:43,403 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:53:43,762 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 04:53:43,763 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 04:53:43,763 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 04:53:43,764 | DEBUG: Data: None
2023-07-01 04:53:43,764 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:53:44,215 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9791
2023-07-01 04:53:44,217 | DEBUG: Response: 200 (9791 bytes)
2023-07-01 04:53:44,221 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 04:53:44,221 | DEBUG: Data: None
2023-07-01 04:53:44,221 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 04:53:44,581 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5003
2023-07-01 04:53:44,582 | DEBUG: Response: 200 (5003 bytes)
2023-07-01 04:53:44,583 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 04:53:44,583 | DEBUG: Data: None
2023-07-01 04:53:44,583 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:53:44,933 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 04:53:44,934 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 04:53:44,934 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 04:53:44,934 | DEBUG: Data: None
2023-07-01 04:53:44,934 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:53:45,309 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2397
2023-07-01 04:53:45,310 | DEBUG: Response: 200 (2397 bytes)
2023-07-01 04:53:45,310 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 04:53:45,310 | DEBUG: Data: None
2023-07-01 04:53:45,310 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 04:53:45,680 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6959
2023-07-01 04:53:45,681 | DEBUG: Response: 200 (6959 bytes)
2023-07-01 04:53:45,683 | INFO: 127.0.0.1 - - [01/Jul/2023 04:53:45] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:18:34,769 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-01 05:18:34,769 | INFO: [33mPress CTRL+C to quit[0m
2023-07-01 05:18:59,169 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:18:59,170 | DEBUG: Data: None
2023-07-01 05:18:59,170 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:18:59,175 | DEBUG: Starting new HTTPS connection (1): www.reddit.com:443
2023-07-01 05:19:00,051 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 670
2023-07-01 05:19:00,057 | DEBUG: Starting new HTTPS connection (1): oauth.reddit.com:443
2023-07-01 05:19:01,218 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4400
2023-07-01 05:19:01,220 | DEBUG: Response: 200 (4400 bytes)
2023-07-01 05:19:01,221 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:19:01,221 | DEBUG: Data: None
2023-07-01 05:19:01,221 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:19:01,635 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6381
2023-07-01 05:19:01,639 | DEBUG: Response: 200 (6381 bytes)
2023-07-01 05:19:01,643 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:19:01,643 | DEBUG: Data: None
2023-07-01 05:19:01,643 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:19:02,017 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4768
2023-07-01 05:19:02,018 | DEBUG: Response: 200 (4768 bytes)
2023-07-01 05:19:02,020 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:19:02,020 | DEBUG: Data: None
2023-07-01 05:19:02,020 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:19:02,364 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:19:02,367 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:19:02,368 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:19:02,368 | DEBUG: Data: None
2023-07-01 05:19:02,368 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:19:02,684 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2199
2023-07-01 05:19:02,685 | DEBUG: Response: 200 (2199 bytes)
2023-07-01 05:19:02,686 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:19:02,686 | DEBUG: Data: None
2023-07-01 05:19:02,686 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:19:03,078 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4912
2023-07-01 05:19:03,081 | DEBUG: Response: 200 (4912 bytes)
2023-07-01 05:19:03,082 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:19:03,083 | DEBUG: Data: None
2023-07-01 05:19:03,083 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:19:03,424 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3823
2023-07-01 05:19:03,425 | DEBUG: Response: 200 (3823 bytes)
2023-07-01 05:19:03,426 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:19:03,427 | DEBUG: Data: None
2023-07-01 05:19:03,427 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:19:03,812 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3926
2023-07-01 05:19:03,813 | DEBUG: Response: 200 (3926 bytes)
2023-07-01 05:19:03,815 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:19:03,815 | DEBUG: Data: None
2023-07-01 05:19:03,815 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:19:04,160 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:19:04,162 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:19:04,163 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:19:04,163 | DEBUG: Data: None
2023-07-01 05:19:04,164 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:19:04,832 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9799
2023-07-01 05:19:04,834 | DEBUG: Response: 200 (9799 bytes)
2023-07-01 05:19:04,838 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:19:04,838 | DEBUG: Data: None
2023-07-01 05:19:04,838 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:19:05,239 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4996
2023-07-01 05:19:05,239 | DEBUG: Response: 200 (4996 bytes)
2023-07-01 05:19:05,240 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:19:05,241 | DEBUG: Data: None
2023-07-01 05:19:05,241 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:19:05,636 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 05:19:05,637 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 05:19:05,638 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:19:05,638 | DEBUG: Data: None
2023-07-01 05:19:05,638 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:19:05,986 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2397
2023-07-01 05:19:05,987 | DEBUG: Response: 200 (2397 bytes)
2023-07-01 05:19:05,987 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:19:05,988 | DEBUG: Data: None
2023-07-01 05:19:05,988 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:19:06,380 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6952
2023-07-01 05:19:06,381 | DEBUG: Response: 200 (6952 bytes)
2023-07-01 05:19:06,385 | INFO: 127.0.0.1 - - [01/Jul/2023 05:19:06] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:21:01,542 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-01 05:21:01,542 | INFO: [33mPress CTRL+C to quit[0m
2023-07-01 05:21:08,666 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:21:08,666 | DEBUG: Data: None
2023-07-01 05:21:08,667 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:21:08,671 | DEBUG: Starting new HTTPS connection (1): www.reddit.com:443
2023-07-01 05:21:08,880 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:21:08,880 | DEBUG: Data: None
2023-07-01 05:21:08,880 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:21:08,883 | DEBUG: Starting new HTTPS connection (2): www.reddit.com:443
2023-07-01 05:21:09,248 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:21:09,248 | DEBUG: Data: None
2023-07-01 05:21:09,248 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:21:09,251 | DEBUG: Starting new HTTPS connection (3): www.reddit.com:443
2023-07-01 05:21:09,515 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 669
2023-07-01 05:21:09,529 | DEBUG: Starting new HTTPS connection (1): oauth.reddit.com:443
2023-07-01 05:21:09,862 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 05:21:09,864 | DEBUG: Response: 200 (136 bytes)
2023-07-01 05:21:09,866 | INFO: 127.0.0.1 - - [01/Jul/2023 05:21:09] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-01 05:21:10,030 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 666
2023-07-01 05:21:10,200 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 667
2023-07-01 05:21:10,206 | DEBUG: Starting new HTTPS connection (2): oauth.reddit.com:443
2023-07-01 05:21:10,360 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4388
2023-07-01 05:21:10,362 | DEBUG: Response: 200 (4388 bytes)
2023-07-01 05:21:10,364 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:21:10,364 | DEBUG: Data: None
2023-07-01 05:21:10,364 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:10,553 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4398
2023-07-01 05:21:10,554 | DEBUG: Response: 200 (4398 bytes)
2023-07-01 05:21:10,555 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:21:10,555 | DEBUG: Data: None
2023-07-01 05:21:10,555 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:10,819 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6461
2023-07-01 05:21:10,915 | DEBUG: Response: 200 (6461 bytes)
2023-07-01 05:21:10,924 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:21:10,924 | DEBUG: Data: None
2023-07-01 05:21:10,924 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:10,976 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6458
2023-07-01 05:21:10,977 | DEBUG: Response: 200 (6458 bytes)
2023-07-01 05:21:10,982 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:21:10,983 | DEBUG: Data: None
2023-07-01 05:21:10,983 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:11,284 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4715
2023-07-01 05:21:11,285 | DEBUG: Response: 200 (4715 bytes)
2023-07-01 05:21:11,287 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:21:11,287 | DEBUG: Data: None
2023-07-01 05:21:11,287 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:11,328 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4779
2023-07-01 05:21:11,329 | DEBUG: Response: 200 (4779 bytes)
2023-07-01 05:21:11,332 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:21:11,333 | DEBUG: Data: None
2023-07-01 05:21:11,333 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:11,611 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:21:11,612 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:21:11,613 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:21:11,613 | DEBUG: Data: None
2023-07-01 05:21:11,613 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:11,660 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:21:11,661 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:21:11,662 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:21:11,662 | DEBUG: Data: None
2023-07-01 05:21:11,662 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:11,921 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2202
2023-07-01 05:21:11,922 | DEBUG: Response: 200 (2202 bytes)
2023-07-01 05:21:11,923 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:21:11,923 | DEBUG: Data: None
2023-07-01 05:21:11,923 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:21:12,281 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4919
2023-07-01 05:21:12,283 | DEBUG: Response: 200 (4919 bytes)
2023-07-01 05:21:12,284 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:21:12,284 | DEBUG: Data: None
2023-07-01 05:21:12,284 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:12,302 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2197
2023-07-01 05:21:12,302 | DEBUG: Response: 200 (2197 bytes)
2023-07-01 05:21:12,303 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:21:12,303 | DEBUG: Data: None
2023-07-01 05:21:12,303 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:21:12,655 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4927
2023-07-01 05:21:12,656 | DEBUG: Response: 200 (4927 bytes)
2023-07-01 05:21:12,658 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:21:12,658 | DEBUG: Data: None
2023-07-01 05:21:12,659 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:12,661 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3824
2023-07-01 05:21:12,662 | DEBUG: Response: 200 (3824 bytes)
2023-07-01 05:21:12,665 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:21:12,666 | DEBUG: Data: None
2023-07-01 05:21:12,666 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:13,020 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3824
2023-07-01 05:21:13,020 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3926
2023-07-01 05:21:13,022 | DEBUG: Response: 200 (3824 bytes)
2023-07-01 05:21:13,024 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:21:13,024 | DEBUG: Response: 200 (3926 bytes)
2023-07-01 05:21:13,024 | DEBUG: Data: None
2023-07-01 05:21:13,026 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:21:13,026 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:13,026 | DEBUG: Data: None
2023-07-01 05:21:13,029 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:13,382 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:21:13,383 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:21:13,384 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:21:13,384 | DEBUG: Data: None
2023-07-01 05:21:13,384 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:13,405 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3924
2023-07-01 05:21:13,406 | DEBUG: Response: 200 (3924 bytes)
2023-07-01 05:21:13,408 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:21:13,408 | DEBUG: Data: None
2023-07-01 05:21:13,408 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:13,740 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:21:13,741 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:21:13,741 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:21:13,741 | DEBUG: Data: None
2023-07-01 05:21:13,741 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:13,880 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9804
2023-07-01 05:21:13,883 | DEBUG: Response: 200 (9804 bytes)
2023-07-01 05:21:13,887 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:21:13,887 | DEBUG: Data: None
2023-07-01 05:21:13,887 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:21:14,224 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5001
2023-07-01 05:21:14,225 | DEBUG: Response: 200 (5001 bytes)
2023-07-01 05:21:14,226 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:21:14,226 | DEBUG: Data: None
2023-07-01 05:21:14,226 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:14,562 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9800
2023-07-01 05:21:14,567 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 05:21:14,568 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 05:21:14,570 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:21:14,570 | DEBUG: Data: None
2023-07-01 05:21:14,570 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:14,570 | DEBUG: Response: 200 (9800 bytes)
2023-07-01 05:21:14,574 | INFO: 127.0.0.1 - - [01/Jul/2023 05:21:14] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-01 05:21:14,941 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2397
2023-07-01 05:21:14,942 | DEBUG: Response: 200 (2397 bytes)
2023-07-01 05:21:14,943 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:21:14,943 | DEBUG: Data: None
2023-07-01 05:21:14,943 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:15,316 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6947
2023-07-01 05:21:15,317 | DEBUG: Response: 200 (6947 bytes)
2023-07-01 05:21:15,320 | INFO: 127.0.0.1 - - [01/Jul/2023 05:21:15] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:21:35,081 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:21:35,081 | DEBUG: Data: None
2023-07-01 05:21:35,082 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:21:35,455 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4385
2023-07-01 05:21:35,456 | DEBUG: Response: 200 (4385 bytes)
2023-07-01 05:21:35,459 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:21:35,459 | DEBUG: Data: None
2023-07-01 05:21:35,459 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:35,965 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6460
2023-07-01 05:21:35,966 | DEBUG: Response: 200 (6460 bytes)
2023-07-01 05:21:35,971 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:21:35,971 | DEBUG: Data: None
2023-07-01 05:21:35,971 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:36,322 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4773
2023-07-01 05:21:36,322 | DEBUG: Response: 200 (4773 bytes)
2023-07-01 05:21:36,324 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:21:36,324 | DEBUG: Data: None
2023-07-01 05:21:36,324 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:36,665 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:21:36,668 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:21:36,670 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:21:36,670 | DEBUG: Data: None
2023-07-01 05:21:36,670 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:36,976 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2202
2023-07-01 05:21:36,978 | DEBUG: Response: 200 (2202 bytes)
2023-07-01 05:21:36,978 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:21:36,979 | DEBUG: Data: None
2023-07-01 05:21:36,979 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:21:37,331 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4926
2023-07-01 05:21:37,332 | DEBUG: Response: 200 (4926 bytes)
2023-07-01 05:21:37,334 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:21:37,334 | DEBUG: Data: None
2023-07-01 05:21:37,334 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:37,662 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3822
2023-07-01 05:21:37,663 | DEBUG: Response: 200 (3822 bytes)
2023-07-01 05:21:37,665 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:21:37,665 | DEBUG: Data: None
2023-07-01 05:21:37,665 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:38,021 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3919
2023-07-01 05:21:38,022 | DEBUG: Response: 200 (3919 bytes)
2023-07-01 05:21:38,023 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:21:38,023 | DEBUG: Data: None
2023-07-01 05:21:38,023 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:38,346 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:21:38,347 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:21:38,348 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:21:38,348 | DEBUG: Data: None
2023-07-01 05:21:38,348 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:38,830 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9791
2023-07-01 05:21:38,833 | DEBUG: Response: 200 (9791 bytes)
2023-07-01 05:21:38,837 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:21:38,837 | DEBUG: Data: None
2023-07-01 05:21:38,837 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:21:39,236 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4999
2023-07-01 05:21:39,238 | DEBUG: Response: 200 (4999 bytes)
2023-07-01 05:21:39,239 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:21:39,240 | DEBUG: Data: None
2023-07-01 05:21:39,240 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:39,575 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 05:21:39,576 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 05:21:39,577 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:21:39,577 | DEBUG: Data: None
2023-07-01 05:21:39,577 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:39,899 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2396
2023-07-01 05:21:39,901 | DEBUG: Response: 200 (2396 bytes)
2023-07-01 05:21:39,902 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:21:39,902 | DEBUG: Data: None
2023-07-01 05:21:39,902 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:21:40,631 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6956
2023-07-01 05:21:40,632 | DEBUG: Response: 200 (6956 bytes)
2023-07-01 05:21:40,636 | INFO: 127.0.0.1 - - [01/Jul/2023 05:21:40] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:23:40,516 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:23:40,516 | DEBUG: Data: None
2023-07-01 05:23:40,516 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:23:40,663 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:23:40,663 | DEBUG: Data: None
2023-07-01 05:23:40,663 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:23:40,798 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 05:23:40,799 | DEBUG: Response: 200 (136 bytes)
2023-07-01 05:23:40,800 | INFO: 127.0.0.1 - - [01/Jul/2023 05:23:40] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-01 05:23:41,061 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4399
2023-07-01 05:23:41,063 | DEBUG: Response: 200 (4399 bytes)
2023-07-01 05:23:41,067 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:23:41,068 | DEBUG: Data: None
2023-07-01 05:23:41,068 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:23:41,387 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:23:41,387 | DEBUG: Data: None
2023-07-01 05:23:41,387 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:23:41,513 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6464
2023-07-01 05:23:41,515 | DEBUG: Response: 200 (6464 bytes)
2023-07-01 05:23:41,520 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:23:41,521 | DEBUG: Data: None
2023-07-01 05:23:41,521 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:23:41,715 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4403
2023-07-01 05:23:41,717 | DEBUG: Response: 200 (4403 bytes)
2023-07-01 05:23:41,719 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:23:41,719 | DEBUG: Data: None
2023-07-01 05:23:41,719 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:23:41,895 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4774
2023-07-01 05:23:41,897 | DEBUG: Response: 200 (4774 bytes)
2023-07-01 05:23:41,900 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:23:41,901 | DEBUG: Data: None
2023-07-01 05:23:41,901 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:23:42,149 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6462
2023-07-01 05:23:42,150 | DEBUG: Response: 200 (6462 bytes)
2023-07-01 05:23:42,155 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:23:42,155 | DEBUG: Data: None
2023-07-01 05:23:42,155 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:23:42,226 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:23:42,227 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:23:42,228 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:23:42,228 | DEBUG: Data: None
2023-07-01 05:23:42,228 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:23:42,527 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4778
2023-07-01 05:23:42,528 | DEBUG: Response: 200 (4778 bytes)
2023-07-01 05:23:42,530 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:23:42,530 | DEBUG: Data: None
2023-07-01 05:23:42,530 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:23:42,544 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2200
2023-07-01 05:23:42,545 | DEBUG: Response: 200 (2200 bytes)
2023-07-01 05:23:42,545 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:23:42,546 | DEBUG: Data: None
2023-07-01 05:23:42,546 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:23:42,870 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:23:42,871 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:23:42,872 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:23:42,872 | DEBUG: Data: None
2023-07-01 05:23:42,872 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:23:42,911 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4915
2023-07-01 05:23:42,912 | DEBUG: Response: 200 (4915 bytes)
2023-07-01 05:23:42,914 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:23:42,914 | DEBUG: Data: None
2023-07-01 05:23:42,914 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:23:43,204 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2203
2023-07-01 05:23:43,205 | DEBUG: Response: 200 (2203 bytes)
2023-07-01 05:23:43,207 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:23:43,207 | DEBUG: Data: None
2023-07-01 05:23:43,207 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:23:43,255 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3824
2023-07-01 05:23:43,256 | DEBUG: Response: 200 (3824 bytes)
2023-07-01 05:23:43,258 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:23:43,258 | DEBUG: Data: None
2023-07-01 05:23:43,258 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:23:43,563 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4922
2023-07-01 05:23:43,565 | DEBUG: Response: 200 (4922 bytes)
2023-07-01 05:23:43,566 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:23:43,566 | DEBUG: Data: None
2023-07-01 05:23:43,566 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:23:43,907 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3822
2023-07-01 05:23:43,908 | DEBUG: Response: 200 (3822 bytes)
2023-07-01 05:23:43,911 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:23:43,911 | DEBUG: Data: None
2023-07-01 05:23:43,911 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:23:43,913 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3924
2023-07-01 05:23:43,914 | DEBUG: Response: 200 (3924 bytes)
2023-07-01 05:23:43,916 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:23:43,916 | DEBUG: Data: None
2023-07-01 05:23:43,916 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:23:44,258 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:23:44,259 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:23:44,260 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:23:44,260 | DEBUG: Data: None
2023-07-01 05:23:44,260 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:23:44,291 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3925
2023-07-01 05:23:44,292 | DEBUG: Response: 200 (3925 bytes)
2023-07-01 05:23:44,294 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:23:44,294 | DEBUG: Data: None
2023-07-01 05:23:44,294 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:23:44,623 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:23:44,624 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:23:44,625 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:23:44,625 | DEBUG: Data: None
2023-07-01 05:23:44,625 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:23:44,711 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9802
2023-07-01 05:23:44,712 | DEBUG: Response: 200 (9802 bytes)
2023-07-01 05:23:44,718 | INFO: 127.0.0.1 - - [01/Jul/2023 05:23:44] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-01 05:23:45,078 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9795
2023-07-01 05:23:45,080 | DEBUG: Response: 200 (9795 bytes)
2023-07-01 05:23:45,084 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:23:45,084 | DEBUG: Data: None
2023-07-01 05:23:45,084 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:23:45,450 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5002
2023-07-01 05:23:45,451 | DEBUG: Response: 200 (5002 bytes)
2023-07-01 05:23:45,452 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:23:45,453 | DEBUG: Data: None
2023-07-01 05:23:45,453 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:23:45,786 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 05:23:45,787 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 05:23:45,791 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:23:45,791 | DEBUG: Data: None
2023-07-01 05:23:45,791 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:23:46,165 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2399
2023-07-01 05:23:46,166 | DEBUG: Response: 200 (2399 bytes)
2023-07-01 05:23:46,167 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:23:46,167 | DEBUG: Data: None
2023-07-01 05:23:46,167 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:23:46,545 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6943
2023-07-01 05:23:46,547 | DEBUG: Response: 200 (6943 bytes)
2023-07-01 05:23:46,551 | INFO: 127.0.0.1 - - [01/Jul/2023 05:23:46] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:27:00,308 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:27:00,308 | DEBUG: Data: None
2023-07-01 05:27:00,308 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:27:00,641 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4388
2023-07-01 05:27:00,642 | DEBUG: Response: 200 (4388 bytes)
2023-07-01 05:27:00,643 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:27:00,643 | DEBUG: Data: None
2023-07-01 05:27:00,644 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:27:01,103 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7222
2023-07-01 05:27:01,104 | DEBUG: Response: 200 (7222 bytes)
2023-07-01 05:27:01,108 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:27:01,109 | DEBUG: Data: None
2023-07-01 05:27:01,109 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:27:01,461 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4775
2023-07-01 05:27:01,462 | DEBUG: Response: 200 (4775 bytes)
2023-07-01 05:27:01,463 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:27:01,463 | DEBUG: Data: None
2023-07-01 05:27:01,463 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:27:01,779 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:27:01,781 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:27:01,781 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:27:01,781 | DEBUG: Data: None
2023-07-01 05:27:01,781 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:27:02,125 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2199
2023-07-01 05:27:02,127 | DEBUG: Response: 200 (2199 bytes)
2023-07-01 05:27:02,129 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:27:02,129 | DEBUG: Data: None
2023-07-01 05:27:02,129 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:27:02,924 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4925
2023-07-01 05:27:02,925 | DEBUG: Response: 200 (4925 bytes)
2023-07-01 05:27:02,927 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:27:02,927 | DEBUG: Data: None
2023-07-01 05:27:02,927 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:27:03,345 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3824
2023-07-01 05:27:03,347 | DEBUG: Response: 200 (3824 bytes)
2023-07-01 05:27:03,349 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:27:03,349 | DEBUG: Data: None
2023-07-01 05:27:03,349 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:27:03,713 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3922
2023-07-01 05:27:03,714 | DEBUG: Response: 200 (3922 bytes)
2023-07-01 05:27:03,716 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:27:03,716 | DEBUG: Data: None
2023-07-01 05:27:03,716 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:27:04,036 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:27:04,037 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:27:04,038 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:27:04,038 | DEBUG: Data: None
2023-07-01 05:27:04,038 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:27:04,478 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9799
2023-07-01 05:27:04,479 | DEBUG: Response: 200 (9799 bytes)
2023-07-01 05:27:04,484 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:27:04,484 | DEBUG: Data: None
2023-07-01 05:27:04,484 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:27:04,943 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5002
2023-07-01 05:27:04,944 | DEBUG: Response: 200 (5002 bytes)
2023-07-01 05:27:04,945 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:27:04,945 | DEBUG: Data: None
2023-07-01 05:27:04,945 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:27:05,280 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 05:27:05,281 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 05:27:05,282 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:27:05,282 | DEBUG: Data: None
2023-07-01 05:27:05,282 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:27:05,647 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2401
2023-07-01 05:27:05,648 | DEBUG: Response: 200 (2401 bytes)
2023-07-01 05:27:05,649 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:27:05,650 | DEBUG: Data: None
2023-07-01 05:27:05,650 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:27:06,038 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6969
2023-07-01 05:27:06,039 | DEBUG: Response: 200 (6969 bytes)
2023-07-01 05:27:06,042 | INFO: 127.0.0.1 - - [01/Jul/2023 05:27:06] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:28:14,400 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:28:14,401 | DEBUG: Data: None
2023-07-01 05:28:14,401 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:28:14,773 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4401
2023-07-01 05:28:14,775 | DEBUG: Response: 200 (4401 bytes)
2023-07-01 05:28:14,779 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:28:14,780 | DEBUG: Data: None
2023-07-01 05:28:14,781 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:28:15,251 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7219
2023-07-01 05:28:15,253 | DEBUG: Response: 200 (7219 bytes)
2023-07-01 05:28:15,263 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:28:15,263 | DEBUG: Data: None
2023-07-01 05:28:15,263 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:28:15,630 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4760
2023-07-01 05:28:15,631 | DEBUG: Response: 200 (4760 bytes)
2023-07-01 05:28:15,633 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:28:15,633 | DEBUG: Data: None
2023-07-01 05:28:15,633 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:28:15,978 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:28:15,980 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:28:15,981 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:28:15,981 | DEBUG: Data: None
2023-07-01 05:28:15,981 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:28:16,277 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2199
2023-07-01 05:28:16,278 | DEBUG: Response: 200 (2199 bytes)
2023-07-01 05:28:16,280 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:28:16,280 | DEBUG: Data: None
2023-07-01 05:28:16,280 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:28:16,610 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4920
2023-07-01 05:28:16,613 | DEBUG: Response: 200 (4920 bytes)
2023-07-01 05:28:16,615 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:28:16,615 | DEBUG: Data: None
2023-07-01 05:28:16,616 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:28:16,991 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3823
2023-07-01 05:28:16,994 | DEBUG: Response: 200 (3823 bytes)
2023-07-01 05:28:16,998 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:28:16,999 | DEBUG: Data: None
2023-07-01 05:28:16,999 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:28:17,391 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3922
2023-07-01 05:28:17,392 | DEBUG: Response: 200 (3922 bytes)
2023-07-01 05:28:17,394 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:28:17,394 | DEBUG: Data: None
2023-07-01 05:28:17,394 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:28:17,729 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:28:17,730 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:28:17,731 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:28:17,731 | DEBUG: Data: None
2023-07-01 05:28:17,732 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:28:18,258 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9803
2023-07-01 05:28:18,260 | DEBUG: Response: 200 (9803 bytes)
2023-07-01 05:28:18,265 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:28:18,265 | DEBUG: Data: None
2023-07-01 05:28:18,265 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:28:18,643 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5003
2023-07-01 05:28:18,644 | DEBUG: Response: 200 (5003 bytes)
2023-07-01 05:28:18,645 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:28:18,645 | DEBUG: Data: None
2023-07-01 05:28:18,645 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:28:19,008 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 05:28:19,010 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 05:28:19,014 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:28:19,014 | DEBUG: Data: None
2023-07-01 05:28:19,014 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:28:19,380 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2396
2023-07-01 05:28:19,381 | DEBUG: Response: 200 (2396 bytes)
2023-07-01 05:28:19,383 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:28:19,383 | DEBUG: Data: None
2023-07-01 05:28:19,383 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:28:19,795 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6964
2023-07-01 05:28:19,796 | DEBUG: Response: 200 (6964 bytes)
2023-07-01 05:28:19,799 | INFO: 127.0.0.1 - - [01/Jul/2023 05:28:19] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:29:26,326 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:29:26,327 | DEBUG: Data: None
2023-07-01 05:29:26,327 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:29:26,588 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:29:26,588 | DEBUG: Data: None
2023-07-01 05:29:26,589 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:29:26,626 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 05:29:26,628 | DEBUG: Response: 200 (136 bytes)
2023-07-01 05:29:26,630 | INFO: 127.0.0.1 - - [01/Jul/2023 05:29:26] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-01 05:29:27,163 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4394
2023-07-01 05:29:27,165 | DEBUG: Response: 200 (4394 bytes)
2023-07-01 05:29:27,167 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:29:27,167 | DEBUG: Data: None
2023-07-01 05:29:27,167 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:29:27,175 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:29:27,175 | DEBUG: Data: None
2023-07-01 05:29:27,175 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:29:27,543 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4397
2023-07-01 05:29:27,545 | DEBUG: Response: 200 (4397 bytes)
2023-07-01 05:29:27,548 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:29:27,548 | DEBUG: Data: None
2023-07-01 05:29:27,548 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:29:27,676 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8058
2023-07-01 05:29:27,678 | DEBUG: Response: 200 (8058 bytes)
2023-07-01 05:29:27,684 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:29:27,684 | DEBUG: Data: None
2023-07-01 05:29:27,684 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:29:28,012 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8059
2023-07-01 05:29:28,014 | DEBUG: Response: 200 (8059 bytes)
2023-07-01 05:29:28,021 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:29:28,021 | DEBUG: Data: None
2023-07-01 05:29:28,021 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:29:28,049 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4773
2023-07-01 05:29:28,050 | DEBUG: Response: 200 (4773 bytes)
2023-07-01 05:29:28,053 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:29:28,053 | DEBUG: Data: None
2023-07-01 05:29:28,053 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:29:28,411 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:29:28,412 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:29:28,413 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:29:28,413 | DEBUG: Data: None
2023-07-01 05:29:28,413 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:29:28,644 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4759
2023-07-01 05:29:28,645 | DEBUG: Response: 200 (4759 bytes)
2023-07-01 05:29:28,648 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:29:28,648 | DEBUG: Data: None
2023-07-01 05:29:28,648 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:29:28,751 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2203
2023-07-01 05:29:28,753 | DEBUG: Response: 200 (2203 bytes)
2023-07-01 05:29:28,756 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:29:28,756 | DEBUG: Data: None
2023-07-01 05:29:28,756 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:29:29,063 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:29:29,064 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:29:29,065 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:29:29,065 | DEBUG: Data: None
2023-07-01 05:29:29,065 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:29:29,251 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4927
2023-07-01 05:29:29,252 | DEBUG: Response: 200 (4927 bytes)
2023-07-01 05:29:29,255 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:29:29,255 | DEBUG: Data: None
2023-07-01 05:29:29,255 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:29:29,404 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2203
2023-07-01 05:29:29,404 | DEBUG: Response: 200 (2203 bytes)
2023-07-01 05:29:29,405 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:29:29,405 | DEBUG: Data: None
2023-07-01 05:29:29,405 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:29:29,640 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3822
2023-07-01 05:29:29,643 | DEBUG: Response: 200 (3822 bytes)
2023-07-01 05:29:29,646 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:29:29,646 | DEBUG: Data: None
2023-07-01 05:29:29,646 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:29:29,786 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4921
2023-07-01 05:29:29,788 | DEBUG: Response: 200 (4921 bytes)
2023-07-01 05:29:29,790 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:29:29,790 | DEBUG: Data: None
2023-07-01 05:29:29,790 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:29:30,016 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3921
2023-07-01 05:29:30,019 | DEBUG: Response: 200 (3921 bytes)
2023-07-01 05:29:30,021 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:29:30,021 | DEBUG: Data: None
2023-07-01 05:29:30,021 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:29:30,162 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3822
2023-07-01 05:29:30,163 | DEBUG: Response: 200 (3822 bytes)
2023-07-01 05:29:30,165 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:29:30,166 | DEBUG: Data: None
2023-07-01 05:29:30,166 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:29:30,368 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:29:30,370 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:29:30,371 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:29:30,371 | DEBUG: Data: None
2023-07-01 05:29:30,371 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:29:30,530 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3920
2023-07-01 05:29:30,531 | DEBUG: Response: 200 (3920 bytes)
2023-07-01 05:29:30,533 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:29:30,533 | DEBUG: Data: None
2023-07-01 05:29:30,533 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:29:30,811 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9785
2023-07-01 05:29:30,813 | DEBUG: Response: 200 (9785 bytes)
2023-07-01 05:29:30,818 | INFO: 127.0.0.1 - - [01/Jul/2023 05:29:30] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-01 05:29:30,869 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:29:30,870 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:29:30,871 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:29:30,871 | DEBUG: Data: None
2023-07-01 05:29:30,871 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:29:31,360 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9799
2023-07-01 05:29:31,362 | DEBUG: Response: 200 (9799 bytes)
2023-07-01 05:29:31,369 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:29:31,369 | DEBUG: Data: None
2023-07-01 05:29:31,369 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:29:31,826 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4997
2023-07-01 05:29:31,829 | DEBUG: Response: 200 (4997 bytes)
2023-07-01 05:29:31,831 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:29:31,831 | DEBUG: Data: None
2023-07-01 05:29:31,831 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:29:32,215 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5032
2023-07-01 05:29:32,217 | DEBUG: Response: 200 (5032 bytes)
2023-07-01 05:29:32,218 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:29:32,219 | DEBUG: Data: None
2023-07-01 05:29:32,219 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:29:32,571 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2393
2023-07-01 05:29:32,572 | DEBUG: Response: 200 (2393 bytes)
2023-07-01 05:29:32,574 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:29:32,574 | DEBUG: Data: None
2023-07-01 05:29:32,574 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:29:32,964 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6964
2023-07-01 05:29:32,966 | DEBUG: Response: 200 (6964 bytes)
2023-07-01 05:29:32,969 | INFO: 127.0.0.1 - - [01/Jul/2023 05:29:32] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:29:59,938 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:29:59,938 | DEBUG: Data: None
2023-07-01 05:29:59,939 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:30:00,307 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4398
2023-07-01 05:30:00,314 | DEBUG: Response: 200 (4398 bytes)
2023-07-01 05:30:00,322 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:30:00,323 | DEBUG: Data: None
2023-07-01 05:30:00,323 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:30:00,324 | DEBUG: Sleeping: 0.49 seconds prior to call
2023-07-01 05:30:01,281 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8047
2023-07-01 05:30:01,286 | DEBUG: Response: 200 (8047 bytes)
2023-07-01 05:30:01,300 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:30:01,301 | DEBUG: Data: None
2023-07-01 05:30:01,301 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:30:01,301 | DEBUG: Sleeping: 0.98 seconds prior to call
2023-07-01 05:30:02,722 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4788
2023-07-01 05:30:02,723 | DEBUG: Response: 200 (4788 bytes)
2023-07-01 05:30:02,725 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:30:02,725 | DEBUG: Data: None
2023-07-01 05:30:02,725 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:30:02,725 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 05:30:03,571 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:30:03,573 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:30:03,574 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:30:03,574 | DEBUG: Data: None
2023-07-01 05:30:03,574 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:30:03,574 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 05:30:04,406 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2197
2023-07-01 05:30:04,407 | DEBUG: Response: 200 (2197 bytes)
2023-07-01 05:30:04,408 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:30:04,409 | DEBUG: Data: None
2023-07-01 05:30:04,409 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:30:04,409 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 05:30:05,282 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4922
2023-07-01 05:30:05,284 | DEBUG: Response: 200 (4922 bytes)
2023-07-01 05:30:05,285 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:30:05,285 | DEBUG: Data: None
2023-07-01 05:30:05,285 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:30:05,285 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 05:30:06,157 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3822
2023-07-01 05:30:06,158 | DEBUG: Response: 200 (3822 bytes)
2023-07-01 05:30:06,160 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:30:06,160 | DEBUG: Data: None
2023-07-01 05:30:06,160 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:30:06,160 | DEBUG: Sleeping: 1.00 seconds prior to call
2023-07-01 05:30:07,856 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3920
2023-07-01 05:30:07,859 | DEBUG: Response: 200 (3920 bytes)
2023-07-01 05:30:07,861 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:30:07,861 | DEBUG: Data: None
2023-07-01 05:30:07,861 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:30:07,861 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 05:30:08,696 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:30:08,699 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:30:08,700 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:30:08,700 | DEBUG: Data: None
2023-07-01 05:30:08,700 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:30:08,700 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 05:30:10,013 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9803
2023-07-01 05:30:10,017 | DEBUG: Response: 200 (9803 bytes)
2023-07-01 05:30:10,025 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:30:10,025 | DEBUG: Data: None
2023-07-01 05:30:10,025 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:30:10,025 | DEBUG: Sleeping: 0.49 seconds prior to call
2023-07-01 05:30:10,881 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4997
2023-07-01 05:30:10,882 | DEBUG: Response: 200 (4997 bytes)
2023-07-01 05:30:10,884 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:30:10,884 | DEBUG: Data: None
2023-07-01 05:30:10,884 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:30:10,884 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 05:30:11,843 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 05:30:11,845 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 05:30:11,847 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:30:11,847 | DEBUG: Data: None
2023-07-01 05:30:11,847 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:30:11,847 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 05:30:12,790 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2401
2023-07-01 05:30:12,791 | DEBUG: Response: 200 (2401 bytes)
2023-07-01 05:30:12,792 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:30:12,792 | DEBUG: Data: None
2023-07-01 05:30:12,792 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:30:12,792 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 05:30:13,706 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6969
2023-07-01 05:30:13,707 | DEBUG: Response: 200 (6969 bytes)
2023-07-01 05:30:13,710 | INFO: 127.0.0.1 - - [01/Jul/2023 05:30:13] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:31:05,812 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:31:05,812 | DEBUG: Data: None
2023-07-01 05:31:05,812 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:31:06,003 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:31:06,003 | DEBUG: Data: None
2023-07-01 05:31:06,003 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:31:06,087 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 05:31:06,088 | DEBUG: Response: 200 (136 bytes)
2023-07-01 05:31:06,089 | INFO: 127.0.0.1 - - [01/Jul/2023 05:31:06] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-01 05:31:06,365 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4387
2023-07-01 05:31:06,368 | DEBUG: Response: 200 (4387 bytes)
2023-07-01 05:31:06,372 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:31:06,372 | DEBUG: Data: None
2023-07-01 05:31:06,372 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:31:06,649 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:31:06,649 | DEBUG: Data: None
2023-07-01 05:31:06,651 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:31:06,868 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8054
2023-07-01 05:31:06,870 | DEBUG: Response: 200 (8054 bytes)
2023-07-01 05:31:06,883 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:31:06,884 | DEBUG: Data: None
2023-07-01 05:31:06,884 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:31:06,989 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4399
2023-07-01 05:31:06,992 | DEBUG: Response: 200 (4399 bytes)
2023-07-01 05:31:06,994 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:31:06,995 | DEBUG: Data: None
2023-07-01 05:31:06,995 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:31:07,229 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4793
2023-07-01 05:31:07,230 | DEBUG: Response: 200 (4793 bytes)
2023-07-01 05:31:07,233 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:31:07,234 | DEBUG: Data: None
2023-07-01 05:31:07,234 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:31:07,500 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8055
2023-07-01 05:31:07,501 | DEBUG: Response: 200 (8055 bytes)
2023-07-01 05:31:07,510 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:31:07,510 | DEBUG: Data: None
2023-07-01 05:31:07,511 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:31:07,615 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:31:07,618 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:31:07,620 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:31:07,620 | DEBUG: Data: None
2023-07-01 05:31:07,621 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:31:07,857 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4785
2023-07-01 05:31:07,860 | DEBUG: Response: 200 (4785 bytes)
2023-07-01 05:31:07,863 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:31:07,864 | DEBUG: Data: None
2023-07-01 05:31:07,864 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:31:07,965 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2201
2023-07-01 05:31:07,967 | DEBUG: Response: 200 (2201 bytes)
2023-07-01 05:31:07,969 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:31:07,969 | DEBUG: Data: None
2023-07-01 05:31:07,969 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:31:08,213 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:31:08,215 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:31:08,217 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:31:08,217 | DEBUG: Data: None
2023-07-01 05:31:08,217 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:31:08,324 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4913
2023-07-01 05:31:08,326 | DEBUG: Response: 200 (4913 bytes)
2023-07-01 05:31:08,330 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:31:08,331 | DEBUG: Data: None
2023-07-01 05:31:08,331 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:31:08,537 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2200
2023-07-01 05:31:08,538 | DEBUG: Response: 200 (2200 bytes)
2023-07-01 05:31:08,539 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:31:08,539 | DEBUG: Data: None
2023-07-01 05:31:08,539 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:31:08,703 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3822
2023-07-01 05:31:08,705 | DEBUG: Response: 200 (3822 bytes)
2023-07-01 05:31:08,708 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:31:08,708 | DEBUG: Data: None
2023-07-01 05:31:08,708 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:31:08,871 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4921
2023-07-01 05:31:08,872 | DEBUG: Response: 200 (4921 bytes)
2023-07-01 05:31:08,875 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:31:08,875 | DEBUG: Data: None
2023-07-01 05:31:08,875 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:31:09,057 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3916
2023-07-01 05:31:09,059 | DEBUG: Response: 200 (3916 bytes)
2023-07-01 05:31:09,063 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:31:09,063 | DEBUG: Data: None
2023-07-01 05:31:09,063 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:31:09,216 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3822
2023-07-01 05:31:09,218 | DEBUG: Response: 200 (3822 bytes)
2023-07-01 05:31:09,221 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:31:09,222 | DEBUG: Data: None
2023-07-01 05:31:09,222 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:31:09,402 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:31:09,403 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:31:09,404 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:31:09,404 | DEBUG: Data: None
2023-07-01 05:31:09,404 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:31:09,596 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3916
2023-07-01 05:31:09,597 | DEBUG: Response: 200 (3916 bytes)
2023-07-01 05:31:09,599 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:31:09,599 | DEBUG: Data: None
2023-07-01 05:31:09,599 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:31:09,927 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:31:09,929 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:31:09,930 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:31:09,930 | DEBUG: Data: None
2023-07-01 05:31:09,930 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:31:10,118 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9804
2023-07-01 05:31:10,119 | DEBUG: Response: 200 (9804 bytes)
2023-07-01 05:31:10,125 | INFO: 127.0.0.1 - - [01/Jul/2023 05:31:10] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-01 05:31:10,423 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9804
2023-07-01 05:31:10,426 | DEBUG: Response: 200 (9804 bytes)
2023-07-01 05:31:10,432 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:31:10,432 | DEBUG: Data: None
2023-07-01 05:31:10,432 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:31:10,775 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4998
2023-07-01 05:31:10,778 | DEBUG: Response: 200 (4998 bytes)
2023-07-01 05:31:10,780 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:31:10,780 | DEBUG: Data: None
2023-07-01 05:31:10,781 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:31:11,171 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 05:31:11,173 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 05:31:11,177 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:31:11,177 | DEBUG: Data: None
2023-07-01 05:31:11,177 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:31:11,534 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2397
2023-07-01 05:31:11,535 | DEBUG: Response: 200 (2397 bytes)
2023-07-01 05:31:11,536 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:31:11,536 | DEBUG: Data: None
2023-07-01 05:31:11,536 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:31:11,920 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6963
2023-07-01 05:31:11,921 | DEBUG: Response: 200 (6963 bytes)
2023-07-01 05:31:11,925 | INFO: 127.0.0.1 - - [01/Jul/2023 05:31:11] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:37:12,002 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:37:12,003 | DEBUG: Data: None
2023-07-01 05:37:12,003 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:37:12,347 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4390
2023-07-01 05:37:12,351 | DEBUG: Response: 200 (4390 bytes)
2023-07-01 05:37:12,354 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:37:12,355 | DEBUG: Data: None
2023-07-01 05:37:12,355 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:37:12,869 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8135
2023-07-01 05:37:12,870 | DEBUG: Response: 200 (8135 bytes)
2023-07-01 05:37:12,875 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:37:12,875 | DEBUG: Data: None
2023-07-01 05:37:12,875 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:37:13,284 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4778
2023-07-01 05:37:13,286 | DEBUG: Response: 200 (4778 bytes)
2023-07-01 05:37:13,289 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:37:13,289 | DEBUG: Data: None
2023-07-01 05:37:13,290 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:37:13,650 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:37:13,652 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:37:13,652 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:37:13,652 | DEBUG: Data: None
2023-07-01 05:37:13,652 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:37:14,314 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2198
2023-07-01 05:37:14,315 | DEBUG: Response: 200 (2198 bytes)
2023-07-01 05:37:14,316 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:37:14,316 | DEBUG: Data: None
2023-07-01 05:37:14,316 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:37:14,717 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4921
2023-07-01 05:37:14,718 | DEBUG: Response: 200 (4921 bytes)
2023-07-01 05:37:14,719 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:37:14,719 | DEBUG: Data: None
2023-07-01 05:37:14,719 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:37:15,074 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3822
2023-07-01 05:37:15,076 | DEBUG: Response: 200 (3822 bytes)
2023-07-01 05:37:15,078 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:37:15,078 | DEBUG: Data: None
2023-07-01 05:37:15,078 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:37:15,443 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3921
2023-07-01 05:37:15,444 | DEBUG: Response: 200 (3921 bytes)
2023-07-01 05:37:15,445 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:37:15,446 | DEBUG: Data: None
2023-07-01 05:37:15,446 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:37:15,816 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:37:15,817 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:37:15,817 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:37:15,818 | DEBUG: Data: None
2023-07-01 05:37:15,818 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:37:16,272 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9784
2023-07-01 05:37:16,274 | DEBUG: Response: 200 (9784 bytes)
2023-07-01 05:37:16,279 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:37:16,279 | DEBUG: Data: None
2023-07-01 05:37:16,279 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:37:16,648 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5002
2023-07-01 05:37:16,649 | DEBUG: Response: 200 (5002 bytes)
2023-07-01 05:37:16,650 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:37:16,650 | DEBUG: Data: None
2023-07-01 05:37:16,650 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:37:16,971 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 05:37:16,972 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 05:37:16,974 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:37:16,974 | DEBUG: Data: None
2023-07-01 05:37:16,974 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:37:17,326 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2397
2023-07-01 05:37:17,327 | DEBUG: Response: 200 (2397 bytes)
2023-07-01 05:37:17,328 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:37:17,328 | DEBUG: Data: None
2023-07-01 05:37:17,328 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:37:17,692 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6965
2023-07-01 05:37:17,693 | DEBUG: Response: 200 (6965 bytes)
2023-07-01 05:37:17,697 | INFO: 127.0.0.1 - - [01/Jul/2023 05:37:17] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:37:55,763 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:37:55,763 | DEBUG: Data: None
2023-07-01 05:37:55,763 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:37:55,885 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:37:55,885 | DEBUG: Data: None
2023-07-01 05:37:55,885 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:37:56,041 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 05:37:56,042 | DEBUG: Response: 200 (136 bytes)
2023-07-01 05:37:56,043 | INFO: 127.0.0.1 - - [01/Jul/2023 05:37:56] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-01 05:37:56,231 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:37:56,231 | DEBUG: Data: None
2023-07-01 05:37:56,231 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:37:56,239 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4387
2023-07-01 05:37:56,241 | DEBUG: Response: 200 (4387 bytes)
2023-07-01 05:37:56,243 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:37:56,243 | DEBUG: Data: None
2023-07-01 05:37:56,243 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:37:56,605 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4395
2023-07-01 05:37:56,606 | DEBUG: Response: 200 (4395 bytes)
2023-07-01 05:37:56,610 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:37:56,610 | DEBUG: Data: None
2023-07-01 05:37:56,610 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:37:56,740 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8129
2023-07-01 05:37:56,743 | DEBUG: Response: 200 (8129 bytes)
2023-07-01 05:37:56,747 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:37:56,748 | DEBUG: Data: None
2023-07-01 05:37:56,748 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:37:57,093 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8138
2023-07-01 05:37:57,094 | DEBUG: Response: 200 (8138 bytes)
2023-07-01 05:37:57,099 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:37:57,099 | DEBUG: Data: None
2023-07-01 05:37:57,099 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:37:57,441 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4781
2023-07-01 05:37:57,442 | DEBUG: Response: 200 (4781 bytes)
2023-07-01 05:37:57,444 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:37:57,444 | DEBUG: Data: None
2023-07-01 05:37:57,445 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:37:57,523 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4790
2023-07-01 05:37:57,524 | DEBUG: Response: 200 (4790 bytes)
2023-07-01 05:37:57,526 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:37:57,526 | DEBUG: Data: None
2023-07-01 05:37:57,526 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:37:58,055 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:37:58,058 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:37:58,059 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:37:58,059 | DEBUG: Data: None
2023-07-01 05:37:58,059 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:37:58,106 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:37:58,107 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:37:58,108 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:37:58,108 | DEBUG: Data: None
2023-07-01 05:37:58,108 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:37:58,367 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2198
2023-07-01 05:37:58,368 | DEBUG: Response: 200 (2198 bytes)
2023-07-01 05:37:58,370 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:37:58,370 | DEBUG: Data: None
2023-07-01 05:37:58,371 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:37:58,452 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2203
2023-07-01 05:37:58,453 | DEBUG: Response: 200 (2203 bytes)
2023-07-01 05:37:58,455 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:37:58,455 | DEBUG: Data: None
2023-07-01 05:37:58,455 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:37:58,740 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4922
2023-07-01 05:37:58,742 | DEBUG: Response: 200 (4922 bytes)
2023-07-01 05:37:58,744 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:37:58,744 | DEBUG: Data: None
2023-07-01 05:37:58,744 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:37:58,789 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4925
2023-07-01 05:37:58,790 | DEBUG: Response: 200 (4925 bytes)
2023-07-01 05:37:58,791 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:37:58,791 | DEBUG: Data: None
2023-07-01 05:37:58,791 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:37:59,092 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3823
2023-07-01 05:37:59,094 | DEBUG: Response: 200 (3823 bytes)
2023-07-01 05:37:59,097 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:37:59,097 | DEBUG: Data: None
2023-07-01 05:37:59,097 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:37:59,222 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3823
2023-07-01 05:37:59,223 | DEBUG: Response: 200 (3823 bytes)
2023-07-01 05:37:59,225 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:37:59,225 | DEBUG: Data: None
2023-07-01 05:37:59,225 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:37:59,446 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3921
2023-07-01 05:37:59,447 | DEBUG: Response: 200 (3921 bytes)
2023-07-01 05:37:59,449 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:37:59,449 | DEBUG: Data: None
2023-07-01 05:37:59,449 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:37:59,604 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3921
2023-07-01 05:37:59,605 | DEBUG: Response: 200 (3921 bytes)
2023-07-01 05:37:59,607 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:37:59,607 | DEBUG: Data: None
2023-07-01 05:37:59,607 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:37:59,805 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:37:59,806 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:37:59,806 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:37:59,806 | DEBUG: Data: None
2023-07-01 05:37:59,807 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:37:59,964 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:37:59,965 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:37:59,966 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:37:59,966 | DEBUG: Data: None
2023-07-01 05:37:59,966 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:38:00,408 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9807
2023-07-01 05:38:00,412 | DEBUG: Response: 200 (9807 bytes)
2023-07-01 05:38:00,417 | INFO: 127.0.0.1 - - [01/Jul/2023 05:38:00] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-01 05:38:00,783 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9801
2023-07-01 05:38:00,785 | DEBUG: Response: 200 (9801 bytes)
2023-07-01 05:38:00,792 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:38:00,792 | DEBUG: Data: None
2023-07-01 05:38:00,792 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:38:01,147 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5000
2023-07-01 05:38:01,148 | DEBUG: Response: 200 (5000 bytes)
2023-07-01 05:38:01,149 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:38:01,149 | DEBUG: Data: None
2023-07-01 05:38:01,149 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:38:01,521 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5032
2023-07-01 05:38:01,522 | DEBUG: Response: 200 (5032 bytes)
2023-07-01 05:38:01,523 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:38:01,523 | DEBUG: Data: None
2023-07-01 05:38:01,523 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:38:02,207 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2396
2023-07-01 05:38:02,207 | DEBUG: Response: 200 (2396 bytes)
2023-07-01 05:38:02,208 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:38:02,208 | DEBUG: Data: None
2023-07-01 05:38:02,208 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:38:02,611 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6961
2023-07-01 05:38:02,612 | DEBUG: Response: 200 (6961 bytes)
2023-07-01 05:38:02,615 | INFO: 127.0.0.1 - - [01/Jul/2023 05:38:02] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:43:12,825 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:43:12,825 | DEBUG: Data: None
2023-07-01 05:43:12,825 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:43:12,931 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:43:12,931 | DEBUG: Data: None
2023-07-01 05:43:12,931 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:43:13,018 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:43:13,019 | DEBUG: Data: None
2023-07-01 05:43:13,019 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:43:13,023 | DEBUG: Starting new HTTPS connection (3): oauth.reddit.com:443
2023-07-01 05:43:13,205 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 05:43:13,208 | DEBUG: Response: 200 (136 bytes)
2023-07-01 05:43:13,209 | INFO: 127.0.0.1 - - [01/Jul/2023 05:43:13] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-01 05:43:13,209 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4397
2023-07-01 05:43:13,211 | DEBUG: Response: 200 (4397 bytes)
2023-07-01 05:43:13,214 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:43:13,214 | DEBUG: Data: None
2023-07-01 05:43:13,214 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:13,443 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4398
2023-07-01 05:43:13,447 | DEBUG: Response: 200 (4398 bytes)
2023-07-01 05:43:13,453 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:43:13,454 | DEBUG: Data: None
2023-07-01 05:43:13,454 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:13,689 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8281
2023-07-01 05:43:13,691 | DEBUG: Response: 200 (8281 bytes)
2023-07-01 05:43:13,699 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:43:13,699 | DEBUG: Data: None
2023-07-01 05:43:13,699 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:13,955 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8284
2023-07-01 05:43:13,959 | DEBUG: Response: 200 (8284 bytes)
2023-07-01 05:43:13,965 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:43:13,965 | DEBUG: Data: None
2023-07-01 05:43:13,965 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:14,052 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4778
2023-07-01 05:43:14,054 | DEBUG: Response: 200 (4778 bytes)
2023-07-01 05:43:14,058 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:43:14,058 | DEBUG: Data: None
2023-07-01 05:43:14,058 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:14,339 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4790
2023-07-01 05:43:14,340 | DEBUG: Response: 200 (4790 bytes)
2023-07-01 05:43:14,342 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:43:14,342 | DEBUG: Data: None
2023-07-01 05:43:14,342 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:14,376 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:43:14,377 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:43:14,377 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:43:14,377 | DEBUG: Data: None
2023-07-01 05:43:14,377 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:14,684 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2198
2023-07-01 05:43:14,685 | DEBUG: Response: 200 (2198 bytes)
2023-07-01 05:43:14,686 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:43:14,686 | DEBUG: Data: None
2023-07-01 05:43:14,686 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:43:14,690 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:43:14,691 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:43:14,691 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:43:14,691 | DEBUG: Data: None
2023-07-01 05:43:14,691 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:15,033 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4900
2023-07-01 05:43:15,035 | DEBUG: Response: 200 (4900 bytes)
2023-07-01 05:43:15,037 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:43:15,037 | DEBUG: Data: None
2023-07-01 05:43:15,037 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:15,056 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2203
2023-07-01 05:43:15,057 | DEBUG: Response: 200 (2203 bytes)
2023-07-01 05:43:15,058 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:43:15,058 | DEBUG: Data: None
2023-07-01 05:43:15,058 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:43:15,425 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4900
2023-07-01 05:43:15,426 | DEBUG: Response: 200 (4900 bytes)
2023-07-01 05:43:15,428 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:43:15,428 | DEBUG: Data: None
2023-07-01 05:43:15,428 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:15,649 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3823
2023-07-01 05:43:15,650 | DEBUG: Response: 200 (3823 bytes)
2023-07-01 05:43:15,651 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:43:15,652 | DEBUG: Data: None
2023-07-01 05:43:15,652 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:15,774 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3822
2023-07-01 05:43:15,775 | DEBUG: Response: 200 (3822 bytes)
2023-07-01 05:43:15,777 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:43:15,777 | DEBUG: Data: None
2023-07-01 05:43:15,777 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:16,046 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3921
2023-07-01 05:43:16,047 | DEBUG: Response: 200 (3921 bytes)
2023-07-01 05:43:16,049 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:43:16,049 | DEBUG: Data: None
2023-07-01 05:43:16,049 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:16,099 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3921
2023-07-01 05:43:16,100 | DEBUG: Response: 200 (3921 bytes)
2023-07-01 05:43:16,101 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:43:16,101 | DEBUG: Data: None
2023-07-01 05:43:16,102 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:16,400 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:43:16,401 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:43:16,402 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:43:16,402 | DEBUG: Data: None
2023-07-01 05:43:16,402 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:16,744 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:43:16,745 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:43:16,746 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:43:16,746 | DEBUG: Data: None
2023-07-01 05:43:16,746 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:16,861 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9805
2023-07-01 05:43:16,862 | DEBUG: Response: 200 (9805 bytes)
2023-07-01 05:43:16,866 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:43:16,866 | DEBUG: Data: None
2023-07-01 05:43:16,866 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:43:17,243 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9800
2023-07-01 05:43:17,244 | DEBUG: Response: 200 (9800 bytes)
2023-07-01 05:43:17,248 | INFO: 127.0.0.1 - - [01/Jul/2023 05:43:17] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-01 05:43:17,309 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4996
2023-07-01 05:43:17,310 | DEBUG: Response: 200 (4996 bytes)
2023-07-01 05:43:17,311 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:43:17,311 | DEBUG: Data: None
2023-07-01 05:43:17,311 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:17,661 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5032
2023-07-01 05:43:17,662 | DEBUG: Response: 200 (5032 bytes)
2023-07-01 05:43:17,664 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:43:17,664 | DEBUG: Data: None
2023-07-01 05:43:17,664 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:18,036 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2397
2023-07-01 05:43:18,038 | DEBUG: Response: 200 (2397 bytes)
2023-07-01 05:43:18,040 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:43:18,040 | DEBUG: Data: None
2023-07-01 05:43:18,040 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:18,454 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6974
2023-07-01 05:43:18,456 | DEBUG: Response: 200 (6974 bytes)
2023-07-01 05:43:18,459 | INFO: 127.0.0.1 - - [01/Jul/2023 05:43:18] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:43:18,464 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:43:18,465 | DEBUG: Data: None
2023-07-01 05:43:18,465 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:43:18,875 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4398
2023-07-01 05:43:18,876 | DEBUG: Response: 200 (4398 bytes)
2023-07-01 05:43:18,878 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:43:18,878 | DEBUG: Data: None
2023-07-01 05:43:18,878 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:19,377 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8274
2023-07-01 05:43:19,379 | DEBUG: Response: 200 (8274 bytes)
2023-07-01 05:43:19,382 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:43:19,382 | DEBUG: Data: None
2023-07-01 05:43:19,382 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:19,761 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4777
2023-07-01 05:43:19,762 | DEBUG: Response: 200 (4777 bytes)
2023-07-01 05:43:19,764 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:43:19,764 | DEBUG: Data: None
2023-07-01 05:43:19,764 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:20,150 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:43:20,152 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:43:20,153 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:43:20,153 | DEBUG: Data: None
2023-07-01 05:43:20,153 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:20,486 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2200
2023-07-01 05:43:20,487 | DEBUG: Response: 200 (2200 bytes)
2023-07-01 05:43:20,488 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:43:20,488 | DEBUG: Data: None
2023-07-01 05:43:20,488 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:43:20,835 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4898
2023-07-01 05:43:20,837 | DEBUG: Response: 200 (4898 bytes)
2023-07-01 05:43:20,839 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:43:20,839 | DEBUG: Data: None
2023-07-01 05:43:20,839 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:21,184 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3921
2023-07-01 05:43:21,185 | DEBUG: Response: 200 (3921 bytes)
2023-07-01 05:43:21,186 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:43:21,186 | DEBUG: Data: None
2023-07-01 05:43:21,187 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:21,756 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3822
2023-07-01 05:43:21,757 | DEBUG: Response: 200 (3822 bytes)
2023-07-01 05:43:21,758 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:43:21,758 | DEBUG: Data: None
2023-07-01 05:43:21,759 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:22,103 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:43:22,104 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:43:22,104 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:43:22,104 | DEBUG: Data: None
2023-07-01 05:43:22,104 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:27,126 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9813
2023-07-01 05:43:27,127 | DEBUG: Response: 200 (9813 bytes)
2023-07-01 05:43:27,131 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:43:27,133 | DEBUG: Data: None
2023-07-01 05:43:27,133 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:43:27,505 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5001
2023-07-01 05:43:27,506 | DEBUG: Response: 200 (5001 bytes)
2023-07-01 05:43:27,507 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:43:27,507 | DEBUG: Data: None
2023-07-01 05:43:27,507 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:27,885 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 05:43:27,887 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 05:43:27,888 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:43:27,888 | DEBUG: Data: None
2023-07-01 05:43:27,888 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:28,236 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2397
2023-07-01 05:43:28,237 | DEBUG: Response: 200 (2397 bytes)
2023-07-01 05:43:28,238 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:43:28,238 | DEBUG: Data: None
2023-07-01 05:43:28,238 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:28,657 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6969
2023-07-01 05:43:28,658 | DEBUG: Response: 200 (6969 bytes)
2023-07-01 05:43:28,661 | INFO: 127.0.0.1 - - [01/Jul/2023 05:43:28] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:43:51,004 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:43:51,004 | DEBUG: Data: None
2023-07-01 05:43:51,005 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:43:51,365 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4399
2023-07-01 05:43:51,367 | DEBUG: Response: 200 (4399 bytes)
2023-07-01 05:43:51,368 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:43:51,368 | DEBUG: Data: None
2023-07-01 05:43:51,368 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:52,213 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8285
2023-07-01 05:43:52,215 | DEBUG: Response: 200 (8285 bytes)
2023-07-01 05:43:52,224 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:43:52,224 | DEBUG: Data: None
2023-07-01 05:43:52,225 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:52,640 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4787
2023-07-01 05:43:52,641 | DEBUG: Response: 200 (4787 bytes)
2023-07-01 05:43:52,643 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:43:52,643 | DEBUG: Data: None
2023-07-01 05:43:52,643 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:52,972 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:43:52,973 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:43:52,974 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:43:52,974 | DEBUG: Data: None
2023-07-01 05:43:52,974 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:53,290 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2203
2023-07-01 05:43:53,291 | DEBUG: Response: 200 (2203 bytes)
2023-07-01 05:43:53,292 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:43:53,292 | DEBUG: Data: None
2023-07-01 05:43:53,292 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:43:53,648 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4927
2023-07-01 05:43:53,649 | DEBUG: Response: 200 (4927 bytes)
2023-07-01 05:43:53,652 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:43:53,652 | DEBUG: Data: None
2023-07-01 05:43:53,652 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:54,016 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3821
2023-07-01 05:43:54,019 | DEBUG: Response: 200 (3821 bytes)
2023-07-01 05:43:54,022 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:43:54,022 | DEBUG: Data: None
2023-07-01 05:43:54,023 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:54,392 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3921
2023-07-01 05:43:54,393 | DEBUG: Response: 200 (3921 bytes)
2023-07-01 05:43:54,396 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:43:54,396 | DEBUG: Data: None
2023-07-01 05:43:54,396 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:54,711 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:43:54,713 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:43:54,714 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:43:54,715 | DEBUG: Data: None
2023-07-01 05:43:54,715 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:55,427 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9802
2023-07-01 05:43:55,429 | DEBUG: Response: 200 (9802 bytes)
2023-07-01 05:43:55,437 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:43:55,438 | DEBUG: Data: None
2023-07-01 05:43:55,438 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:43:55,807 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5001
2023-07-01 05:43:55,808 | DEBUG: Response: 200 (5001 bytes)
2023-07-01 05:43:55,809 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:43:55,809 | DEBUG: Data: None
2023-07-01 05:43:55,809 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:56,170 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 05:43:56,171 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 05:43:56,172 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:43:56,172 | DEBUG: Data: None
2023-07-01 05:43:56,172 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:56,547 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2398
2023-07-01 05:43:56,549 | DEBUG: Response: 200 (2398 bytes)
2023-07-01 05:43:56,552 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:43:56,552 | DEBUG: Data: None
2023-07-01 05:43:56,552 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:43:56,984 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6971
2023-07-01 05:43:56,986 | DEBUG: Response: 200 (6971 bytes)
2023-07-01 05:43:56,993 | INFO: 127.0.0.1 - - [01/Jul/2023 05:43:56] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:44:14,221 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:44:14,221 | DEBUG: Data: None
2023-07-01 05:44:14,221 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:44:14,564 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4396
2023-07-01 05:44:14,566 | DEBUG: Response: 200 (4396 bytes)
2023-07-01 05:44:14,568 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:44:14,568 | DEBUG: Data: None
2023-07-01 05:44:14,568 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:44:15,011 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8285
2023-07-01 05:44:15,014 | DEBUG: Response: 200 (8285 bytes)
2023-07-01 05:44:15,020 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:44:15,021 | DEBUG: Data: None
2023-07-01 05:44:15,021 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:44:15,735 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4775
2023-07-01 05:44:15,736 | DEBUG: Response: 200 (4775 bytes)
2023-07-01 05:44:15,739 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:44:15,739 | DEBUG: Data: None
2023-07-01 05:44:15,739 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:44:16,071 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:44:16,072 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:44:16,073 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:44:16,073 | DEBUG: Data: None
2023-07-01 05:44:16,073 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:44:16,402 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2203
2023-07-01 05:44:16,403 | DEBUG: Response: 200 (2203 bytes)
2023-07-01 05:44:16,404 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:44:16,404 | DEBUG: Data: None
2023-07-01 05:44:16,404 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:44:16,779 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4889
2023-07-01 05:44:16,781 | DEBUG: Response: 200 (4889 bytes)
2023-07-01 05:44:16,783 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:44:16,783 | DEBUG: Data: None
2023-07-01 05:44:16,783 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:44:17,161 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3921
2023-07-01 05:44:17,165 | DEBUG: Response: 200 (3921 bytes)
2023-07-01 05:44:17,168 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:44:17,169 | DEBUG: Data: None
2023-07-01 05:44:17,169 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:44:17,918 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3823
2023-07-01 05:44:17,919 | DEBUG: Response: 200 (3823 bytes)
2023-07-01 05:44:17,921 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:44:17,921 | DEBUG: Data: None
2023-07-01 05:44:17,921 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:44:18,290 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:44:18,291 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:44:18,292 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:44:18,292 | DEBUG: Data: None
2023-07-01 05:44:18,292 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:44:19,060 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9798
2023-07-01 05:44:19,062 | DEBUG: Response: 200 (9798 bytes)
2023-07-01 05:44:19,071 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:44:19,071 | DEBUG: Data: None
2023-07-01 05:44:19,071 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:44:19,488 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5001
2023-07-01 05:44:19,489 | DEBUG: Response: 200 (5001 bytes)
2023-07-01 05:44:19,490 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:44:19,490 | DEBUG: Data: None
2023-07-01 05:44:19,490 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:44:19,856 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 05:44:19,857 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 05:44:19,859 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:44:19,860 | DEBUG: Data: None
2023-07-01 05:44:19,860 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:44:20,208 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2401
2023-07-01 05:44:20,209 | DEBUG: Response: 200 (2401 bytes)
2023-07-01 05:44:20,209 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:44:20,210 | DEBUG: Data: None
2023-07-01 05:44:20,210 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:44:20,590 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6970
2023-07-01 05:44:20,591 | DEBUG: Response: 200 (6970 bytes)
2023-07-01 05:44:20,596 | INFO: 127.0.0.1 - - [01/Jul/2023 05:44:20] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:44:33,425 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:44:33,425 | DEBUG: Data: None
2023-07-01 05:44:33,425 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:44:33,771 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4391
2023-07-01 05:44:33,773 | DEBUG: Response: 200 (4391 bytes)
2023-07-01 05:44:33,775 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:44:33,775 | DEBUG: Data: None
2023-07-01 05:44:33,775 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:44:34,256 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8282
2023-07-01 05:44:34,257 | DEBUG: Response: 200 (8282 bytes)
2023-07-01 05:44:34,265 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:44:34,266 | DEBUG: Data: None
2023-07-01 05:44:34,266 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:44:34,600 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4785
2023-07-01 05:44:34,602 | DEBUG: Response: 200 (4785 bytes)
2023-07-01 05:44:34,604 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:44:34,604 | DEBUG: Data: None
2023-07-01 05:44:34,604 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:44:34,933 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:44:34,935 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:44:34,936 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:44:34,936 | DEBUG: Data: None
2023-07-01 05:44:34,936 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:44:35,284 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2200
2023-07-01 05:44:35,286 | DEBUG: Response: 200 (2200 bytes)
2023-07-01 05:44:35,287 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:44:35,287 | DEBUG: Data: None
2023-07-01 05:44:35,287 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:44:35,641 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4921
2023-07-01 05:44:35,642 | DEBUG: Response: 200 (4921 bytes)
2023-07-01 05:44:35,645 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:44:35,645 | DEBUG: Data: None
2023-07-01 05:44:35,645 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:44:36,021 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3921
2023-07-01 05:44:36,022 | DEBUG: Response: 200 (3921 bytes)
2023-07-01 05:44:36,024 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:44:36,024 | DEBUG: Data: None
2023-07-01 05:44:36,024 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:44:36,393 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3823
2023-07-01 05:44:36,395 | DEBUG: Response: 200 (3823 bytes)
2023-07-01 05:44:36,396 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:44:36,396 | DEBUG: Data: None
2023-07-01 05:44:36,397 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:44:36,734 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:44:36,736 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:44:36,737 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:44:36,737 | DEBUG: Data: None
2023-07-01 05:44:36,737 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:44:37,228 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9798
2023-07-01 05:44:37,231 | DEBUG: Response: 200 (9798 bytes)
2023-07-01 05:44:37,237 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:44:37,237 | DEBUG: Data: None
2023-07-01 05:44:37,237 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:44:37,589 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4994
2023-07-01 05:44:37,590 | DEBUG: Response: 200 (4994 bytes)
2023-07-01 05:44:37,591 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:44:37,591 | DEBUG: Data: None
2023-07-01 05:44:37,591 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:44:37,987 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 05:44:37,988 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 05:44:37,989 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:44:37,989 | DEBUG: Data: None
2023-07-01 05:44:37,989 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:44:38,388 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2397
2023-07-01 05:44:38,389 | DEBUG: Response: 200 (2397 bytes)
2023-07-01 05:44:38,389 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:44:38,389 | DEBUG: Data: None
2023-07-01 05:44:38,390 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:44:38,795 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6966
2023-07-01 05:44:38,796 | DEBUG: Response: 200 (6966 bytes)
2023-07-01 05:44:38,800 | INFO: 127.0.0.1 - - [01/Jul/2023 05:44:38] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:44:58,076 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:44:58,076 | DEBUG: Data: None
2023-07-01 05:44:58,076 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:44:59,448 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4401
2023-07-01 05:44:59,450 | DEBUG: Response: 200 (4401 bytes)
2023-07-01 05:44:59,451 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:44:59,451 | DEBUG: Data: None
2023-07-01 05:44:59,451 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:44:59,979 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8278
2023-07-01 05:44:59,981 | DEBUG: Response: 200 (8278 bytes)
2023-07-01 05:44:59,986 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:44:59,986 | DEBUG: Data: None
2023-07-01 05:44:59,986 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:45:00,352 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4788
2023-07-01 05:45:00,354 | DEBUG: Response: 200 (4788 bytes)
2023-07-01 05:45:00,357 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:45:00,357 | DEBUG: Data: None
2023-07-01 05:45:00,357 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:45:00,705 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:45:00,707 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:45:00,709 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:45:00,709 | DEBUG: Data: None
2023-07-01 05:45:00,709 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:45:01,030 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2203
2023-07-01 05:45:01,033 | DEBUG: Response: 200 (2203 bytes)
2023-07-01 05:45:01,034 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:45:01,034 | DEBUG: Data: None
2023-07-01 05:45:01,034 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:45:01,387 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4902
2023-07-01 05:45:01,388 | DEBUG: Response: 200 (4902 bytes)
2023-07-01 05:45:01,390 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:45:01,390 | DEBUG: Data: None
2023-07-01 05:45:01,390 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:45:02,108 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3824
2023-07-01 05:45:02,109 | DEBUG: Response: 200 (3824 bytes)
2023-07-01 05:45:02,113 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:45:02,113 | DEBUG: Data: None
2023-07-01 05:45:02,113 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:45:02,500 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3921
2023-07-01 05:45:02,502 | DEBUG: Response: 200 (3921 bytes)
2023-07-01 05:45:02,504 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:45:02,504 | DEBUG: Data: None
2023-07-01 05:45:02,504 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:45:02,870 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:45:02,872 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:45:02,873 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:45:02,873 | DEBUG: Data: None
2023-07-01 05:45:02,873 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:45:03,350 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9809
2023-07-01 05:45:03,353 | DEBUG: Response: 200 (9809 bytes)
2023-07-01 05:45:03,359 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:45:03,360 | DEBUG: Data: None
2023-07-01 05:45:03,360 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:45:03,693 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4997
2023-07-01 05:45:03,695 | DEBUG: Response: 200 (4997 bytes)
2023-07-01 05:45:03,697 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:45:03,697 | DEBUG: Data: None
2023-07-01 05:45:03,698 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:45:04,025 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 05:45:04,026 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 05:45:04,027 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:45:04,027 | DEBUG: Data: None
2023-07-01 05:45:04,027 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:45:04,371 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2402
2023-07-01 05:45:04,372 | DEBUG: Response: 200 (2402 bytes)
2023-07-01 05:45:04,373 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:45:04,373 | DEBUG: Data: None
2023-07-01 05:45:04,373 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:45:04,764 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6967
2023-07-01 05:45:04,765 | DEBUG: Response: 200 (6967 bytes)
2023-07-01 05:45:04,768 | INFO: 127.0.0.1 - - [01/Jul/2023 05:45:04] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:45:27,491 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:45:27,492 | DEBUG: Data: None
2023-07-01 05:45:27,492 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:45:27,958 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4399
2023-07-01 05:45:27,959 | DEBUG: Response: 200 (4399 bytes)
2023-07-01 05:45:27,961 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:45:27,961 | DEBUG: Data: None
2023-07-01 05:45:27,961 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:45:28,473 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8279
2023-07-01 05:45:28,475 | DEBUG: Response: 200 (8279 bytes)
2023-07-01 05:45:28,482 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:45:28,483 | DEBUG: Data: None
2023-07-01 05:45:28,483 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:45:28,889 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4774
2023-07-01 05:45:28,890 | DEBUG: Response: 200 (4774 bytes)
2023-07-01 05:45:28,892 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:45:28,892 | DEBUG: Data: None
2023-07-01 05:45:28,892 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:45:29,250 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:45:29,252 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:45:29,253 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:45:29,253 | DEBUG: Data: None
2023-07-01 05:45:29,254 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:45:29,579 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2203
2023-07-01 05:45:29,581 | DEBUG: Response: 200 (2203 bytes)
2023-07-01 05:45:29,582 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:45:29,582 | DEBUG: Data: None
2023-07-01 05:45:29,582 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:45:30,164 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4902
2023-07-01 05:45:30,167 | DEBUG: Response: 200 (4902 bytes)
2023-07-01 05:45:30,170 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:45:30,170 | DEBUG: Data: None
2023-07-01 05:45:30,170 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:45:30,539 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3823
2023-07-01 05:45:30,539 | DEBUG: Response: 200 (3823 bytes)
2023-07-01 05:45:30,541 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:45:30,541 | DEBUG: Data: None
2023-07-01 05:45:30,541 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:45:30,915 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3922
2023-07-01 05:45:30,917 | DEBUG: Response: 200 (3922 bytes)
2023-07-01 05:45:30,922 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:45:30,922 | DEBUG: Data: None
2023-07-01 05:45:30,922 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:45:31,278 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:45:31,280 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:45:31,281 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:45:31,281 | DEBUG: Data: None
2023-07-01 05:45:31,282 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:45:31,759 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9808
2023-07-01 05:45:31,760 | DEBUG: Response: 200 (9808 bytes)
2023-07-01 05:45:31,770 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:45:31,770 | DEBUG: Data: None
2023-07-01 05:45:31,770 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:45:32,122 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4998
2023-07-01 05:45:32,123 | DEBUG: Response: 200 (4998 bytes)
2023-07-01 05:45:32,125 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:45:32,125 | DEBUG: Data: None
2023-07-01 05:45:32,126 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:45:32,476 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 05:45:32,477 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 05:45:32,480 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:45:32,480 | DEBUG: Data: None
2023-07-01 05:45:32,480 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:45:32,840 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2401
2023-07-01 05:45:32,841 | DEBUG: Response: 200 (2401 bytes)
2023-07-01 05:45:32,842 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:45:32,842 | DEBUG: Data: None
2023-07-01 05:45:32,842 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:45:34,160 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6969
2023-07-01 05:45:34,163 | DEBUG: Response: 200 (6969 bytes)
2023-07-01 05:45:34,170 | INFO: 127.0.0.1 - - [01/Jul/2023 05:45:34] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:47:19,073 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:47:19,073 | DEBUG: Data: None
2023-07-01 05:47:19,073 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:47:19,427 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4397
2023-07-01 05:47:19,429 | DEBUG: Response: 200 (4397 bytes)
2023-07-01 05:47:19,431 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:47:19,431 | DEBUG: Data: None
2023-07-01 05:47:19,431 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:47:20,247 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8275
2023-07-01 05:47:20,250 | DEBUG: Response: 200 (8275 bytes)
2023-07-01 05:47:20,254 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:47:20,254 | DEBUG: Data: None
2023-07-01 05:47:20,254 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:47:20,597 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4774
2023-07-01 05:47:20,599 | DEBUG: Response: 200 (4774 bytes)
2023-07-01 05:47:20,600 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:47:20,600 | DEBUG: Data: None
2023-07-01 05:47:20,600 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:47:20,930 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:47:20,932 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:47:20,933 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:47:20,933 | DEBUG: Data: None
2023-07-01 05:47:20,933 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:47:21,277 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2201
2023-07-01 05:47:21,279 | DEBUG: Response: 200 (2201 bytes)
2023-07-01 05:47:21,280 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:47:21,280 | DEBUG: Data: None
2023-07-01 05:47:21,280 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:47:21,623 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4889
2023-07-01 05:47:21,624 | DEBUG: Response: 200 (4889 bytes)
2023-07-01 05:47:21,626 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:47:21,626 | DEBUG: Data: None
2023-07-01 05:47:21,626 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:47:22,024 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3922
2023-07-01 05:47:22,025 | DEBUG: Response: 200 (3922 bytes)
2023-07-01 05:47:22,028 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:47:22,028 | DEBUG: Data: None
2023-07-01 05:47:22,028 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:47:22,380 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3822
2023-07-01 05:47:22,381 | DEBUG: Response: 200 (3822 bytes)
2023-07-01 05:47:22,383 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:47:22,383 | DEBUG: Data: None
2023-07-01 05:47:22,383 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:47:22,746 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:47:22,748 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:47:22,749 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:47:22,749 | DEBUG: Data: None
2023-07-01 05:47:22,749 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:47:23,189 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9790
2023-07-01 05:47:23,191 | DEBUG: Response: 200 (9790 bytes)
2023-07-01 05:47:23,197 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:47:23,198 | DEBUG: Data: None
2023-07-01 05:47:23,198 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:47:23,573 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5000
2023-07-01 05:47:23,574 | DEBUG: Response: 200 (5000 bytes)
2023-07-01 05:47:23,576 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:47:23,576 | DEBUG: Data: None
2023-07-01 05:47:23,577 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:47:23,915 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 05:47:23,916 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 05:47:23,918 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:47:23,918 | DEBUG: Data: None
2023-07-01 05:47:23,918 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:47:24,266 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2397
2023-07-01 05:47:24,267 | DEBUG: Response: 200 (2397 bytes)
2023-07-01 05:47:24,268 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:47:24,268 | DEBUG: Data: None
2023-07-01 05:47:24,268 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:47:24,649 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6976
2023-07-01 05:47:24,650 | DEBUG: Response: 200 (6976 bytes)
2023-07-01 05:47:24,656 | INFO: 127.0.0.1 - - [01/Jul/2023 05:47:24] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:47:36,002 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:47:36,002 | DEBUG: Data: None
2023-07-01 05:47:36,003 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:47:36,359 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4392
2023-07-01 05:47:36,361 | DEBUG: Response: 200 (4392 bytes)
2023-07-01 05:47:36,363 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:47:36,365 | DEBUG: Data: None
2023-07-01 05:47:36,365 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:47:37,295 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8281
2023-07-01 05:47:37,296 | DEBUG: Response: 200 (8281 bytes)
2023-07-01 05:47:37,302 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:47:37,302 | DEBUG: Data: None
2023-07-01 05:47:37,302 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:47:37,643 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4780
2023-07-01 05:47:37,645 | DEBUG: Response: 200 (4780 bytes)
2023-07-01 05:47:37,648 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:47:37,648 | DEBUG: Data: None
2023-07-01 05:47:37,648 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:47:37,994 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:47:37,996 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:47:37,996 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:47:37,996 | DEBUG: Data: None
2023-07-01 05:47:37,997 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:47:38,314 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2198
2023-07-01 05:47:38,315 | DEBUG: Response: 200 (2198 bytes)
2023-07-01 05:47:38,316 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:47:38,316 | DEBUG: Data: None
2023-07-01 05:47:38,316 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:47:38,771 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4913
2023-07-01 05:47:38,773 | DEBUG: Response: 200 (4913 bytes)
2023-07-01 05:47:38,776 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:47:38,776 | DEBUG: Data: None
2023-07-01 05:47:38,776 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:47:39,114 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3822
2023-07-01 05:47:39,115 | DEBUG: Response: 200 (3822 bytes)
2023-07-01 05:47:39,117 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:47:39,117 | DEBUG: Data: None
2023-07-01 05:47:39,117 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:47:39,494 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3921
2023-07-01 05:47:39,495 | DEBUG: Response: 200 (3921 bytes)
2023-07-01 05:47:39,497 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:47:39,497 | DEBUG: Data: None
2023-07-01 05:47:39,497 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:47:39,847 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:47:39,848 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:47:39,848 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:47:39,848 | DEBUG: Data: None
2023-07-01 05:47:39,848 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:47:40,359 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9806
2023-07-01 05:47:40,362 | DEBUG: Response: 200 (9806 bytes)
2023-07-01 05:47:40,366 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:47:40,366 | DEBUG: Data: None
2023-07-01 05:47:40,366 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:47:40,739 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5000
2023-07-01 05:47:40,741 | DEBUG: Response: 200 (5000 bytes)
2023-07-01 05:47:40,742 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:47:40,743 | DEBUG: Data: None
2023-07-01 05:47:40,743 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:47:41,129 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 05:47:41,130 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 05:47:41,131 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:47:41,132 | DEBUG: Data: None
2023-07-01 05:47:41,132 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:47:41,487 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2401
2023-07-01 05:47:41,489 | DEBUG: Response: 200 (2401 bytes)
2023-07-01 05:47:41,491 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:47:41,491 | DEBUG: Data: None
2023-07-01 05:47:41,491 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:47:41,883 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6969
2023-07-01 05:47:41,884 | DEBUG: Response: 200 (6969 bytes)
2023-07-01 05:47:41,889 | INFO: 127.0.0.1 - - [01/Jul/2023 05:47:41] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:48:15,656 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:48:15,657 | DEBUG: Data: None
2023-07-01 05:48:15,657 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:48:16,028 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4400
2023-07-01 05:48:16,029 | DEBUG: Response: 200 (4400 bytes)
2023-07-01 05:48:16,031 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:48:16,031 | DEBUG: Data: None
2023-07-01 05:48:16,031 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:16,813 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8286
2023-07-01 05:48:16,815 | DEBUG: Response: 200 (8286 bytes)
2023-07-01 05:48:16,822 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:48:16,822 | DEBUG: Data: None
2023-07-01 05:48:16,822 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:17,163 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4774
2023-07-01 05:48:17,164 | DEBUG: Response: 200 (4774 bytes)
2023-07-01 05:48:17,166 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:48:17,166 | DEBUG: Data: None
2023-07-01 05:48:17,166 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:17,516 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:48:17,518 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:48:17,520 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:48:17,520 | DEBUG: Data: None
2023-07-01 05:48:17,520 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:17,853 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2196
2023-07-01 05:48:17,854 | DEBUG: Response: 200 (2196 bytes)
2023-07-01 05:48:17,856 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:48:17,857 | DEBUG: Data: None
2023-07-01 05:48:17,857 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:48:18,605 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4895
2023-07-01 05:48:18,608 | DEBUG: Response: 200 (4895 bytes)
2023-07-01 05:48:18,610 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:48:18,610 | DEBUG: Data: None
2023-07-01 05:48:18,610 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:19,058 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3922
2023-07-01 05:48:19,060 | DEBUG: Response: 200 (3922 bytes)
2023-07-01 05:48:19,063 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:48:19,063 | DEBUG: Data: None
2023-07-01 05:48:19,063 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:19,424 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3822
2023-07-01 05:48:19,427 | DEBUG: Response: 200 (3822 bytes)
2023-07-01 05:48:19,429 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:48:19,429 | DEBUG: Data: None
2023-07-01 05:48:19,429 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:19,766 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:48:19,768 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:48:19,769 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:48:19,769 | DEBUG: Data: None
2023-07-01 05:48:19,769 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:20,228 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9796
2023-07-01 05:48:20,230 | DEBUG: Response: 200 (9796 bytes)
2023-07-01 05:48:20,234 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:48:20,234 | DEBUG: Data: None
2023-07-01 05:48:20,234 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:48:20,592 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4994
2023-07-01 05:48:20,595 | DEBUG: Response: 200 (4994 bytes)
2023-07-01 05:48:20,597 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:48:20,597 | DEBUG: Data: None
2023-07-01 05:48:20,597 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:20,976 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 05:48:20,977 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 05:48:20,979 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:48:20,979 | DEBUG: Data: None
2023-07-01 05:48:20,979 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:21,361 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2397
2023-07-01 05:48:21,363 | DEBUG: Response: 200 (2397 bytes)
2023-07-01 05:48:21,364 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:48:21,364 | DEBUG: Data: None
2023-07-01 05:48:21,364 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:21,798 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6966
2023-07-01 05:48:21,799 | DEBUG: Response: 200 (6966 bytes)
2023-07-01 05:48:21,804 | INFO: 127.0.0.1 - - [01/Jul/2023 05:48:21] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:48:34,067 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:48:34,067 | DEBUG: Data: None
2023-07-01 05:48:34,067 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:48:34,514 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4395
2023-07-01 05:48:34,515 | DEBUG: Response: 200 (4395 bytes)
2023-07-01 05:48:34,516 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:48:34,516 | DEBUG: Data: None
2023-07-01 05:48:34,517 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:35,018 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8286
2023-07-01 05:48:35,020 | DEBUG: Response: 200 (8286 bytes)
2023-07-01 05:48:35,027 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:48:35,028 | DEBUG: Data: None
2023-07-01 05:48:35,028 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:35,392 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4791
2023-07-01 05:48:35,394 | DEBUG: Response: 200 (4791 bytes)
2023-07-01 05:48:35,399 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:48:35,399 | DEBUG: Data: None
2023-07-01 05:48:35,399 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:36,025 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:48:36,027 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:48:36,029 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:48:36,029 | DEBUG: Data: None
2023-07-01 05:48:36,029 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:36,360 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2198
2023-07-01 05:48:36,361 | DEBUG: Response: 200 (2198 bytes)
2023-07-01 05:48:36,363 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:48:36,363 | DEBUG: Data: None
2023-07-01 05:48:36,363 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:48:36,696 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4920
2023-07-01 05:48:36,698 | DEBUG: Response: 200 (4920 bytes)
2023-07-01 05:48:36,699 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:48:36,699 | DEBUG: Data: None
2023-07-01 05:48:36,699 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:37,125 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3823
2023-07-01 05:48:37,126 | DEBUG: Response: 200 (3823 bytes)
2023-07-01 05:48:37,128 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:48:37,128 | DEBUG: Data: None
2023-07-01 05:48:37,129 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:37,496 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3921
2023-07-01 05:48:37,497 | DEBUG: Response: 200 (3921 bytes)
2023-07-01 05:48:37,499 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:48:37,499 | DEBUG: Data: None
2023-07-01 05:48:37,499 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:37,859 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:48:37,860 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:48:37,861 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:48:37,861 | DEBUG: Data: None
2023-07-01 05:48:37,861 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:38,341 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9804
2023-07-01 05:48:38,344 | DEBUG: Response: 200 (9804 bytes)
2023-07-01 05:48:38,348 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:48:38,348 | DEBUG: Data: None
2023-07-01 05:48:38,348 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:48:38,719 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4997
2023-07-01 05:48:38,720 | DEBUG: Response: 200 (4997 bytes)
2023-07-01 05:48:38,723 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:48:38,724 | DEBUG: Data: None
2023-07-01 05:48:38,724 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:39,086 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5032
2023-07-01 05:48:39,088 | DEBUG: Response: 200 (5032 bytes)
2023-07-01 05:48:39,091 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:48:39,091 | DEBUG: Data: None
2023-07-01 05:48:39,092 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:39,458 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2397
2023-07-01 05:48:39,459 | DEBUG: Response: 200 (2397 bytes)
2023-07-01 05:48:39,460 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:48:39,461 | DEBUG: Data: None
2023-07-01 05:48:39,461 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:39,839 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6962
2023-07-01 05:48:39,842 | DEBUG: Response: 200 (6962 bytes)
2023-07-01 05:48:39,846 | INFO: 127.0.0.1 - - [01/Jul/2023 05:48:39] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:48:52,522 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:48:52,523 | DEBUG: Data: None
2023-07-01 05:48:52,523 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:48:52,863 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4396
2023-07-01 05:48:52,866 | DEBUG: Response: 200 (4396 bytes)
2023-07-01 05:48:52,870 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:48:52,870 | DEBUG: Data: None
2023-07-01 05:48:52,870 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:53,370 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8284
2023-07-01 05:48:53,371 | DEBUG: Response: 200 (8284 bytes)
2023-07-01 05:48:53,376 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:48:53,376 | DEBUG: Data: None
2023-07-01 05:48:53,376 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:53,734 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4792
2023-07-01 05:48:53,736 | DEBUG: Response: 200 (4792 bytes)
2023-07-01 05:48:53,739 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:48:53,739 | DEBUG: Data: None
2023-07-01 05:48:53,739 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:54,069 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:48:54,070 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:48:54,074 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:48:54,074 | DEBUG: Data: None
2023-07-01 05:48:54,074 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:54,393 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2198
2023-07-01 05:48:54,394 | DEBUG: Response: 200 (2198 bytes)
2023-07-01 05:48:54,395 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:48:54,395 | DEBUG: Data: None
2023-07-01 05:48:54,395 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:48:54,961 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4901
2023-07-01 05:48:54,962 | DEBUG: Response: 200 (4901 bytes)
2023-07-01 05:48:54,963 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:48:54,963 | DEBUG: Data: None
2023-07-01 05:48:54,963 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:55,307 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3821
2023-07-01 05:48:55,309 | DEBUG: Response: 200 (3821 bytes)
2023-07-01 05:48:55,311 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:48:55,311 | DEBUG: Data: None
2023-07-01 05:48:55,311 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:55,725 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3921
2023-07-01 05:48:55,727 | DEBUG: Response: 200 (3921 bytes)
2023-07-01 05:48:55,728 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:48:55,728 | DEBUG: Data: None
2023-07-01 05:48:55,728 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:56,430 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:48:56,431 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:48:56,431 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:48:56,432 | DEBUG: Data: None
2023-07-01 05:48:56,432 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:57,100 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9803
2023-07-01 05:48:57,102 | DEBUG: Response: 200 (9803 bytes)
2023-07-01 05:48:57,109 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:48:57,109 | DEBUG: Data: None
2023-07-01 05:48:57,109 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:48:57,469 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4997
2023-07-01 05:48:57,471 | DEBUG: Response: 200 (4997 bytes)
2023-07-01 05:48:57,473 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:48:57,474 | DEBUG: Data: None
2023-07-01 05:48:57,474 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:57,847 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5032
2023-07-01 05:48:57,848 | DEBUG: Response: 200 (5032 bytes)
2023-07-01 05:48:57,851 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:48:57,851 | DEBUG: Data: None
2023-07-01 05:48:57,851 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:58,196 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2397
2023-07-01 05:48:58,197 | DEBUG: Response: 200 (2397 bytes)
2023-07-01 05:48:58,199 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:48:58,199 | DEBUG: Data: None
2023-07-01 05:48:58,199 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:48:58,580 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6974
2023-07-01 05:48:58,581 | DEBUG: Response: 200 (6974 bytes)
2023-07-01 05:48:58,588 | INFO: 127.0.0.1 - - [01/Jul/2023 05:48:58] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:49:08,814 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:49:08,814 | DEBUG: Data: None
2023-07-01 05:49:08,814 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:49:09,177 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4396
2023-07-01 05:49:09,179 | DEBUG: Response: 200 (4396 bytes)
2023-07-01 05:49:09,182 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:49:09,182 | DEBUG: Data: None
2023-07-01 05:49:09,182 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:49:09,622 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8272
2023-07-01 05:49:09,623 | DEBUG: Response: 200 (8272 bytes)
2023-07-01 05:49:09,629 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:49:09,629 | DEBUG: Data: None
2023-07-01 05:49:09,629 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:49:09,997 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4787
2023-07-01 05:49:09,998 | DEBUG: Response: 200 (4787 bytes)
2023-07-01 05:49:10,002 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:49:10,002 | DEBUG: Data: None
2023-07-01 05:49:10,002 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:49:10,372 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:49:10,374 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:49:10,375 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:49:10,375 | DEBUG: Data: None
2023-07-01 05:49:10,375 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:49:10,680 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2202
2023-07-01 05:49:10,681 | DEBUG: Response: 200 (2202 bytes)
2023-07-01 05:49:10,682 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:49:10,683 | DEBUG: Data: None
2023-07-01 05:49:10,683 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:49:11,041 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4902
2023-07-01 05:49:11,042 | DEBUG: Response: 200 (4902 bytes)
2023-07-01 05:49:11,044 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:49:11,044 | DEBUG: Data: None
2023-07-01 05:49:11,044 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:49:11,405 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3821
2023-07-01 05:49:11,407 | DEBUG: Response: 200 (3821 bytes)
2023-07-01 05:49:11,409 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:49:11,409 | DEBUG: Data: None
2023-07-01 05:49:11,409 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:49:11,778 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3915
2023-07-01 05:49:11,780 | DEBUG: Response: 200 (3915 bytes)
2023-07-01 05:49:11,782 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:49:11,782 | DEBUG: Data: None
2023-07-01 05:49:11,783 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:49:12,102 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:49:12,104 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:49:12,105 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:49:12,106 | DEBUG: Data: None
2023-07-01 05:49:12,106 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:49:12,543 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9791
2023-07-01 05:49:12,545 | DEBUG: Response: 200 (9791 bytes)
2023-07-01 05:49:12,549 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:49:12,549 | DEBUG: Data: None
2023-07-01 05:49:12,550 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:49:12,883 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4997
2023-07-01 05:49:12,885 | DEBUG: Response: 200 (4997 bytes)
2023-07-01 05:49:12,887 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:49:12,887 | DEBUG: Data: None
2023-07-01 05:49:12,887 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:49:13,251 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 05:49:13,254 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 05:49:13,256 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:49:13,256 | DEBUG: Data: None
2023-07-01 05:49:13,256 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:49:16,343 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2396
2023-07-01 05:49:16,345 | DEBUG: Response: 200 (2396 bytes)
2023-07-01 05:49:16,346 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:49:16,346 | DEBUG: Data: None
2023-07-01 05:49:16,346 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:49:16,739 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6967
2023-07-01 05:49:16,741 | DEBUG: Response: 200 (6967 bytes)
2023-07-01 05:49:16,744 | INFO: 127.0.0.1 - - [01/Jul/2023 05:49:16] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:49:26,065 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:49:26,065 | DEBUG: Data: None
2023-07-01 05:49:26,065 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:49:26,416 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4384
2023-07-01 05:49:26,418 | DEBUG: Response: 200 (4384 bytes)
2023-07-01 05:49:26,420 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:49:26,420 | DEBUG: Data: None
2023-07-01 05:49:26,420 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:49:26,943 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8282
2023-07-01 05:49:26,946 | DEBUG: Response: 200 (8282 bytes)
2023-07-01 05:49:26,953 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:49:26,953 | DEBUG: Data: None
2023-07-01 05:49:26,953 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:49:27,658 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4775
2023-07-01 05:49:27,659 | DEBUG: Response: 200 (4775 bytes)
2023-07-01 05:49:27,661 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:49:27,661 | DEBUG: Data: None
2023-07-01 05:49:27,661 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:49:27,971 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:49:27,972 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:49:27,973 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:49:27,973 | DEBUG: Data: None
2023-07-01 05:49:27,973 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:49:28,305 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2198
2023-07-01 05:49:28,306 | DEBUG: Response: 200 (2198 bytes)
2023-07-01 05:49:28,307 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:49:28,308 | DEBUG: Data: None
2023-07-01 05:49:28,308 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:49:28,672 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4893
2023-07-01 05:49:28,673 | DEBUG: Response: 200 (4893 bytes)
2023-07-01 05:49:28,674 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:49:28,674 | DEBUG: Data: None
2023-07-01 05:49:28,675 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:49:29,025 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3823
2023-07-01 05:49:29,026 | DEBUG: Response: 200 (3823 bytes)
2023-07-01 05:49:29,028 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:49:29,028 | DEBUG: Data: None
2023-07-01 05:49:29,028 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:49:29,374 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3921
2023-07-01 05:49:29,374 | DEBUG: Response: 200 (3921 bytes)
2023-07-01 05:49:29,376 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:49:29,376 | DEBUG: Data: None
2023-07-01 05:49:29,376 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:49:29,711 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:49:29,712 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:49:29,713 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:49:29,713 | DEBUG: Data: None
2023-07-01 05:49:29,714 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:49:30,381 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9789
2023-07-01 05:49:30,383 | DEBUG: Response: 200 (9789 bytes)
2023-07-01 05:49:30,389 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:49:30,389 | DEBUG: Data: None
2023-07-01 05:49:30,390 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:49:30,739 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4999
2023-07-01 05:49:30,740 | DEBUG: Response: 200 (4999 bytes)
2023-07-01 05:49:30,741 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:49:30,741 | DEBUG: Data: None
2023-07-01 05:49:30,741 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:49:31,108 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 05:49:31,109 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 05:49:31,110 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:49:31,110 | DEBUG: Data: None
2023-07-01 05:49:31,110 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:49:31,458 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2399
2023-07-01 05:49:31,460 | DEBUG: Response: 200 (2399 bytes)
2023-07-01 05:49:31,461 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:49:31,461 | DEBUG: Data: None
2023-07-01 05:49:31,461 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:49:31,824 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6976
2023-07-01 05:49:31,825 | DEBUG: Response: 200 (6976 bytes)
2023-07-01 05:49:31,829 | INFO: 127.0.0.1 - - [01/Jul/2023 05:49:31] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:50:13,994 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:50:13,994 | DEBUG: Data: None
2023-07-01 05:50:13,994 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:50:14,352 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4400
2023-07-01 05:50:14,353 | DEBUG: Response: 200 (4400 bytes)
2023-07-01 05:50:14,354 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:50:14,355 | DEBUG: Data: None
2023-07-01 05:50:14,355 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:50:14,818 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8365
2023-07-01 05:50:14,820 | DEBUG: Response: 200 (8365 bytes)
2023-07-01 05:50:14,825 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:50:14,825 | DEBUG: Data: None
2023-07-01 05:50:14,825 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:50:15,475 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4780
2023-07-01 05:50:15,476 | DEBUG: Response: 200 (4780 bytes)
2023-07-01 05:50:15,479 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:50:15,480 | DEBUG: Data: None
2023-07-01 05:50:15,480 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:50:15,810 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:50:15,812 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:50:15,813 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:50:15,813 | DEBUG: Data: None
2023-07-01 05:50:15,813 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:50:16,136 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2201
2023-07-01 05:50:16,137 | DEBUG: Response: 200 (2201 bytes)
2023-07-01 05:50:16,138 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:50:16,138 | DEBUG: Data: None
2023-07-01 05:50:16,138 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:50:16,495 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4927
2023-07-01 05:50:16,497 | DEBUG: Response: 200 (4927 bytes)
2023-07-01 05:50:16,499 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:50:16,499 | DEBUG: Data: None
2023-07-01 05:50:16,499 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:50:16,882 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3823
2023-07-01 05:50:16,884 | DEBUG: Response: 200 (3823 bytes)
2023-07-01 05:50:16,887 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:50:16,887 | DEBUG: Data: None
2023-07-01 05:50:16,887 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:50:17,288 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3916
2023-07-01 05:50:17,290 | DEBUG: Response: 200 (3916 bytes)
2023-07-01 05:50:17,292 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:50:17,292 | DEBUG: Data: None
2023-07-01 05:50:17,292 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:50:17,635 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:50:17,637 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:50:17,638 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:50:17,638 | DEBUG: Data: None
2023-07-01 05:50:17,638 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:50:18,331 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9806
2023-07-01 05:50:18,333 | DEBUG: Response: 200 (9806 bytes)
2023-07-01 05:50:18,339 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:50:18,339 | DEBUG: Data: None
2023-07-01 05:50:18,339 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:50:18,921 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4993
2023-07-01 05:50:18,922 | DEBUG: Response: 200 (4993 bytes)
2023-07-01 05:50:18,923 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:50:18,923 | DEBUG: Data: None
2023-07-01 05:50:18,923 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:50:19,286 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 05:50:19,287 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 05:50:19,288 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:50:19,289 | DEBUG: Data: None
2023-07-01 05:50:19,289 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:50:19,656 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2401
2023-07-01 05:50:19,657 | DEBUG: Response: 200 (2401 bytes)
2023-07-01 05:50:19,658 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:50:19,658 | DEBUG: Data: None
2023-07-01 05:50:19,658 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:50:20,024 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6972
2023-07-01 05:50:20,025 | DEBUG: Response: 200 (6972 bytes)
2023-07-01 05:50:20,032 | INFO: 127.0.0.1 - - [01/Jul/2023 05:50:20] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:55:47,184 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:55:47,184 | DEBUG: Data: None
2023-07-01 05:55:47,185 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:55:47,518 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4397
2023-07-01 05:55:47,520 | DEBUG: Response: 200 (4397 bytes)
2023-07-01 05:55:47,522 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:55:47,523 | DEBUG: Data: None
2023-07-01 05:55:47,523 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:55:47,979 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8494
2023-07-01 05:55:47,981 | DEBUG: Response: 200 (8494 bytes)
2023-07-01 05:55:47,994 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:55:47,995 | DEBUG: Data: None
2023-07-01 05:55:47,995 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:55:48,348 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4781
2023-07-01 05:55:48,350 | DEBUG: Response: 200 (4781 bytes)
2023-07-01 05:55:48,354 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:55:48,354 | DEBUG: Data: None
2023-07-01 05:55:48,355 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:55:48,699 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:55:48,703 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:55:48,706 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:55:48,706 | DEBUG: Data: None
2023-07-01 05:55:48,706 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:55:49,062 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2203
2023-07-01 05:55:49,064 | DEBUG: Response: 200 (2203 bytes)
2023-07-01 05:55:49,066 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:55:49,066 | DEBUG: Data: None
2023-07-01 05:55:49,066 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:55:49,432 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4927
2023-07-01 05:55:49,434 | DEBUG: Response: 200 (4927 bytes)
2023-07-01 05:55:49,438 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:55:49,438 | DEBUG: Data: None
2023-07-01 05:55:49,438 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:55:49,844 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3823
2023-07-01 05:55:49,847 | DEBUG: Response: 200 (3823 bytes)
2023-07-01 05:55:49,852 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:55:49,853 | DEBUG: Data: None
2023-07-01 05:55:49,853 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:55:50,530 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3921
2023-07-01 05:55:50,531 | DEBUG: Response: 200 (3921 bytes)
2023-07-01 05:55:50,534 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:55:50,534 | DEBUG: Data: None
2023-07-01 05:55:50,534 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:55:50,861 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:55:50,862 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:55:50,863 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:55:50,863 | DEBUG: Data: None
2023-07-01 05:55:50,863 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:55:51,319 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9792
2023-07-01 05:55:51,414 | DEBUG: Response: 200 (9792 bytes)
2023-07-01 05:55:51,419 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:55:51,419 | DEBUG: Data: None
2023-07-01 05:55:51,419 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:55:51,780 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4999
2023-07-01 05:55:51,781 | DEBUG: Response: 200 (4999 bytes)
2023-07-01 05:55:51,783 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:55:51,783 | DEBUG: Data: None
2023-07-01 05:55:51,783 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:55:52,147 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 05:55:52,149 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 05:55:52,152 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:55:52,152 | DEBUG: Data: None
2023-07-01 05:55:52,152 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:55:52,520 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2402
2023-07-01 05:55:52,522 | DEBUG: Response: 200 (2402 bytes)
2023-07-01 05:55:52,523 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:55:52,523 | DEBUG: Data: None
2023-07-01 05:55:52,523 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:55:52,913 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6967
2023-07-01 05:55:52,914 | DEBUG: Response: 200 (6967 bytes)
2023-07-01 05:55:52,918 | INFO: 127.0.0.1 - - [01/Jul/2023 05:55:52] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:56:54,249 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:56:54,250 | DEBUG: Data: None
2023-07-01 05:56:54,250 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:56:54,624 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4392
2023-07-01 05:56:54,628 | DEBUG: Response: 200 (4392 bytes)
2023-07-01 05:56:54,631 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:56:54,631 | DEBUG: Data: None
2023-07-01 05:56:54,631 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:56:59,656 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8500
2023-07-01 05:56:59,662 | DEBUG: Response: 200 (8500 bytes)
2023-07-01 05:56:59,668 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:56:59,668 | DEBUG: Data: None
2023-07-01 05:56:59,669 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:56:59,996 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4780
2023-07-01 05:56:59,998 | DEBUG: Response: 200 (4780 bytes)
2023-07-01 05:57:00,000 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:57:00,000 | DEBUG: Data: None
2023-07-01 05:57:00,000 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:57:00,308 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:57:00,309 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:57:00,310 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:57:00,310 | DEBUG: Data: None
2023-07-01 05:57:00,310 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:57:00,616 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2203
2023-07-01 05:57:00,617 | DEBUG: Response: 200 (2203 bytes)
2023-07-01 05:57:00,619 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:57:00,619 | DEBUG: Data: None
2023-07-01 05:57:00,619 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:57:00,989 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4925
2023-07-01 05:57:00,990 | DEBUG: Response: 200 (4925 bytes)
2023-07-01 05:57:00,991 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:57:00,991 | DEBUG: Data: None
2023-07-01 05:57:00,991 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:57:01,342 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3822
2023-07-01 05:57:01,343 | DEBUG: Response: 200 (3822 bytes)
2023-07-01 05:57:01,345 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:57:01,345 | DEBUG: Data: None
2023-07-01 05:57:01,345 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:57:01,729 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3922
2023-07-01 05:57:01,731 | DEBUG: Response: 200 (3922 bytes)
2023-07-01 05:57:01,733 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:57:01,733 | DEBUG: Data: None
2023-07-01 05:57:01,733 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:57:02,080 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:57:02,081 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:57:02,082 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:57:02,082 | DEBUG: Data: None
2023-07-01 05:57:02,083 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:57:02,738 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9800
2023-07-01 05:57:02,740 | DEBUG: Response: 200 (9800 bytes)
2023-07-01 05:57:02,745 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:57:02,746 | DEBUG: Data: None
2023-07-01 05:57:02,746 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:57:03,114 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4994
2023-07-01 05:57:03,149 | DEBUG: Response: 200 (4994 bytes)
2023-07-01 05:57:03,151 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:57:03,151 | DEBUG: Data: None
2023-07-01 05:57:03,151 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:57:03,493 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 05:57:03,494 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 05:57:03,496 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:57:03,496 | DEBUG: Data: None
2023-07-01 05:57:03,496 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:57:03,850 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2399
2023-07-01 05:57:03,851 | DEBUG: Response: 200 (2399 bytes)
2023-07-01 05:57:03,852 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:57:03,852 | DEBUG: Data: None
2023-07-01 05:57:03,852 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:57:04,518 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6975
2023-07-01 05:57:04,526 | DEBUG: Response: 200 (6975 bytes)
2023-07-01 05:57:04,529 | INFO: 127.0.0.1 - - [01/Jul/2023 05:57:04] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:57:20,862 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:57:20,862 | DEBUG: Data: None
2023-07-01 05:57:20,862 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:57:21,536 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4394
2023-07-01 05:57:21,538 | DEBUG: Response: 200 (4394 bytes)
2023-07-01 05:57:21,540 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:57:21,540 | DEBUG: Data: None
2023-07-01 05:57:21,541 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:57:22,057 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8499
2023-07-01 05:57:22,060 | DEBUG: Response: 200 (8499 bytes)
2023-07-01 05:57:22,070 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:57:22,071 | DEBUG: Data: None
2023-07-01 05:57:22,071 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:57:22,431 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4789
2023-07-01 05:57:22,432 | DEBUG: Response: 200 (4789 bytes)
2023-07-01 05:57:22,436 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:57:22,436 | DEBUG: Data: None
2023-07-01 05:57:22,436 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:57:22,794 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:57:22,795 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:57:22,796 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:57:22,796 | DEBUG: Data: None
2023-07-01 05:57:22,797 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:57:23,118 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2202
2023-07-01 05:57:23,121 | DEBUG: Response: 200 (2202 bytes)
2023-07-01 05:57:23,122 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:57:23,123 | DEBUG: Data: None
2023-07-01 05:57:23,123 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:57:23,507 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4928
2023-07-01 05:57:23,508 | DEBUG: Response: 200 (4928 bytes)
2023-07-01 05:57:23,509 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:57:23,509 | DEBUG: Data: None
2023-07-01 05:57:23,509 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:57:23,842 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3822
2023-07-01 05:57:23,843 | DEBUG: Response: 200 (3822 bytes)
2023-07-01 05:57:23,845 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:57:23,845 | DEBUG: Data: None
2023-07-01 05:57:23,845 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:57:24,214 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3921
2023-07-01 05:57:24,216 | DEBUG: Response: 200 (3921 bytes)
2023-07-01 05:57:24,219 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:57:24,219 | DEBUG: Data: None
2023-07-01 05:57:24,220 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:57:24,597 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:57:24,598 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:57:24,599 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:57:24,599 | DEBUG: Data: None
2023-07-01 05:57:24,600 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:57:25,071 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9778
2023-07-01 05:57:25,266 | DEBUG: Response: 200 (9778 bytes)
2023-07-01 05:57:25,272 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:57:25,272 | DEBUG: Data: None
2023-07-01 05:57:25,272 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:57:25,715 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4998
2023-07-01 05:57:25,718 | DEBUG: Response: 200 (4998 bytes)
2023-07-01 05:57:25,720 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:57:25,721 | DEBUG: Data: None
2023-07-01 05:57:25,721 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:57:26,175 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 05:57:26,176 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 05:57:26,178 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:57:26,178 | DEBUG: Data: None
2023-07-01 05:57:26,178 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:57:26,530 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2398
2023-07-01 05:57:26,532 | DEBUG: Response: 200 (2398 bytes)
2023-07-01 05:57:26,533 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:57:26,533 | DEBUG: Data: None
2023-07-01 05:57:26,533 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:57:26,921 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6968
2023-07-01 05:57:26,923 | DEBUG: Response: 200 (6968 bytes)
2023-07-01 05:57:26,925 | INFO: 127.0.0.1 - - [01/Jul/2023 05:57:26] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:58:50,352 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:58:50,353 | DEBUG: Data: None
2023-07-01 05:58:50,353 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:58:50,795 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4391
2023-07-01 05:58:50,796 | DEBUG: Response: 200 (4391 bytes)
2023-07-01 05:58:50,797 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:58:50,797 | DEBUG: Data: None
2023-07-01 05:58:50,798 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:58:51,303 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8491
2023-07-01 05:58:51,305 | DEBUG: Response: 200 (8491 bytes)
2023-07-01 05:58:51,310 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:58:51,310 | DEBUG: Data: None
2023-07-01 05:58:51,310 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:58:51,672 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4792
2023-07-01 05:58:51,673 | DEBUG: Response: 200 (4792 bytes)
2023-07-01 05:58:51,675 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:58:51,675 | DEBUG: Data: None
2023-07-01 05:58:51,676 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:58:51,984 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:58:51,985 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:58:51,986 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:58:51,986 | DEBUG: Data: None
2023-07-01 05:58:51,986 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:58:52,553 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2203
2023-07-01 05:58:52,554 | DEBUG: Response: 200 (2203 bytes)
2023-07-01 05:58:52,555 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:58:52,555 | DEBUG: Data: None
2023-07-01 05:58:52,555 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:58:52,913 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4920
2023-07-01 05:58:52,914 | DEBUG: Response: 200 (4920 bytes)
2023-07-01 05:58:52,915 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:58:52,915 | DEBUG: Data: None
2023-07-01 05:58:52,915 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:58:53,278 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3822
2023-07-01 05:58:53,280 | DEBUG: Response: 200 (3822 bytes)
2023-07-01 05:58:53,282 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:58:53,282 | DEBUG: Data: None
2023-07-01 05:58:53,282 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:58:53,673 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3921
2023-07-01 05:58:53,674 | DEBUG: Response: 200 (3921 bytes)
2023-07-01 05:58:53,675 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:58:53,676 | DEBUG: Data: None
2023-07-01 05:58:53,676 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:58:54,022 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:58:54,024 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:58:54,026 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:58:54,026 | DEBUG: Data: None
2023-07-01 05:58:54,026 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:58:54,540 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9796
2023-07-01 05:58:54,544 | DEBUG: Response: 200 (9796 bytes)
2023-07-01 05:58:54,549 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:58:54,549 | DEBUG: Data: None
2023-07-01 05:58:54,549 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:58:54,905 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4999
2023-07-01 05:58:54,906 | DEBUG: Response: 200 (4999 bytes)
2023-07-01 05:58:54,907 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:58:54,907 | DEBUG: Data: None
2023-07-01 05:58:54,907 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:58:55,595 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 05:58:55,596 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 05:58:55,598 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:58:55,598 | DEBUG: Data: None
2023-07-01 05:58:55,598 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:58:55,959 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2398
2023-07-01 05:58:55,963 | DEBUG: Response: 200 (2398 bytes)
2023-07-01 05:58:55,964 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:58:55,964 | DEBUG: Data: None
2023-07-01 05:58:55,964 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:58:56,372 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6959
2023-07-01 05:58:56,373 | DEBUG: Response: 200 (6959 bytes)
2023-07-01 05:58:56,376 | INFO: 127.0.0.1 - - [01/Jul/2023 05:58:56] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:59:07,790 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:59:07,791 | DEBUG: Data: None
2023-07-01 05:59:07,792 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:59:08,153 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4396
2023-07-01 05:59:08,156 | DEBUG: Response: 200 (4396 bytes)
2023-07-01 05:59:08,158 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:59:08,159 | DEBUG: Data: None
2023-07-01 05:59:08,159 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:08,662 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8496
2023-07-01 05:59:08,663 | DEBUG: Response: 200 (8496 bytes)
2023-07-01 05:59:08,670 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:59:08,671 | DEBUG: Data: None
2023-07-01 05:59:08,671 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:09,024 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4798
2023-07-01 05:59:09,028 | DEBUG: Response: 200 (4798 bytes)
2023-07-01 05:59:09,031 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:59:09,031 | DEBUG: Data: None
2023-07-01 05:59:09,031 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:09,372 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:59:09,375 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:59:09,376 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:59:09,376 | DEBUG: Data: None
2023-07-01 05:59:09,376 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:09,687 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2203
2023-07-01 05:59:09,689 | DEBUG: Response: 200 (2203 bytes)
2023-07-01 05:59:09,691 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:59:09,691 | DEBUG: Data: None
2023-07-01 05:59:09,691 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:59:10,065 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4927
2023-07-01 05:59:10,067 | DEBUG: Response: 200 (4927 bytes)
2023-07-01 05:59:10,069 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:59:10,069 | DEBUG: Data: None
2023-07-01 05:59:10,069 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:10,415 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3822
2023-07-01 05:59:10,417 | DEBUG: Response: 200 (3822 bytes)
2023-07-01 05:59:10,420 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:59:10,420 | DEBUG: Data: None
2023-07-01 05:59:10,420 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:10,801 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3920
2023-07-01 05:59:10,802 | DEBUG: Response: 200 (3920 bytes)
2023-07-01 05:59:10,805 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:59:10,806 | DEBUG: Data: None
2023-07-01 05:59:10,806 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:11,149 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:59:11,151 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:59:11,152 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:59:11,152 | DEBUG: Data: None
2023-07-01 05:59:11,152 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:11,658 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9793
2023-07-01 05:59:11,661 | DEBUG: Response: 200 (9793 bytes)
2023-07-01 05:59:11,665 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:59:11,665 | DEBUG: Data: None
2023-07-01 05:59:11,665 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:59:12,029 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4994
2023-07-01 05:59:12,030 | DEBUG: Response: 200 (4994 bytes)
2023-07-01 05:59:12,031 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:59:12,031 | DEBUG: Data: None
2023-07-01 05:59:12,031 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:12,383 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 05:59:12,385 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 05:59:12,387 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:59:12,387 | DEBUG: Data: None
2023-07-01 05:59:12,387 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:12,759 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2401
2023-07-01 05:59:12,760 | DEBUG: Response: 200 (2401 bytes)
2023-07-01 05:59:12,761 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:59:12,761 | DEBUG: Data: None
2023-07-01 05:59:12,761 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:13,167 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6972
2023-07-01 05:59:13,170 | DEBUG: Response: 200 (6972 bytes)
2023-07-01 05:59:13,178 | INFO: 127.0.0.1 - - [01/Jul/2023 05:59:13] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:59:25,255 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:59:25,255 | DEBUG: Data: None
2023-07-01 05:59:25,255 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:59:26,561 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4392
2023-07-01 05:59:26,563 | DEBUG: Response: 200 (4392 bytes)
2023-07-01 05:59:26,564 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:59:26,564 | DEBUG: Data: None
2023-07-01 05:59:26,564 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:27,228 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8492
2023-07-01 05:59:27,230 | DEBUG: Response: 200 (8492 bytes)
2023-07-01 05:59:27,239 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:59:27,239 | DEBUG: Data: None
2023-07-01 05:59:27,239 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:27,586 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4794
2023-07-01 05:59:27,587 | DEBUG: Response: 200 (4794 bytes)
2023-07-01 05:59:27,589 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:59:27,589 | DEBUG: Data: None
2023-07-01 05:59:27,589 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:27,934 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:59:27,936 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:59:27,937 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:59:27,937 | DEBUG: Data: None
2023-07-01 05:59:27,937 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:28,275 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2203
2023-07-01 05:59:28,276 | DEBUG: Response: 200 (2203 bytes)
2023-07-01 05:59:28,278 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:59:28,278 | DEBUG: Data: None
2023-07-01 05:59:28,278 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:59:28,638 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4921
2023-07-01 05:59:28,639 | DEBUG: Response: 200 (4921 bytes)
2023-07-01 05:59:28,640 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:59:28,640 | DEBUG: Data: None
2023-07-01 05:59:28,640 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:29,018 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3824
2023-07-01 05:59:29,019 | DEBUG: Response: 200 (3824 bytes)
2023-07-01 05:59:29,023 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:59:29,023 | DEBUG: Data: None
2023-07-01 05:59:29,024 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:29,400 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3922
2023-07-01 05:59:29,402 | DEBUG: Response: 200 (3922 bytes)
2023-07-01 05:59:29,407 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:59:29,408 | DEBUG: Data: None
2023-07-01 05:59:29,408 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:29,769 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:59:29,771 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:59:29,772 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:59:29,773 | DEBUG: Data: None
2023-07-01 05:59:29,773 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:30,224 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9787
2023-07-01 05:59:30,227 | DEBUG: Response: 200 (9787 bytes)
2023-07-01 05:59:30,233 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:59:30,233 | DEBUG: Data: None
2023-07-01 05:59:30,234 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:59:30,589 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4997
2023-07-01 05:59:30,592 | DEBUG: Response: 200 (4997 bytes)
2023-07-01 05:59:30,595 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:59:30,595 | DEBUG: Data: None
2023-07-01 05:59:30,595 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:30,944 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 05:59:30,947 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 05:59:30,950 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:59:30,950 | DEBUG: Data: None
2023-07-01 05:59:30,950 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:31,313 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2397
2023-07-01 05:59:31,315 | DEBUG: Response: 200 (2397 bytes)
2023-07-01 05:59:31,317 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:59:31,317 | DEBUG: Data: None
2023-07-01 05:59:31,317 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:31,714 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6970
2023-07-01 05:59:31,717 | DEBUG: Response: 200 (6970 bytes)
2023-07-01 05:59:31,723 | INFO: 127.0.0.1 - - [01/Jul/2023 05:59:31] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:59:31,744 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:59:31,745 | DEBUG: Data: None
2023-07-01 05:59:31,745 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:59:32,223 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4400
2023-07-01 05:59:32,226 | DEBUG: Response: 200 (4400 bytes)
2023-07-01 05:59:32,227 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:59:32,227 | DEBUG: Data: None
2023-07-01 05:59:32,227 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:32,685 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8493
2023-07-01 05:59:32,689 | DEBUG: Response: 200 (8493 bytes)
2023-07-01 05:59:32,693 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:59:32,693 | DEBUG: Data: None
2023-07-01 05:59:32,693 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:33,072 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4791
2023-07-01 05:59:33,074 | DEBUG: Response: 200 (4791 bytes)
2023-07-01 05:59:33,075 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:59:33,075 | DEBUG: Data: None
2023-07-01 05:59:33,075 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:33,443 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:59:33,445 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:59:33,446 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:59:33,446 | DEBUG: Data: None
2023-07-01 05:59:33,446 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:33,778 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2202
2023-07-01 05:59:33,779 | DEBUG: Response: 200 (2202 bytes)
2023-07-01 05:59:33,780 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:59:33,780 | DEBUG: Data: None
2023-07-01 05:59:33,781 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:59:34,185 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4927
2023-07-01 05:59:34,187 | DEBUG: Response: 200 (4927 bytes)
2023-07-01 05:59:34,189 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:59:34,189 | DEBUG: Data: None
2023-07-01 05:59:34,190 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:34,535 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3822
2023-07-01 05:59:34,537 | DEBUG: Response: 200 (3822 bytes)
2023-07-01 05:59:34,540 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:59:34,540 | DEBUG: Data: None
2023-07-01 05:59:34,541 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:34,884 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3921
2023-07-01 05:59:34,886 | DEBUG: Response: 200 (3921 bytes)
2023-07-01 05:59:34,889 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:59:34,889 | DEBUG: Data: None
2023-07-01 05:59:34,889 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:35,234 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:59:35,236 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:59:35,237 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:59:35,237 | DEBUG: Data: None
2023-07-01 05:59:35,237 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:35,929 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9779
2023-07-01 05:59:35,932 | DEBUG: Response: 200 (9779 bytes)
2023-07-01 05:59:35,937 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:59:35,937 | DEBUG: Data: None
2023-07-01 05:59:35,937 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:59:36,438 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4998
2023-07-01 05:59:36,440 | DEBUG: Response: 200 (4998 bytes)
2023-07-01 05:59:36,442 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:59:36,442 | DEBUG: Data: None
2023-07-01 05:59:36,442 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:36,800 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5032
2023-07-01 05:59:36,803 | DEBUG: Response: 200 (5032 bytes)
2023-07-01 05:59:36,804 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:59:36,804 | DEBUG: Data: None
2023-07-01 05:59:36,804 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:37,139 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2398
2023-07-01 05:59:37,141 | DEBUG: Response: 200 (2398 bytes)
2023-07-01 05:59:37,142 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:59:37,143 | DEBUG: Data: None
2023-07-01 05:59:37,143 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:37,498 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6967
2023-07-01 05:59:37,500 | DEBUG: Response: 200 (6967 bytes)
2023-07-01 05:59:37,505 | INFO: 127.0.0.1 - - [01/Jul/2023 05:59:37] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 05:59:47,970 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:59:47,971 | DEBUG: Data: None
2023-07-01 05:59:47,971 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:59:48,333 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4394
2023-07-01 05:59:48,337 | DEBUG: Response: 200 (4394 bytes)
2023-07-01 05:59:48,339 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 05:59:48,339 | DEBUG: Data: None
2023-07-01 05:59:48,339 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:48,796 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8492
2023-07-01 05:59:48,798 | DEBUG: Response: 200 (8492 bytes)
2023-07-01 05:59:48,806 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 05:59:48,807 | DEBUG: Data: None
2023-07-01 05:59:48,807 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:49,384 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4783
2023-07-01 05:59:49,387 | DEBUG: Response: 200 (4783 bytes)
2023-07-01 05:59:49,391 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:59:49,391 | DEBUG: Data: None
2023-07-01 05:59:49,391 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:49,732 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:59:49,733 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:59:49,734 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 05:59:49,734 | DEBUG: Data: None
2023-07-01 05:59:49,734 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:50,045 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2203
2023-07-01 05:59:50,047 | DEBUG: Response: 200 (2203 bytes)
2023-07-01 05:59:50,049 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:59:50,049 | DEBUG: Data: None
2023-07-01 05:59:50,049 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:59:50,423 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4921
2023-07-01 05:59:50,424 | DEBUG: Response: 200 (4921 bytes)
2023-07-01 05:59:50,425 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 05:59:50,425 | DEBUG: Data: None
2023-07-01 05:59:50,425 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:50,798 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3823
2023-07-01 05:59:50,800 | DEBUG: Response: 200 (3823 bytes)
2023-07-01 05:59:50,804 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 05:59:50,804 | DEBUG: Data: None
2023-07-01 05:59:50,804 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:51,208 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3921
2023-07-01 05:59:51,209 | DEBUG: Response: 200 (3921 bytes)
2023-07-01 05:59:51,211 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 05:59:51,211 | DEBUG: Data: None
2023-07-01 05:59:51,211 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:51,551 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 05:59:51,553 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 05:59:51,555 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 05:59:51,555 | DEBUG: Data: None
2023-07-01 05:59:51,555 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:52,158 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9794
2023-07-01 05:59:52,164 | DEBUG: Response: 200 (9794 bytes)
2023-07-01 05:59:52,171 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 05:59:52,171 | DEBUG: Data: None
2023-07-01 05:59:52,171 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 05:59:52,574 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4995
2023-07-01 05:59:52,574 | DEBUG: Response: 200 (4995 bytes)
2023-07-01 05:59:52,575 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 05:59:52,576 | DEBUG: Data: None
2023-07-01 05:59:52,576 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:53,056 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 05:59:53,058 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 05:59:53,060 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 05:59:53,060 | DEBUG: Data: None
2023-07-01 05:59:53,060 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:53,404 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2396
2023-07-01 05:59:53,406 | DEBUG: Response: 200 (2396 bytes)
2023-07-01 05:59:53,408 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 05:59:53,409 | DEBUG: Data: None
2023-07-01 05:59:53,409 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 05:59:53,775 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6978
2023-07-01 05:59:53,777 | DEBUG: Response: 200 (6978 bytes)
2023-07-01 05:59:53,780 | INFO: 127.0.0.1 - - [01/Jul/2023 05:59:53] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 06:00:02,605 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:00:02,605 | DEBUG: Data: None
2023-07-01 06:00:02,605 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:00:03,114 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4398
2023-07-01 06:00:03,116 | DEBUG: Response: 200 (4398 bytes)
2023-07-01 06:00:03,118 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 06:00:03,118 | DEBUG: Data: None
2023-07-01 06:00:03,118 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:03,627 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8487
2023-07-01 06:00:03,628 | DEBUG: Response: 200 (8487 bytes)
2023-07-01 06:00:03,635 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 06:00:03,635 | DEBUG: Data: None
2023-07-01 06:00:03,635 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:03,986 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4802
2023-07-01 06:00:03,988 | DEBUG: Response: 200 (4802 bytes)
2023-07-01 06:00:03,990 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:00:03,990 | DEBUG: Data: None
2023-07-01 06:00:03,990 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:04,326 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:00:04,327 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:00:04,328 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 06:00:04,328 | DEBUG: Data: None
2023-07-01 06:00:04,328 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:05,231 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2203
2023-07-01 06:00:05,232 | DEBUG: Response: 200 (2203 bytes)
2023-07-01 06:00:05,234 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:00:05,234 | DEBUG: Data: None
2023-07-01 06:00:05,234 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:00:05,588 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4920
2023-07-01 06:00:05,589 | DEBUG: Response: 200 (4920 bytes)
2023-07-01 06:00:05,591 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 06:00:05,591 | DEBUG: Data: None
2023-07-01 06:00:05,591 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:05,591 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 06:00:06,432 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3824
2023-07-01 06:00:06,434 | DEBUG: Response: 200 (3824 bytes)
2023-07-01 06:00:06,437 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 06:00:06,437 | DEBUG: Data: None
2023-07-01 06:00:06,438 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:06,438 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 06:00:07,340 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3921
2023-07-01 06:00:07,341 | DEBUG: Response: 200 (3921 bytes)
2023-07-01 06:00:07,342 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:00:07,343 | DEBUG: Data: None
2023-07-01 06:00:07,343 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:07,343 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 06:00:08,223 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:00:08,224 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:00:08,225 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 06:00:08,225 | DEBUG: Data: None
2023-07-01 06:00:08,226 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:08,226 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 06:00:09,195 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9776
2023-07-01 06:00:09,197 | DEBUG: Response: 200 (9776 bytes)
2023-07-01 06:00:09,204 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:00:09,205 | DEBUG: Data: None
2023-07-01 06:00:09,205 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:00:09,205 | DEBUG: Sleeping: 0.99 seconds prior to call
2023-07-01 06:00:10,565 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4995
2023-07-01 06:00:10,566 | DEBUG: Response: 200 (4995 bytes)
2023-07-01 06:00:10,569 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 06:00:10,569 | DEBUG: Data: None
2023-07-01 06:00:10,569 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:10,569 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 06:00:11,462 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 06:00:11,464 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 06:00:11,466 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 06:00:11,466 | DEBUG: Data: None
2023-07-01 06:00:11,466 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:11,466 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 06:00:12,674 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2399
2023-07-01 06:00:12,675 | DEBUG: Response: 200 (2399 bytes)
2023-07-01 06:00:12,676 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 06:00:12,676 | DEBUG: Data: None
2023-07-01 06:00:12,676 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:12,676 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 06:00:13,560 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6969
2023-07-01 06:00:13,562 | DEBUG: Response: 200 (6969 bytes)
2023-07-01 06:00:13,567 | INFO: 127.0.0.1 - - [01/Jul/2023 06:00:13] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 06:00:21,391 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:00:21,391 | DEBUG: Data: None
2023-07-01 06:00:21,391 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:00:21,710 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4400
2023-07-01 06:00:21,712 | DEBUG: Response: 200 (4400 bytes)
2023-07-01 06:00:21,715 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 06:00:21,715 | DEBUG: Data: None
2023-07-01 06:00:21,715 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:23,127 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8495
2023-07-01 06:00:23,129 | DEBUG: Response: 200 (8495 bytes)
2023-07-01 06:00:23,136 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 06:00:23,136 | DEBUG: Data: None
2023-07-01 06:00:23,136 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:23,511 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4793
2023-07-01 06:00:23,513 | DEBUG: Response: 200 (4793 bytes)
2023-07-01 06:00:23,516 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:00:23,516 | DEBUG: Data: None
2023-07-01 06:00:23,516 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:23,893 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:00:23,894 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:00:23,894 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 06:00:23,894 | DEBUG: Data: None
2023-07-01 06:00:23,894 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:24,209 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2200
2023-07-01 06:00:24,210 | DEBUG: Response: 200 (2200 bytes)
2023-07-01 06:00:24,212 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:00:24,212 | DEBUG: Data: None
2023-07-01 06:00:24,212 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:00:24,577 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4920
2023-07-01 06:00:24,579 | DEBUG: Response: 200 (4920 bytes)
2023-07-01 06:00:24,581 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 06:00:24,581 | DEBUG: Data: None
2023-07-01 06:00:24,582 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:24,926 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3824
2023-07-01 06:00:24,927 | DEBUG: Response: 200 (3824 bytes)
2023-07-01 06:00:24,929 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 06:00:24,929 | DEBUG: Data: None
2023-07-01 06:00:24,929 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:25,302 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3921
2023-07-01 06:00:25,304 | DEBUG: Response: 200 (3921 bytes)
2023-07-01 06:00:25,307 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:00:25,307 | DEBUG: Data: None
2023-07-01 06:00:25,307 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:25,642 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:00:25,643 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:00:25,644 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 06:00:25,644 | DEBUG: Data: None
2023-07-01 06:00:25,644 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:26,092 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9793
2023-07-01 06:00:26,096 | DEBUG: Response: 200 (9793 bytes)
2023-07-01 06:00:26,102 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:00:26,103 | DEBUG: Data: None
2023-07-01 06:00:26,103 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:00:26,453 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4999
2023-07-01 06:00:26,456 | DEBUG: Response: 200 (4999 bytes)
2023-07-01 06:00:26,458 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 06:00:26,458 | DEBUG: Data: None
2023-07-01 06:00:26,458 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:27,033 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5030
2023-07-01 06:00:27,036 | DEBUG: Response: 200 (5030 bytes)
2023-07-01 06:00:27,038 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 06:00:27,038 | DEBUG: Data: None
2023-07-01 06:00:27,039 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:27,412 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2399
2023-07-01 06:00:27,413 | DEBUG: Response: 200 (2399 bytes)
2023-07-01 06:00:27,415 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 06:00:27,415 | DEBUG: Data: None
2023-07-01 06:00:27,415 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:27,838 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6968
2023-07-01 06:00:27,839 | DEBUG: Response: 200 (6968 bytes)
2023-07-01 06:00:27,842 | INFO: 127.0.0.1 - - [01/Jul/2023 06:00:27] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 06:00:35,854 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:00:35,854 | DEBUG: Data: None
2023-07-01 06:00:35,854 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:00:36,214 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4403
2023-07-01 06:00:36,215 | DEBUG: Response: 200 (4403 bytes)
2023-07-01 06:00:36,217 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 06:00:36,217 | DEBUG: Data: None
2023-07-01 06:00:36,218 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:36,682 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8455
2023-07-01 06:00:36,684 | DEBUG: Response: 200 (8455 bytes)
2023-07-01 06:00:36,689 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 06:00:36,689 | DEBUG: Data: None
2023-07-01 06:00:36,689 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:37,049 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4783
2023-07-01 06:00:37,050 | DEBUG: Response: 200 (4783 bytes)
2023-07-01 06:00:37,053 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:00:37,053 | DEBUG: Data: None
2023-07-01 06:00:37,053 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:37,428 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:00:37,430 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:00:37,431 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 06:00:37,431 | DEBUG: Data: None
2023-07-01 06:00:37,431 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:37,739 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2198
2023-07-01 06:00:37,740 | DEBUG: Response: 200 (2198 bytes)
2023-07-01 06:00:37,741 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:00:37,741 | DEBUG: Data: None
2023-07-01 06:00:37,741 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:00:38,103 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4931
2023-07-01 06:00:38,104 | DEBUG: Response: 200 (4931 bytes)
2023-07-01 06:00:38,105 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 06:00:38,105 | DEBUG: Data: None
2023-07-01 06:00:38,105 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:38,457 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3822
2023-07-01 06:00:38,459 | DEBUG: Response: 200 (3822 bytes)
2023-07-01 06:00:38,461 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 06:00:38,461 | DEBUG: Data: None
2023-07-01 06:00:38,461 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:38,854 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3922
2023-07-01 06:00:38,855 | DEBUG: Response: 200 (3922 bytes)
2023-07-01 06:00:38,858 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:00:38,858 | DEBUG: Data: None
2023-07-01 06:00:38,858 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:39,185 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:00:39,186 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:00:39,187 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 06:00:39,187 | DEBUG: Data: None
2023-07-01 06:00:39,187 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:39,652 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9809
2023-07-01 06:00:39,653 | DEBUG: Response: 200 (9809 bytes)
2023-07-01 06:00:39,657 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:00:39,657 | DEBUG: Data: None
2023-07-01 06:00:39,657 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:00:40,102 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4997
2023-07-01 06:00:40,104 | DEBUG: Response: 200 (4997 bytes)
2023-07-01 06:00:40,105 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 06:00:40,105 | DEBUG: Data: None
2023-07-01 06:00:40,105 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:40,430 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5030
2023-07-01 06:00:40,432 | DEBUG: Response: 200 (5030 bytes)
2023-07-01 06:00:40,435 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 06:00:40,435 | DEBUG: Data: None
2023-07-01 06:00:40,435 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:40,792 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2401
2023-07-01 06:00:40,794 | DEBUG: Response: 200 (2401 bytes)
2023-07-01 06:00:40,796 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 06:00:40,796 | DEBUG: Data: None
2023-07-01 06:00:40,796 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:00:40,796 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-01 06:00:41,724 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6976
2023-07-01 06:00:41,724 | DEBUG: Response: 200 (6976 bytes)
2023-07-01 06:00:41,728 | INFO: 127.0.0.1 - - [01/Jul/2023 06:00:41] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 06:01:00,414 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:01:00,414 | DEBUG: Data: None
2023-07-01 06:01:00,414 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:01:00,792 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4394
2023-07-01 06:01:00,794 | DEBUG: Response: 200 (4394 bytes)
2023-07-01 06:01:00,797 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 06:01:00,797 | DEBUG: Data: None
2023-07-01 06:01:00,797 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:01,261 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8453
2023-07-01 06:01:01,262 | DEBUG: Response: 200 (8453 bytes)
2023-07-01 06:01:01,267 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 06:01:01,267 | DEBUG: Data: None
2023-07-01 06:01:01,267 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:01,597 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4801
2023-07-01 06:01:01,598 | DEBUG: Response: 200 (4801 bytes)
2023-07-01 06:01:01,601 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:01:01,601 | DEBUG: Data: None
2023-07-01 06:01:01,601 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:01,957 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:01:01,958 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:01:01,959 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 06:01:01,959 | DEBUG: Data: None
2023-07-01 06:01:01,960 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:02,262 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2203
2023-07-01 06:01:02,263 | DEBUG: Response: 200 (2203 bytes)
2023-07-01 06:01:02,265 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:01:02,265 | DEBUG: Data: None
2023-07-01 06:01:02,265 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:01:02,596 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4923
2023-07-01 06:01:02,599 | DEBUG: Response: 200 (4923 bytes)
2023-07-01 06:01:02,603 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 06:01:02,604 | DEBUG: Data: None
2023-07-01 06:01:02,604 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:02,958 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3823
2023-07-01 06:01:02,960 | DEBUG: Response: 200 (3823 bytes)
2023-07-01 06:01:02,963 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 06:01:02,963 | DEBUG: Data: None
2023-07-01 06:01:02,963 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:03,318 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3922
2023-07-01 06:01:03,320 | DEBUG: Response: 200 (3922 bytes)
2023-07-01 06:01:03,322 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:01:03,322 | DEBUG: Data: None
2023-07-01 06:01:03,322 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:03,657 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:01:03,658 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:01:03,658 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 06:01:03,659 | DEBUG: Data: None
2023-07-01 06:01:03,659 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:04,351 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9801
2023-07-01 06:01:04,354 | DEBUG: Response: 200 (9801 bytes)
2023-07-01 06:01:04,358 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:01:04,358 | DEBUG: Data: None
2023-07-01 06:01:04,359 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:01:04,798 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4997
2023-07-01 06:01:04,801 | DEBUG: Response: 200 (4997 bytes)
2023-07-01 06:01:04,803 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 06:01:04,803 | DEBUG: Data: None
2023-07-01 06:01:04,803 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:05,170 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 06:01:05,172 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 06:01:05,173 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 06:01:05,174 | DEBUG: Data: None
2023-07-01 06:01:05,174 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:05,535 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2401
2023-07-01 06:01:05,536 | DEBUG: Response: 200 (2401 bytes)
2023-07-01 06:01:05,537 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 06:01:05,537 | DEBUG: Data: None
2023-07-01 06:01:05,537 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:06,101 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6975
2023-07-01 06:01:06,103 | DEBUG: Response: 200 (6975 bytes)
2023-07-01 06:01:06,106 | INFO: 127.0.0.1 - - [01/Jul/2023 06:01:06] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 06:01:44,663 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:01:44,663 | DEBUG: Data: None
2023-07-01 06:01:44,664 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:01:44,856 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:01:44,856 | DEBUG: Data: None
2023-07-01 06:01:44,856 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:01:44,860 | DEBUG: Resetting dropped connection: oauth.reddit.com
2023-07-01 06:01:44,938 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 06:01:44,941 | DEBUG: Response: 200 (136 bytes)
2023-07-01 06:01:44,944 | INFO: 127.0.0.1 - - [01/Jul/2023 06:01:44] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-01 06:01:45,317 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:01:45,318 | DEBUG: Data: None
2023-07-01 06:01:45,318 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:01:45,326 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4394
2023-07-01 06:01:45,329 | DEBUG: Response: 200 (4394 bytes)
2023-07-01 06:01:45,331 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 06:01:45,332 | DEBUG: Data: None
2023-07-01 06:01:45,332 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:45,752 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4397
2023-07-01 06:01:45,754 | DEBUG: Response: 200 (4397 bytes)
2023-07-01 06:01:45,757 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 06:01:45,757 | DEBUG: Data: None
2023-07-01 06:01:45,757 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:45,850 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8447
2023-07-01 06:01:45,853 | DEBUG: Response: 200 (8447 bytes)
2023-07-01 06:01:45,858 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 06:01:45,858 | DEBUG: Data: None
2023-07-01 06:01:45,858 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:46,235 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4777
2023-07-01 06:01:46,239 | DEBUG: Response: 200 (4777 bytes)
2023-07-01 06:01:46,241 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:01:46,241 | DEBUG: Data: None
2023-07-01 06:01:46,241 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:46,353 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8452
2023-07-01 06:01:46,355 | DEBUG: Response: 200 (8452 bytes)
2023-07-01 06:01:46,361 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 06:01:46,361 | DEBUG: Data: None
2023-07-01 06:01:46,361 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:46,617 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:01:46,619 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:01:46,619 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 06:01:46,619 | DEBUG: Data: None
2023-07-01 06:01:46,620 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:46,777 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4803
2023-07-01 06:01:46,778 | DEBUG: Response: 200 (4803 bytes)
2023-07-01 06:01:46,780 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:01:46,780 | DEBUG: Data: None
2023-07-01 06:01:46,780 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:46,924 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2203
2023-07-01 06:01:46,925 | DEBUG: Response: 200 (2203 bytes)
2023-07-01 06:01:46,926 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:01:46,926 | DEBUG: Data: None
2023-07-01 06:01:46,926 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:01:47,115 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:01:47,116 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:01:47,116 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 06:01:47,117 | DEBUG: Data: None
2023-07-01 06:01:47,117 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:47,293 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4925
2023-07-01 06:01:47,294 | DEBUG: Response: 200 (4925 bytes)
2023-07-01 06:01:47,295 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 06:01:47,295 | DEBUG: Data: None
2023-07-01 06:01:47,295 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:47,417 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2198
2023-07-01 06:01:47,418 | DEBUG: Response: 200 (2198 bytes)
2023-07-01 06:01:47,419 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:01:47,419 | DEBUG: Data: None
2023-07-01 06:01:47,419 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:01:47,629 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3824
2023-07-01 06:01:47,630 | DEBUG: Response: 200 (3824 bytes)
2023-07-01 06:01:47,633 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 06:01:47,633 | DEBUG: Data: None
2023-07-01 06:01:47,633 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:47,761 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4923
2023-07-01 06:01:47,764 | DEBUG: Response: 200 (4923 bytes)
2023-07-01 06:01:47,764 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 06:01:47,764 | DEBUG: Data: None
2023-07-01 06:01:47,764 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:48,013 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3922
2023-07-01 06:01:48,014 | DEBUG: Response: 200 (3922 bytes)
2023-07-01 06:01:48,016 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:01:48,016 | DEBUG: Data: None
2023-07-01 06:01:48,016 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:48,375 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:01:48,377 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:01:48,377 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 06:01:48,377 | DEBUG: Data: None
2023-07-01 06:01:48,378 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:48,484 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3824
2023-07-01 06:01:48,485 | DEBUG: Response: 200 (3824 bytes)
2023-07-01 06:01:48,487 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 06:01:48,487 | DEBUG: Data: None
2023-07-01 06:01:48,487 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:48,830 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9811
2023-07-01 06:01:48,831 | DEBUG: Response: 200 (9811 bytes)
2023-07-01 06:01:48,836 | INFO: 127.0.0.1 - - [01/Jul/2023 06:01:48] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-01 06:01:49,241 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3921
2023-07-01 06:01:49,242 | DEBUG: Response: 200 (3921 bytes)
2023-07-01 06:01:49,244 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:01:49,244 | DEBUG: Data: None
2023-07-01 06:01:49,244 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:49,614 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:01:49,616 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:01:49,618 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 06:01:49,618 | DEBUG: Data: None
2023-07-01 06:01:49,618 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:50,098 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9796
2023-07-01 06:01:50,099 | DEBUG: Response: 200 (9796 bytes)
2023-07-01 06:01:50,103 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:01:50,104 | DEBUG: Data: None
2023-07-01 06:01:50,104 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:01:50,447 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4992
2023-07-01 06:01:50,449 | DEBUG: Response: 200 (4992 bytes)
2023-07-01 06:01:50,450 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 06:01:50,450 | DEBUG: Data: None
2023-07-01 06:01:50,450 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:50,815 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5030
2023-07-01 06:01:50,816 | DEBUG: Response: 200 (5030 bytes)
2023-07-01 06:01:50,817 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 06:01:50,817 | DEBUG: Data: None
2023-07-01 06:01:50,817 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:51,171 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2401
2023-07-01 06:01:51,172 | DEBUG: Response: 200 (2401 bytes)
2023-07-01 06:01:51,174 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 06:01:51,174 | DEBUG: Data: None
2023-07-01 06:01:51,174 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:01:51,567 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6972
2023-07-01 06:01:51,569 | DEBUG: Response: 200 (6972 bytes)
2023-07-01 06:01:51,575 | INFO: 127.0.0.1 - - [01/Jul/2023 06:01:51] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-01 06:03:24,160 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:03:24,161 | DEBUG: Data: None
2023-07-01 06:03:24,161 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:03:24,658 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4387
2023-07-01 06:03:24,659 | DEBUG: Response: 200 (4387 bytes)
2023-07-01 06:03:24,660 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 06:03:24,660 | DEBUG: Data: None
2023-07-01 06:03:24,661 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:03:25,175 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8452
2023-07-01 06:03:25,176 | DEBUG: Response: 200 (8452 bytes)
2023-07-01 06:03:25,181 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 06:03:25,181 | DEBUG: Data: None
2023-07-01 06:03:25,181 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:03:25,545 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4789
2023-07-01 06:03:25,546 | DEBUG: Response: 200 (4789 bytes)
2023-07-01 06:03:25,548 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:03:25,548 | DEBUG: Data: None
2023-07-01 06:03:25,548 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:03:26,227 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:03:26,228 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:03:26,229 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 06:03:26,229 | DEBUG: Data: None
2023-07-01 06:03:26,229 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:03:26,570 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2198
2023-07-01 06:03:26,571 | DEBUG: Response: 200 (2198 bytes)
2023-07-01 06:03:26,572 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:03:26,572 | DEBUG: Data: None
2023-07-01 06:03:26,572 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:03:26,932 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4926
2023-07-01 06:03:26,933 | DEBUG: Response: 200 (4926 bytes)
2023-07-01 06:03:26,934 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 06:03:26,934 | DEBUG: Data: None
2023-07-01 06:03:26,934 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:03:27,287 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3823
2023-07-01 06:03:27,289 | DEBUG: Response: 200 (3823 bytes)
2023-07-01 06:03:27,290 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 06:03:27,290 | DEBUG: Data: None
2023-07-01 06:03:27,290 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:03:27,980 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3921
2023-07-01 06:03:27,981 | DEBUG: Response: 200 (3921 bytes)
2023-07-01 06:03:27,983 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:03:27,983 | DEBUG: Data: None
2023-07-01 06:03:27,983 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:03:28,655 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:03:28,656 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:03:28,657 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 06:03:28,657 | DEBUG: Data: None
2023-07-01 06:03:28,657 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:03:29,079 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9795
2023-07-01 06:03:29,082 | DEBUG: Response: 200 (9795 bytes)
2023-07-01 06:03:29,086 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:03:29,086 | DEBUG: Data: None
2023-07-01 06:03:29,086 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:03:29,659 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4997
2023-07-01 06:03:29,660 | DEBUG: Response: 200 (4997 bytes)
2023-07-01 06:03:29,661 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 06:03:29,661 | DEBUG: Data: None
2023-07-01 06:03:29,661 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:03:30,026 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 06:03:30,027 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 06:03:30,028 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 06:03:30,029 | DEBUG: Data: None
2023-07-01 06:03:30,029 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:03:30,409 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2401
2023-07-01 06:03:30,409 | DEBUG: Response: 200 (2401 bytes)
2023-07-01 06:03:30,410 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 06:03:30,410 | DEBUG: Data: None
2023-07-01 06:03:30,410 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:03:31,023 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6963
2023-07-01 06:03:31,025 | DEBUG: Response: 200 (6963 bytes)
2023-07-01 06:03:31,029 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:03:31,029 | DEBUG: Data: None
2023-07-01 06:03:31,029 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:03:31,414 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1750
2023-07-01 06:03:31,415 | DEBUG: Response: 200 (1750 bytes)
2023-07-01 06:03:31,416 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 06:03:31,416 | DEBUG: Data: None
2023-07-01 06:03:31,416 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:03:31,909 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8456
2023-07-01 06:03:31,911 | DEBUG: Response: 200 (8456 bytes)
2023-07-01 06:03:31,916 | INFO: 127.0.0.1 - - [01/Jul/2023 06:03:31] "GET /watchlist?ticks=AMZN,TSLA,AMD,NFLX HTTP/1.1" 200 -
2023-07-01 06:04:09,774 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:04:09,775 | DEBUG: Data: None
2023-07-01 06:04:09,775 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:04:10,156 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4400
2023-07-01 06:04:10,158 | DEBUG: Response: 200 (4400 bytes)
2023-07-01 06:04:10,159 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 06:04:10,159 | DEBUG: Data: None
2023-07-01 06:04:10,159 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:04:10,660 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8451
2023-07-01 06:04:10,661 | DEBUG: Response: 200 (8451 bytes)
2023-07-01 06:04:10,677 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 06:04:10,677 | DEBUG: Data: None
2023-07-01 06:04:10,677 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:04:11,275 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4789
2023-07-01 06:04:11,276 | DEBUG: Response: 200 (4789 bytes)
2023-07-01 06:04:11,278 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:04:11,278 | DEBUG: Data: None
2023-07-01 06:04:11,279 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:04:11,613 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:04:11,614 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:04:11,614 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 06:04:11,614 | DEBUG: Data: None
2023-07-01 06:04:11,614 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:04:11,934 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2202
2023-07-01 06:04:11,936 | DEBUG: Response: 200 (2202 bytes)
2023-07-01 06:04:11,937 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:04:11,937 | DEBUG: Data: None
2023-07-01 06:04:11,937 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:04:12,315 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4926
2023-07-01 06:04:12,318 | DEBUG: Response: 200 (4926 bytes)
2023-07-01 06:04:12,334 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 06:04:12,335 | DEBUG: Data: None
2023-07-01 06:04:12,335 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:04:13,665 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3823
2023-07-01 06:04:13,666 | DEBUG: Response: 200 (3823 bytes)
2023-07-01 06:04:13,668 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 06:04:13,668 | DEBUG: Data: None
2023-07-01 06:04:13,668 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:04:14,015 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3921
2023-07-01 06:04:14,019 | DEBUG: Response: 200 (3921 bytes)
2023-07-01 06:04:14,021 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:04:14,021 | DEBUG: Data: None
2023-07-01 06:04:14,021 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:04:14,363 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:04:14,364 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:04:14,365 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 06:04:14,365 | DEBUG: Data: None
2023-07-01 06:04:14,365 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:04:14,826 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9784
2023-07-01 06:04:14,833 | DEBUG: Response: 200 (9784 bytes)
2023-07-01 06:04:14,837 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:04:14,837 | DEBUG: Data: None
2023-07-01 06:04:14,837 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:04:15,196 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4999
2023-07-01 06:04:15,197 | DEBUG: Response: 200 (4999 bytes)
2023-07-01 06:04:15,198 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 06:04:15,198 | DEBUG: Data: None
2023-07-01 06:04:15,198 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:04:15,542 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5030
2023-07-01 06:04:15,545 | DEBUG: Response: 200 (5030 bytes)
2023-07-01 06:04:15,547 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 06:04:15,547 | DEBUG: Data: None
2023-07-01 06:04:15,547 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:04:15,898 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2397
2023-07-01 06:04:15,899 | DEBUG: Response: 200 (2397 bytes)
2023-07-01 06:04:15,900 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 06:04:15,900 | DEBUG: Data: None
2023-07-01 06:04:15,900 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:04:16,288 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6969
2023-07-01 06:04:16,289 | DEBUG: Response: 200 (6969 bytes)
2023-07-01 06:04:16,295 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:04:16,295 | DEBUG: Data: None
2023-07-01 06:04:16,295 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:04:16,604 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1744
2023-07-01 06:04:16,605 | DEBUG: Response: 200 (1744 bytes)
2023-07-01 06:04:16,606 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 06:04:16,606 | DEBUG: Data: None
2023-07-01 06:04:16,606 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:04:17,084 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8458
2023-07-01 06:04:17,088 | DEBUG: Response: 200 (8458 bytes)
2023-07-01 06:04:17,092 | INFO: 127.0.0.1 - - [01/Jul/2023 06:04:17] "GET /watchlist?ticks=AMZN,TSLA,AMD,NFLX HTTP/1.1" 200 -
2023-07-01 06:04:40,195 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:04:40,195 | DEBUG: Data: None
2023-07-01 06:04:40,195 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:04:40,536 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4394
2023-07-01 06:04:40,540 | DEBUG: Response: 200 (4394 bytes)
2023-07-01 06:04:40,544 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 06:04:40,544 | DEBUG: Data: None
2023-07-01 06:04:40,544 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:04:41,050 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8463
2023-07-01 06:04:41,054 | DEBUG: Response: 200 (8463 bytes)
2023-07-01 06:04:41,063 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 06:04:41,064 | DEBUG: Data: None
2023-07-01 06:04:41,064 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:04:41,422 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4809
2023-07-01 06:04:41,425 | DEBUG: Response: 200 (4809 bytes)
2023-07-01 06:04:41,427 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:04:41,427 | DEBUG: Data: None
2023-07-01 06:04:41,427 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:04:41,774 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:04:41,776 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:04:41,777 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 06:04:41,777 | DEBUG: Data: None
2023-07-01 06:04:41,777 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:04:42,112 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2199
2023-07-01 06:04:42,113 | DEBUG: Response: 200 (2199 bytes)
2023-07-01 06:04:42,114 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:04:42,114 | DEBUG: Data: None
2023-07-01 06:04:42,114 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:04:42,501 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4912
2023-07-01 06:04:42,504 | DEBUG: Response: 200 (4912 bytes)
2023-07-01 06:04:42,516 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 06:04:42,516 | DEBUG: Data: None
2023-07-01 06:04:42,516 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:04:42,879 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3824
2023-07-01 06:04:42,883 | DEBUG: Response: 200 (3824 bytes)
2023-07-01 06:04:42,886 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 06:04:42,886 | DEBUG: Data: None
2023-07-01 06:04:42,886 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:04:43,300 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3921
2023-07-01 06:04:43,301 | DEBUG: Response: 200 (3921 bytes)
2023-07-01 06:04:43,303 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:04:43,303 | DEBUG: Data: None
2023-07-01 06:04:43,303 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:04:43,633 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:04:43,635 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:04:43,635 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 06:04:43,635 | DEBUG: Data: None
2023-07-01 06:04:43,635 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:04:44,133 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9796
2023-07-01 06:04:44,138 | DEBUG: Response: 200 (9796 bytes)
2023-07-01 06:04:44,142 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:04:44,142 | DEBUG: Data: None
2023-07-01 06:04:44,142 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:04:44,885 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5000
2023-07-01 06:04:44,887 | DEBUG: Response: 200 (5000 bytes)
2023-07-01 06:04:44,888 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 06:04:44,888 | DEBUG: Data: None
2023-07-01 06:04:44,888 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:04:45,248 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 06:04:45,251 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 06:04:45,254 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 06:04:45,254 | DEBUG: Data: None
2023-07-01 06:04:45,255 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:04:45,880 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2398
2023-07-01 06:04:45,882 | DEBUG: Response: 200 (2398 bytes)
2023-07-01 06:04:45,884 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 06:04:45,884 | DEBUG: Data: None
2023-07-01 06:04:45,884 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:04:46,300 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6970
2023-07-01 06:04:46,303 | DEBUG: Response: 200 (6970 bytes)
2023-07-01 06:04:46,306 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:04:46,306 | DEBUG: Data: None
2023-07-01 06:04:46,306 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:04:46,649 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1749
2023-07-01 06:04:46,651 | DEBUG: Response: 200 (1749 bytes)
2023-07-01 06:04:46,653 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 06:04:46,653 | DEBUG: Data: None
2023-07-01 06:04:46,653 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:04:47,144 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8461
2023-07-01 06:04:47,152 | DEBUG: Response: 200 (8461 bytes)
2023-07-01 06:04:47,159 | INFO: 127.0.0.1 - - [01/Jul/2023 06:04:47] "GET /watchlist?ticks=AMZN,TSLA,AMD,NFLX HTTP/1.1" 200 -
2023-07-01 06:05:05,795 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:05:05,795 | DEBUG: Data: None
2023-07-01 06:05:05,795 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:05:06,131 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4395
2023-07-01 06:05:06,138 | DEBUG: Response: 200 (4395 bytes)
2023-07-01 06:05:06,139 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 06:05:06,139 | DEBUG: Data: None
2023-07-01 06:05:06,140 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:05:06,684 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8458
2023-07-01 06:05:06,689 | DEBUG: Response: 200 (8458 bytes)
2023-07-01 06:05:06,698 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 06:05:06,699 | DEBUG: Data: None
2023-07-01 06:05:06,699 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:05:07,091 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4807
2023-07-01 06:05:07,094 | DEBUG: Response: 200 (4807 bytes)
2023-07-01 06:05:07,096 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:05:07,096 | DEBUG: Data: None
2023-07-01 06:05:07,097 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:05:07,477 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:05:07,478 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:05:07,479 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 06:05:07,479 | DEBUG: Data: None
2023-07-01 06:05:07,479 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:05:07,832 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2197
2023-07-01 06:05:07,833 | DEBUG: Response: 200 (2197 bytes)
2023-07-01 06:05:07,835 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:05:07,835 | DEBUG: Data: None
2023-07-01 06:05:07,835 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:05:08,184 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4924
2023-07-01 06:05:08,186 | DEBUG: Response: 200 (4924 bytes)
2023-07-01 06:05:08,188 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 06:05:08,188 | DEBUG: Data: None
2023-07-01 06:05:08,188 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:05:08,528 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3824
2023-07-01 06:05:08,530 | DEBUG: Response: 200 (3824 bytes)
2023-07-01 06:05:08,532 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 06:05:08,532 | DEBUG: Data: None
2023-07-01 06:05:08,532 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:05:09,117 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3918
2023-07-01 06:05:09,119 | DEBUG: Response: 200 (3918 bytes)
2023-07-01 06:05:09,121 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:05:09,121 | DEBUG: Data: None
2023-07-01 06:05:09,121 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:05:09,459 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:05:09,460 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:05:09,460 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 06:05:09,461 | DEBUG: Data: None
2023-07-01 06:05:09,461 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:05:09,914 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9775
2023-07-01 06:05:09,915 | DEBUG: Response: 200 (9775 bytes)
2023-07-01 06:05:09,919 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:05:09,919 | DEBUG: Data: None
2023-07-01 06:05:09,919 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:05:10,268 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4996
2023-07-01 06:05:10,270 | DEBUG: Response: 200 (4996 bytes)
2023-07-01 06:05:10,271 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 06:05:10,271 | DEBUG: Data: None
2023-07-01 06:05:10,271 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:05:10,641 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5031
2023-07-01 06:05:10,644 | DEBUG: Response: 200 (5031 bytes)
2023-07-01 06:05:10,645 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 06:05:10,645 | DEBUG: Data: None
2023-07-01 06:05:10,645 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:05:11,021 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2400
2023-07-01 06:05:11,024 | DEBUG: Response: 200 (2400 bytes)
2023-07-01 06:05:11,026 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 06:05:11,026 | DEBUG: Data: None
2023-07-01 06:05:11,026 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:05:11,445 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6969
2023-07-01 06:05:11,447 | DEBUG: Response: 200 (6969 bytes)
2023-07-01 06:05:11,462 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:05:11,462 | DEBUG: Data: None
2023-07-01 06:05:11,462 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:05:11,824 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1749
2023-07-01 06:05:11,825 | DEBUG: Response: 200 (1749 bytes)
2023-07-01 06:05:11,826 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 06:05:11,826 | DEBUG: Data: None
2023-07-01 06:05:11,826 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:05:12,313 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8457
2023-07-01 06:05:12,315 | DEBUG: Response: 200 (8457 bytes)
2023-07-01 06:05:12,323 | INFO: 127.0.0.1 - - [01/Jul/2023 06:05:12] "GET /watchlist?ticks=AMZN,TSLA,AMD,NFLX HTTP/1.1" 200 -
2023-07-01 06:06:10,076 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:06:10,077 | DEBUG: Data: None
2023-07-01 06:06:10,077 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:06:10,431 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4396
2023-07-01 06:06:10,433 | DEBUG: Response: 200 (4396 bytes)
2023-07-01 06:06:10,436 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 06:06:10,436 | DEBUG: Data: None
2023-07-01 06:06:10,436 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:06:10,970 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8456
2023-07-01 06:06:10,974 | DEBUG: Response: 200 (8456 bytes)
2023-07-01 06:06:10,980 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 06:06:10,980 | DEBUG: Data: None
2023-07-01 06:06:10,980 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:06:11,374 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4798
2023-07-01 06:06:11,375 | DEBUG: Response: 200 (4798 bytes)
2023-07-01 06:06:11,378 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:06:11,378 | DEBUG: Data: None
2023-07-01 06:06:11,379 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:06:11,713 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:06:11,715 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:06:11,716 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 06:06:11,716 | DEBUG: Data: None
2023-07-01 06:06:11,716 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:06:12,039 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2202
2023-07-01 06:06:12,040 | DEBUG: Response: 200 (2202 bytes)
2023-07-01 06:06:12,041 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:06:12,041 | DEBUG: Data: None
2023-07-01 06:06:12,041 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:06:12,444 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4927
2023-07-01 06:06:12,446 | DEBUG: Response: 200 (4927 bytes)
2023-07-01 06:06:12,447 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 06:06:12,447 | DEBUG: Data: None
2023-07-01 06:06:12,447 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:06:12,826 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3822
2023-07-01 06:06:12,827 | DEBUG: Response: 200 (3822 bytes)
2023-07-01 06:06:12,829 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 06:06:12,829 | DEBUG: Data: None
2023-07-01 06:06:12,829 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:06:13,184 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3920
2023-07-01 06:06:13,187 | DEBUG: Response: 200 (3920 bytes)
2023-07-01 06:06:13,193 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:06:13,193 | DEBUG: Data: None
2023-07-01 06:06:13,193 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:06:13,556 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:06:13,557 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:06:13,557 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 06:06:13,557 | DEBUG: Data: None
2023-07-01 06:06:13,558 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:06:14,246 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9788
2023-07-01 06:06:14,250 | DEBUG: Response: 200 (9788 bytes)
2023-07-01 06:06:14,258 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:06:14,259 | DEBUG: Data: None
2023-07-01 06:06:14,259 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:06:14,620 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5002
2023-07-01 06:06:14,621 | DEBUG: Response: 200 (5002 bytes)
2023-07-01 06:06:14,622 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 06:06:14,622 | DEBUG: Data: None
2023-07-01 06:06:14,622 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:06:15,039 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5030
2023-07-01 06:06:15,040 | DEBUG: Response: 200 (5030 bytes)
2023-07-01 06:06:15,042 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 06:06:15,042 | DEBUG: Data: None
2023-07-01 06:06:15,042 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:06:15,380 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2394
2023-07-01 06:06:15,382 | DEBUG: Response: 200 (2394 bytes)
2023-07-01 06:06:15,383 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 06:06:15,383 | DEBUG: Data: None
2023-07-01 06:06:15,383 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:06:15,781 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7113
2023-07-01 06:06:15,785 | DEBUG: Response: 200 (7113 bytes)
2023-07-01 06:06:15,787 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:06:15,788 | DEBUG: Data: None
2023-07-01 06:06:15,788 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:06:16,178 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1745
2023-07-01 06:06:16,180 | DEBUG: Response: 200 (1745 bytes)
2023-07-01 06:06:16,181 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 06:06:16,181 | DEBUG: Data: None
2023-07-01 06:06:16,181 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:06:16,671 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8457
2023-07-01 06:06:16,673 | DEBUG: Response: 200 (8457 bytes)
2023-07-01 06:06:16,679 | INFO: 127.0.0.1 - - [01/Jul/2023 06:06:16] "GET /watchlist?ticks=AMZN,TSLA,AMD,NFLX HTTP/1.1" 200 -
2023-07-01 06:06:38,280 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:06:38,280 | DEBUG: Data: None
2023-07-01 06:06:38,280 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:06:38,865 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4398
2023-07-01 06:06:38,868 | DEBUG: Response: 200 (4398 bytes)
2023-07-01 06:06:38,870 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 06:06:38,870 | DEBUG: Data: None
2023-07-01 06:06:38,871 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:06:39,354 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8507
2023-07-01 06:06:39,358 | DEBUG: Response: 200 (8507 bytes)
2023-07-01 06:06:39,368 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 06:06:39,369 | DEBUG: Data: None
2023-07-01 06:06:39,369 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:06:39,738 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4796
2023-07-01 06:06:39,740 | DEBUG: Response: 200 (4796 bytes)
2023-07-01 06:06:39,742 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:06:39,742 | DEBUG: Data: None
2023-07-01 06:06:39,742 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:06:40,051 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:06:40,054 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:06:40,055 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 06:06:40,055 | DEBUG: Data: None
2023-07-01 06:06:40,055 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:06:40,365 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2202
2023-07-01 06:06:40,366 | DEBUG: Response: 200 (2202 bytes)
2023-07-01 06:06:40,368 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:06:40,368 | DEBUG: Data: None
2023-07-01 06:06:40,368 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:06:40,735 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4928
2023-07-01 06:06:40,736 | DEBUG: Response: 200 (4928 bytes)
2023-07-01 06:06:40,737 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 06:06:40,737 | DEBUG: Data: None
2023-07-01 06:06:40,737 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:06:41,104 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3823
2023-07-01 06:06:41,105 | DEBUG: Response: 200 (3823 bytes)
2023-07-01 06:06:41,106 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 06:06:41,106 | DEBUG: Data: None
2023-07-01 06:06:41,107 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:06:41,459 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3916
2023-07-01 06:06:41,461 | DEBUG: Response: 200 (3916 bytes)
2023-07-01 06:06:41,465 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:06:41,465 | DEBUG: Data: None
2023-07-01 06:06:41,465 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:06:41,815 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:06:41,816 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:06:41,819 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 06:06:41,819 | DEBUG: Data: None
2023-07-01 06:06:41,819 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:06:42,445 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9796
2023-07-01 06:06:42,451 | DEBUG: Response: 200 (9796 bytes)
2023-07-01 06:06:42,457 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:06:42,457 | DEBUG: Data: None
2023-07-01 06:06:42,457 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:06:42,789 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4994
2023-07-01 06:06:42,793 | DEBUG: Response: 200 (4994 bytes)
2023-07-01 06:06:42,796 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 06:06:42,796 | DEBUG: Data: None
2023-07-01 06:06:42,796 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:06:43,172 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5030
2023-07-01 06:06:43,175 | DEBUG: Response: 200 (5030 bytes)
2023-07-01 06:06:43,178 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 06:06:43,178 | DEBUG: Data: None
2023-07-01 06:06:43,178 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:06:43,513 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2397
2023-07-01 06:06:43,514 | DEBUG: Response: 200 (2397 bytes)
2023-07-01 06:06:43,515 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 06:06:43,515 | DEBUG: Data: None
2023-07-01 06:06:43,515 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:06:43,894 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7115
2023-07-01 06:06:43,897 | DEBUG: Response: 200 (7115 bytes)
2023-07-01 06:06:43,904 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:06:43,905 | DEBUG: Data: None
2023-07-01 06:06:43,905 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:06:44,231 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1749
2023-07-01 06:06:44,234 | DEBUG: Response: 200 (1749 bytes)
2023-07-01 06:06:44,235 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 06:06:44,235 | DEBUG: Data: None
2023-07-01 06:06:44,235 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:06:44,685 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8509
2023-07-01 06:06:44,690 | DEBUG: Response: 200 (8509 bytes)
2023-07-01 06:06:44,698 | INFO: 127.0.0.1 - - [01/Jul/2023 06:06:44] "GET /watchlist?ticks=AMZN,TSLA,AMD,NFLX HTTP/1.1" 200 -
2023-07-01 06:08:13,943 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:08:13,943 | DEBUG: Data: None
2023-07-01 06:08:13,943 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:08:14,300 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4398
2023-07-01 06:08:14,302 | DEBUG: Response: 200 (4398 bytes)
2023-07-01 06:08:14,304 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 06:08:14,304 | DEBUG: Data: None
2023-07-01 06:08:14,304 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:08:14,831 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8512
2023-07-01 06:08:14,833 | DEBUG: Response: 200 (8512 bytes)
2023-07-01 06:08:14,837 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 06:08:14,837 | DEBUG: Data: None
2023-07-01 06:08:14,838 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:08:15,191 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4789
2023-07-01 06:08:15,192 | DEBUG: Response: 200 (4789 bytes)
2023-07-01 06:08:15,195 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:08:15,196 | DEBUG: Data: None
2023-07-01 06:08:15,196 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:08:16,455 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:08:16,456 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:08:16,457 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 06:08:16,457 | DEBUG: Data: None
2023-07-01 06:08:16,457 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:08:16,768 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2201
2023-07-01 06:08:16,769 | DEBUG: Response: 200 (2201 bytes)
2023-07-01 06:08:16,770 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:08:16,770 | DEBUG: Data: None
2023-07-01 06:08:16,771 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:08:17,119 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4928
2023-07-01 06:08:17,121 | DEBUG: Response: 200 (4928 bytes)
2023-07-01 06:08:17,122 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 06:08:17,122 | DEBUG: Data: None
2023-07-01 06:08:17,122 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:08:17,554 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3947
2023-07-01 06:08:17,555 | DEBUG: Response: 200 (3947 bytes)
2023-07-01 06:08:17,557 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 06:08:17,557 | DEBUG: Data: None
2023-07-01 06:08:17,557 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:08:18,177 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3922
2023-07-01 06:08:18,178 | DEBUG: Response: 200 (3922 bytes)
2023-07-01 06:08:18,180 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:08:18,180 | DEBUG: Data: None
2023-07-01 06:08:18,180 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:08:18,488 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:08:18,490 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:08:18,491 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 06:08:18,491 | DEBUG: Data: None
2023-07-01 06:08:18,491 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:08:19,004 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9777
2023-07-01 06:08:19,007 | DEBUG: Response: 200 (9777 bytes)
2023-07-01 06:08:19,014 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:08:19,014 | DEBUG: Data: None
2023-07-01 06:08:19,014 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:08:19,394 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4997
2023-07-01 06:08:19,396 | DEBUG: Response: 200 (4997 bytes)
2023-07-01 06:08:19,397 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 06:08:19,397 | DEBUG: Data: None
2023-07-01 06:08:19,398 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:08:19,759 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5030
2023-07-01 06:08:19,761 | DEBUG: Response: 200 (5030 bytes)
2023-07-01 06:08:19,762 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 06:08:19,762 | DEBUG: Data: None
2023-07-01 06:08:19,762 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:08:20,138 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2400
2023-07-01 06:08:20,139 | DEBUG: Response: 200 (2400 bytes)
2023-07-01 06:08:20,140 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 06:08:20,141 | DEBUG: Data: None
2023-07-01 06:08:20,141 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:08:20,505 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7113
2023-07-01 06:08:20,507 | DEBUG: Response: 200 (7113 bytes)
2023-07-01 06:08:20,512 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:08:20,512 | DEBUG: Data: None
2023-07-01 06:08:20,512 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:08:20,853 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1745
2023-07-01 06:08:20,855 | DEBUG: Response: 200 (1745 bytes)
2023-07-01 06:08:20,856 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 06:08:20,856 | DEBUG: Data: None
2023-07-01 06:08:20,856 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:08:21,381 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8508
2023-07-01 06:08:21,383 | DEBUG: Response: 200 (8508 bytes)
2023-07-01 06:08:21,388 | INFO: 127.0.0.1 - - [01/Jul/2023 06:08:21] "GET /watchlist?ticks=AMZN,TSLA,AMD,NFLX HTTP/1.1" 200 -
2023-07-01 06:08:52,423 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:08:52,423 | DEBUG: Data: None
2023-07-01 06:08:52,424 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:08:53,523 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4388
2023-07-01 06:08:53,525 | DEBUG: Response: 200 (4388 bytes)
2023-07-01 06:08:53,529 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 06:08:53,530 | DEBUG: Data: None
2023-07-01 06:08:53,530 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:08:54,092 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8510
2023-07-01 06:08:54,094 | DEBUG: Response: 200 (8510 bytes)
2023-07-01 06:08:54,103 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 06:08:54,103 | DEBUG: Data: None
2023-07-01 06:08:54,103 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:08:54,494 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4749
2023-07-01 06:08:54,495 | DEBUG: Response: 200 (4749 bytes)
2023-07-01 06:08:54,497 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:08:54,497 | DEBUG: Data: None
2023-07-01 06:08:54,497 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:08:54,848 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:08:54,849 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:08:54,850 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 06:08:54,850 | DEBUG: Data: None
2023-07-01 06:08:54,850 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:08:55,146 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2200
2023-07-01 06:08:55,147 | DEBUG: Response: 200 (2200 bytes)
2023-07-01 06:08:55,148 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:08:55,148 | DEBUG: Data: None
2023-07-01 06:08:55,148 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:08:55,496 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4926
2023-07-01 06:08:55,497 | DEBUG: Response: 200 (4926 bytes)
2023-07-01 06:08:55,499 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 06:08:55,499 | DEBUG: Data: None
2023-07-01 06:08:55,500 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:08:55,863 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3945
2023-07-01 06:08:55,865 | DEBUG: Response: 200 (3945 bytes)
2023-07-01 06:08:55,868 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 06:08:55,868 | DEBUG: Data: None
2023-07-01 06:08:55,868 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:08:56,250 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3917
2023-07-01 06:08:56,251 | DEBUG: Response: 200 (3917 bytes)
2023-07-01 06:08:56,258 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:08:56,258 | DEBUG: Data: None
2023-07-01 06:08:56,258 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:08:56,614 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:08:56,615 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:08:56,616 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 06:08:56,616 | DEBUG: Data: None
2023-07-01 06:08:56,616 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:08:57,311 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9800
2023-07-01 06:08:57,313 | DEBUG: Response: 200 (9800 bytes)
2023-07-01 06:08:57,318 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:08:57,318 | DEBUG: Data: None
2023-07-01 06:08:57,318 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:08:57,671 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4993
2023-07-01 06:08:57,673 | DEBUG: Response: 200 (4993 bytes)
2023-07-01 06:08:57,674 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 06:08:57,674 | DEBUG: Data: None
2023-07-01 06:08:57,674 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:08:58,371 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5030
2023-07-01 06:08:58,372 | DEBUG: Response: 200 (5030 bytes)
2023-07-01 06:08:58,373 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 06:08:58,373 | DEBUG: Data: None
2023-07-01 06:08:58,373 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:08:58,721 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2396
2023-07-01 06:08:58,722 | DEBUG: Response: 200 (2396 bytes)
2023-07-01 06:08:58,723 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 06:08:58,723 | DEBUG: Data: None
2023-07-01 06:08:58,724 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:08:59,515 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7118
2023-07-01 06:08:59,517 | DEBUG: Response: 200 (7118 bytes)
2023-07-01 06:08:59,520 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:08:59,520 | DEBUG: Data: None
2023-07-01 06:08:59,520 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:08:59,833 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1750
2023-07-01 06:08:59,834 | DEBUG: Response: 200 (1750 bytes)
2023-07-01 06:08:59,835 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 06:08:59,835 | DEBUG: Data: None
2023-07-01 06:08:59,835 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:09:00,497 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8507
2023-07-01 06:09:00,499 | DEBUG: Response: 200 (8507 bytes)
2023-07-01 06:09:00,504 | INFO: 127.0.0.1 - - [01/Jul/2023 06:09:00] "GET /watchlist?ticks=AMZN,TSLA,AMD,NFLX HTTP/1.1" 200 -
2023-07-01 06:09:41,864 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:09:41,865 | DEBUG: Data: None
2023-07-01 06:09:41,865 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:09:42,237 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4398
2023-07-01 06:09:42,242 | DEBUG: Response: 200 (4398 bytes)
2023-07-01 06:09:42,247 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 06:09:42,248 | DEBUG: Data: None
2023-07-01 06:09:42,248 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:09:42,733 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8503
2023-07-01 06:09:42,735 | DEBUG: Response: 200 (8503 bytes)
2023-07-01 06:09:42,741 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 06:09:42,741 | DEBUG: Data: None
2023-07-01 06:09:42,741 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:09:43,329 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4990
2023-07-01 06:09:43,335 | DEBUG: Response: 200 (4990 bytes)
2023-07-01 06:09:43,337 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:09:43,337 | DEBUG: Data: None
2023-07-01 06:09:43,337 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:09:43,688 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:09:43,692 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:09:43,692 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 06:09:43,692 | DEBUG: Data: None
2023-07-01 06:09:43,692 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:09:43,989 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2198
2023-07-01 06:09:43,992 | DEBUG: Response: 200 (2198 bytes)
2023-07-01 06:09:43,992 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:09:43,993 | DEBUG: Data: None
2023-07-01 06:09:43,993 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:09:44,357 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4926
2023-07-01 06:09:44,363 | DEBUG: Response: 200 (4926 bytes)
2023-07-01 06:09:44,364 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 06:09:44,364 | DEBUG: Data: None
2023-07-01 06:09:44,364 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:09:44,737 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3947
2023-07-01 06:09:44,739 | DEBUG: Response: 200 (3947 bytes)
2023-07-01 06:09:44,740 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 06:09:44,740 | DEBUG: Data: None
2023-07-01 06:09:44,740 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:09:45,096 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3921
2023-07-01 06:09:45,099 | DEBUG: Response: 200 (3921 bytes)
2023-07-01 06:09:45,100 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 06:09:45,100 | DEBUG: Data: None
2023-07-01 06:09:45,100 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:09:45,435 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 06:09:45,438 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 06:09:45,442 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mwjp8/
2023-07-01 06:09:45,442 | DEBUG: Data: None
2023-07-01 06:09:45,442 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:09:45,910 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mwjp8/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 9801
2023-07-01 06:09:45,915 | DEBUG: Response: 200 (9801 bytes)
2023-07-01 06:09:45,923 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:09:45,923 | DEBUG: Data: None
2023-07-01 06:09:45,923 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:09:46,270 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4999
2023-07-01 06:09:46,274 | DEBUG: Response: 200 (4999 bytes)
2023-07-01 06:09:46,275 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ms4nc/
2023-07-01 06:09:46,275 | DEBUG: Data: None
2023-07-01 06:09:46,275 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:09:46,720 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ms4nc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5030
2023-07-01 06:09:46,720 | DEBUG: Response: 200 (5030 bytes)
2023-07-01 06:09:46,721 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14mzj5f/
2023-07-01 06:09:46,721 | DEBUG: Data: None
2023-07-01 06:09:46,721 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:09:47,124 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14mzj5f/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2403
2023-07-01 06:09:47,126 | DEBUG: Response: 200 (2403 bytes)
2023-07-01 06:09:47,127 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 06:09:47,127 | DEBUG: Data: None
2023-07-01 06:09:47,127 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:09:47,576 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7119
2023-07-01 06:09:47,583 | DEBUG: Response: 200 (7119 bytes)
2023-07-01 06:09:47,586 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 06:09:47,586 | DEBUG: Data: None
2023-07-01 06:09:47,586 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 06:09:47,984 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1745
2023-07-01 06:09:47,984 | DEBUG: Response: 200 (1745 bytes)
2023-07-01 06:09:47,984 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 06:09:47,984 | DEBUG: Data: None
2023-07-01 06:09:47,984 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 06:09:48,495 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8497
2023-07-01 06:09:48,499 | DEBUG: Response: 200 (8497 bytes)
2023-07-01 06:09:48,503 | INFO: 127.0.0.1 - - [01/Jul/2023 06:09:48] "GET /watchlist?ticks=AMZN,TSLA,AMD,NFLX HTTP/1.1" 200 -
2023-07-01 20:35:52,553 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-01 20:35:52,701 | INFO: [33mPress CTRL+C to quit[0m
2023-07-01 20:37:40,697 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 20:37:40,697 | DEBUG: Data: None
2023-07-01 20:37:40,769 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 20:37:40,774 | DEBUG: Starting new HTTPS connection (1): www.reddit.com:443
2023-07-01 20:37:40,811 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 20:37:40,811 | DEBUG: Data: None
2023-07-01 20:37:40,825 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 20:37:40,827 | DEBUG: Starting new HTTPS connection (2): www.reddit.com:443
2023-07-01 20:37:41,477 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 20:37:41,478 | DEBUG: Data: None
2023-07-01 20:37:41,478 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 20:37:41,479 | DEBUG: Starting new HTTPS connection (3): www.reddit.com:443
2023-07-01 20:37:41,870 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 668
2023-07-01 20:37:41,872 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 675
2023-07-01 20:37:41,873 | DEBUG: Starting new HTTPS connection (1): oauth.reddit.com:443
2023-07-01 20:37:42,021 | DEBUG: Starting new HTTPS connection (2): oauth.reddit.com:443
2023-07-01 20:37:42,312 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 668
2023-07-01 20:37:42,315 | DEBUG: Starting new HTTPS connection (3): oauth.reddit.com:443
2023-07-01 20:37:42,458 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-01 20:37:42,522 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4396
2023-07-01 20:37:42,528 | DEBUG: Response: 200 (136 bytes)
2023-07-01 20:37:42,761 | DEBUG: Response: 200 (4396 bytes)
2023-07-01 20:37:42,765 | INFO: 127.0.0.1 - - [01/Jul/2023 20:37:42] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-01 20:37:42,766 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 20:37:42,938 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4377
2023-07-01 20:37:42,976 | DEBUG: Data: None
2023-07-01 20:37:42,977 | DEBUG: Response: 200 (4377 bytes)
2023-07-01 20:37:42,980 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 20:37:42,981 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 20:37:42,986 | DEBUG: Data: None
2023-07-01 20:37:42,986 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 20:37:43,628 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14611
2023-07-01 20:37:43,795 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14608
2023-07-01 20:37:43,806 | DEBUG: Response: 200 (14608 bytes)
2023-07-01 20:37:43,837 | DEBUG: Response: 200 (14611 bytes)
2023-07-01 20:37:43,928 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 20:37:43,935 | DEBUG: Data: None
2023-07-01 20:37:43,935 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 20:37:43,934 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n8u3g/
2023-07-01 20:37:43,935 | DEBUG: Data: None
2023-07-01 20:37:43,935 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 20:37:44,336 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5698
2023-07-01 20:37:44,338 | DEBUG: Response: 200 (5698 bytes)
2023-07-01 20:37:44,341 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 20:37:44,341 | DEBUG: Data: None
2023-07-01 20:37:44,341 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 20:37:44,360 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n8u3g/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5679
2023-07-01 20:37:44,361 | DEBUG: Response: 200 (5679 bytes)
2023-07-01 20:37:44,363 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 20:37:44,363 | DEBUG: Data: None
2023-07-01 20:37:44,363 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 20:37:44,668 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 20:37:44,669 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 20:37:44,670 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 20:37:44,670 | DEBUG: Data: None
2023-07-01 20:37:44,670 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 20:37:44,739 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1797
2023-07-01 20:37:44,739 | DEBUG: Response: 200 (1797 bytes)
2023-07-01 20:37:44,740 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ncj0z/
2023-07-01 20:37:44,740 | DEBUG: Data: None
2023-07-01 20:37:44,740 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 20:37:45,110 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6075
2023-07-01 20:37:45,113 | DEBUG: Response: 200 (6075 bytes)
2023-07-01 20:37:45,136 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 20:37:45,496 | DEBUG: Data: None
2023-07-01 20:37:45,496 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 20:37:45,527 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ncj0z/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6075
2023-07-01 20:37:45,528 | DEBUG: Response: 200 (6075 bytes)
2023-07-01 20:37:45,530 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 20:37:45,530 | DEBUG: Data: None
2023-07-01 20:37:45,530 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 20:37:45,972 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4425
2023-07-01 20:37:45,973 | DEBUG: Response: 200 (4425 bytes)
2023-07-01 20:37:45,974 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 20:37:45,974 | DEBUG: Data: None
2023-07-01 20:37:45,974 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 20:37:45,979 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 4426
2023-07-01 20:37:45,980 | DEBUG: Response: 200 (4426 bytes)
2023-07-01 20:37:45,981 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nbnjm/
2023-07-01 20:37:45,981 | DEBUG: Data: None
2023-07-01 20:37:45,981 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 20:37:46,382 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5722
2023-07-01 20:37:46,383 | DEBUG: Response: 200 (5722 bytes)
2023-07-01 20:37:46,385 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 20:37:46,385 | DEBUG: Data: None
2023-07-01 20:37:46,385 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 20:37:46,406 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nbnjm/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5709
2023-07-01 20:37:46,408 | DEBUG: Response: 200 (5709 bytes)
2023-07-01 20:37:46,410 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nao8d/
2023-07-01 20:37:46,410 | DEBUG: Data: None
2023-07-01 20:37:46,410 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 20:37:47,462 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5723
2023-07-01 20:37:47,463 | DEBUG: Response: 200 (5723 bytes)
2023-07-01 20:37:47,465 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 20:37:47,465 | DEBUG: Data: None
2023-07-01 20:37:47,465 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 20:37:47,485 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nao8d/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5720
2023-07-01 20:37:47,489 | DEBUG: Response: 200 (5720 bytes)
2023-07-01 20:37:47,491 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nblcd/
2023-07-01 20:37:47,491 | DEBUG: Data: None
2023-07-01 20:37:47,491 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 20:37:47,800 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 20:37:47,800 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 20:37:47,801 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nwyki/
2023-07-01 20:37:47,801 | DEBUG: Data: None
2023-07-01 20:37:47,801 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 20:37:47,862 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nblcd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1794
2023-07-01 20:37:47,862 | DEBUG: Response: 200 (1794 bytes)
2023-07-01 20:37:47,863 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nwyki/
2023-07-01 20:37:47,863 | DEBUG: Data: None
2023-07-01 20:37:47,863 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 20:37:48,119 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nwyki/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3698
2023-07-01 20:37:48,121 | DEBUG: Response: 200 (3698 bytes)
2023-07-01 20:37:48,122 | INFO: 127.0.0.1 - - [01/Jul/2023 20:37:48] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-01 20:37:48,182 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nwyki/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3698
2023-07-01 20:37:48,183 | DEBUG: Response: 200 (3698 bytes)
2023-07-01 20:37:48,183 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 20:37:48,183 | DEBUG: Data: None
2023-07-01 20:37:48,183 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 20:37:48,626 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1650
2023-07-01 20:37:48,627 | DEBUG: Response: 200 (1650 bytes)
2023-07-01 20:37:48,627 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14n7p48/
2023-07-01 20:37:48,627 | DEBUG: Data: None
2023-07-01 20:37:48,627 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 20:37:49,325 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14n7p48/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7462
2023-07-01 20:37:49,326 | DEBUG: Response: 200 (7462 bytes)
2023-07-01 20:37:49,328 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-01 20:37:49,328 | DEBUG: Data: None
2023-07-01 20:37:49,328 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-01 20:37:49,697 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1745
2023-07-01 20:37:49,698 | DEBUG: Response: 200 (1745 bytes)
2023-07-01 20:37:49,698 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nashx/
2023-07-01 20:37:49,698 | DEBUG: Data: None
2023-07-01 20:37:49,698 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-01 20:37:50,515 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nashx/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14619
2023-07-01 20:37:50,518 | DEBUG: Response: 200 (14619 bytes)
2023-07-01 20:37:50,524 | INFO: 127.0.0.1 - - [01/Jul/2023 20:37:50] "GET /watchlist?ticks=AMZN,TSLA,AMD,NFLX HTTP/1.1" 200 -
2023-07-02 04:33:49,489 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 04:33:49,491 | DEBUG: Data: None
2023-07-02 04:33:49,491 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 04:33:49,498 | DEBUG: Resetting dropped connection: oauth.reddit.com
2023-07-02 04:33:49,586 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 04:33:49,586 | DEBUG: Data: None
2023-07-02 04:33:49,586 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 04:33:49,587 | DEBUG: Resetting dropped connection: oauth.reddit.com
2023-07-02 04:33:49,827 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-02 04:33:49,830 | DEBUG: Response: 200 (136 bytes)
2023-07-02 04:33:49,831 | INFO: 127.0.0.1 - - [02/Jul/2023 04:33:49] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-02 04:33:49,982 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1789
2023-07-02 04:33:49,983 | DEBUG: Response: 200 (1789 bytes)
2023-07-02 04:33:49,984 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 04:33:49,984 | DEBUG: Data: None
2023-07-02 04:33:49,984 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 04:33:50,041 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 04:33:50,042 | DEBUG: Data: None
2023-07-02 04:33:50,042 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 04:33:50,311 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1809
2023-07-02 04:33:50,311 | DEBUG: Response: 200 (1809 bytes)
2023-07-02 04:33:50,312 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 04:33:50,312 | DEBUG: Data: None
2023-07-02 04:33:50,312 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 04:33:50,414 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1790
2023-07-02 04:33:50,415 | DEBUG: Response: 200 (1790 bytes)
2023-07-02 04:33:50,415 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 04:33:50,416 | DEBUG: Data: None
2023-07-02 04:33:50,416 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 04:33:50,783 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1809
2023-07-02 04:33:50,784 | DEBUG: Response: 200 (1809 bytes)
2023-07-02 04:33:50,785 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 04:33:50,785 | DEBUG: Data: None
2023-07-02 04:33:50,786 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 04:33:50,786 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6718
2023-07-02 04:33:50,790 | DEBUG: Response: 200 (6718 bytes)
2023-07-02 04:33:50,792 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nylh4/
2023-07-02 04:33:50,792 | DEBUG: Data: None
2023-07-02 04:33:50,793 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 04:33:51,179 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6722
2023-07-02 04:33:51,181 | DEBUG: Response: 200 (6722 bytes)
2023-07-02 04:33:51,183 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nylh4/
2023-07-02 04:33:51,183 | DEBUG: Data: None
2023-07-02 04:33:51,183 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 04:33:51,903 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nylh4/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 21978
2023-07-02 04:33:51,910 | DEBUG: Response: 200 (21978 bytes)
2023-07-02 04:33:51,919 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nwyki/
2023-07-02 04:33:51,919 | DEBUG: Data: None
2023-07-02 04:33:51,919 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 04:33:52,299 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nylh4/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 21975
2023-07-02 04:33:52,301 | DEBUG: Response: 200 (21975 bytes)
2023-07-02 04:33:52,313 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nwyki/
2023-07-02 04:33:52,313 | DEBUG: Data: None
2023-07-02 04:33:52,313 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 04:33:53,232 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nwyki/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 33249
2023-07-02 04:33:53,237 | DEBUG: Response: 200 (33249 bytes)
2023-07-02 04:33:53,250 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 04:33:53,250 | DEBUG: Data: None
2023-07-02 04:33:53,250 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 04:33:53,605 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1810
2023-07-02 04:33:53,606 | DEBUG: Response: 200 (1810 bytes)
2023-07-02 04:33:53,606 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o1giu/
2023-07-02 04:33:53,606 | DEBUG: Data: None
2023-07-02 04:33:53,607 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 04:33:53,718 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nwyki/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 33250
2023-07-02 04:33:53,721 | DEBUG: Response: 200 (33250 bytes)
2023-07-02 04:33:53,734 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 04:33:53,734 | DEBUG: Data: None
2023-07-02 04:33:53,734 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 04:33:53,938 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o1giu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2584
2023-07-02 04:33:53,939 | DEBUG: Response: 200 (2584 bytes)
2023-07-02 04:33:53,940 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o1hzk/
2023-07-02 04:33:53,940 | DEBUG: Data: None
2023-07-02 04:33:53,940 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 04:33:54,079 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1809
2023-07-02 04:33:54,080 | DEBUG: Response: 200 (1809 bytes)
2023-07-02 04:33:54,080 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o1giu/
2023-07-02 04:33:54,080 | DEBUG: Data: None
2023-07-02 04:33:54,080 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 04:33:54,350 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o1hzk/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7559
2023-07-02 04:33:54,350 | DEBUG: Response: 200 (7559 bytes)
2023-07-02 04:33:54,354 | INFO: 127.0.0.1 - - [02/Jul/2023 04:33:54] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-02 04:33:54,395 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o1giu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2584
2023-07-02 04:33:54,396 | DEBUG: Response: 200 (2584 bytes)
2023-07-02 04:33:54,397 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o1hzk/
2023-07-02 04:33:54,397 | DEBUG: Data: None
2023-07-02 04:33:54,397 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 04:33:54,809 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o1hzk/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7562
2023-07-02 04:33:54,810 | DEBUG: Response: 200 (7562 bytes)
2023-07-02 04:33:54,813 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 04:33:54,813 | DEBUG: Data: None
2023-07-02 04:33:54,813 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 04:33:55,276 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2166
2023-07-02 04:33:55,277 | DEBUG: Response: 200 (2166 bytes)
2023-07-02 04:33:55,277 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o4go1/
2023-07-02 04:33:55,277 | DEBUG: Data: None
2023-07-02 04:33:55,277 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 04:33:55,702 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o4go1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4581
2023-07-02 04:33:55,703 | DEBUG: Response: 200 (4581 bytes)
2023-07-02 04:33:55,704 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 04:33:55,704 | DEBUG: Data: None
2023-07-02 04:33:55,704 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 04:33:56,023 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1789
2023-07-02 04:33:56,024 | DEBUG: Response: 200 (1789 bytes)
2023-07-02 04:33:56,025 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 04:33:56,025 | DEBUG: Data: None
2023-07-02 04:33:56,025 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 04:33:56,352 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1809
2023-07-02 04:33:56,353 | DEBUG: Response: 200 (1809 bytes)
2023-07-02 04:33:56,354 | INFO: 127.0.0.1 - - [02/Jul/2023 04:33:56] "GET /watchlist?ticks=AMZN,TSLA,AMD,NFLX HTTP/1.1" 200 -
2023-07-02 04:34:08,986 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 04:34:08,986 | DEBUG: Data: None
2023-07-02 04:34:08,986 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 04:34:09,342 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1789
2023-07-02 04:34:09,343 | DEBUG: Response: 200 (1789 bytes)
2023-07-02 04:34:09,343 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 04:34:09,343 | DEBUG: Data: None
2023-07-02 04:34:09,343 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 04:34:09,687 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1809
2023-07-02 04:34:09,687 | DEBUG: Response: 200 (1809 bytes)
2023-07-02 04:34:09,692 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 04:34:09,692 | DEBUG: Data: None
2023-07-02 04:34:09,692 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 04:34:10,092 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6718
2023-07-02 04:34:10,093 | DEBUG: Response: 200 (6718 bytes)
2023-07-02 04:34:10,094 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nylh4/
2023-07-02 04:34:10,094 | DEBUG: Data: None
2023-07-02 04:34:10,094 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 04:34:11,111 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nylh4/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 21993
2023-07-02 04:34:11,114 | DEBUG: Response: 200 (21993 bytes)
2023-07-02 04:34:11,128 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nwyki/
2023-07-02 04:34:11,128 | DEBUG: Data: None
2023-07-02 04:34:11,128 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 04:34:12,696 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nwyki/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 33258
2023-07-02 04:34:12,700 | DEBUG: Response: 200 (33258 bytes)
2023-07-02 04:34:12,711 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 04:34:12,712 | DEBUG: Data: None
2023-07-02 04:34:12,712 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 04:34:13,056 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1809
2023-07-02 04:34:13,056 | DEBUG: Response: 200 (1809 bytes)
2023-07-02 04:34:13,057 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o1giu/
2023-07-02 04:34:13,057 | DEBUG: Data: None
2023-07-02 04:34:13,057 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 04:34:13,594 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o1giu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2582
2023-07-02 04:34:13,595 | DEBUG: Response: 200 (2582 bytes)
2023-07-02 04:34:13,595 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o1hzk/
2023-07-02 04:34:13,595 | DEBUG: Data: None
2023-07-02 04:34:13,595 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 04:34:13,996 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o1hzk/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7564
2023-07-02 04:34:13,997 | DEBUG: Response: 200 (7564 bytes)
2023-07-02 04:34:13,999 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 04:34:13,999 | DEBUG: Data: None
2023-07-02 04:34:13,999 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 04:34:14,397 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2165
2023-07-02 04:34:14,398 | DEBUG: Response: 200 (2165 bytes)
2023-07-02 04:34:14,398 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o4go1/
2023-07-02 04:34:14,398 | DEBUG: Data: None
2023-07-02 04:34:14,398 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 04:34:14,784 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o4go1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4582
2023-07-02 04:34:14,785 | DEBUG: Response: 200 (4582 bytes)
2023-07-02 04:34:14,786 | INFO: 127.0.0.1 - - [02/Jul/2023 04:34:14] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-02 04:34:14,792 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 04:34:14,792 | DEBUG: Data: None
2023-07-02 04:34:14,792 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 04:34:15,102 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1790
2023-07-02 04:34:15,103 | DEBUG: Response: 200 (1790 bytes)
2023-07-02 04:34:15,103 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 04:34:15,103 | DEBUG: Data: None
2023-07-02 04:34:15,103 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 04:34:15,436 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1809
2023-07-02 04:34:15,437 | DEBUG: Response: 200 (1809 bytes)
2023-07-02 04:34:15,438 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 04:34:15,438 | DEBUG: Data: None
2023-07-02 04:34:15,438 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 04:34:15,850 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6721
2023-07-02 04:34:15,851 | DEBUG: Response: 200 (6721 bytes)
2023-07-02 04:34:15,852 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nylh4/
2023-07-02 04:34:15,852 | DEBUG: Data: None
2023-07-02 04:34:15,852 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 04:34:16,841 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nylh4/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 21983
2023-07-02 04:34:16,843 | DEBUG: Response: 200 (21983 bytes)
2023-07-02 04:34:16,851 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nwyki/
2023-07-02 04:34:16,852 | DEBUG: Data: None
2023-07-02 04:34:16,852 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 04:34:18,345 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nwyki/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 33255
2023-07-02 04:34:18,545 | DEBUG: Response: 200 (33255 bytes)
2023-07-02 04:34:18,559 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 04:34:18,560 | DEBUG: Data: None
2023-07-02 04:34:18,560 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 04:34:18,910 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1810
2023-07-02 04:34:18,910 | DEBUG: Response: 200 (1810 bytes)
2023-07-02 04:34:18,911 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o1giu/
2023-07-02 04:34:18,911 | DEBUG: Data: None
2023-07-02 04:34:18,911 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 04:34:19,242 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o1giu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2588
2023-07-02 04:34:19,242 | DEBUG: Response: 200 (2588 bytes)
2023-07-02 04:34:19,243 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o1hzk/
2023-07-02 04:34:19,243 | DEBUG: Data: None
2023-07-02 04:34:19,244 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 04:34:19,681 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o1hzk/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7561
2023-07-02 04:34:19,682 | DEBUG: Response: 200 (7561 bytes)
2023-07-02 04:34:19,684 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 04:34:19,684 | DEBUG: Data: None
2023-07-02 04:34:19,684 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 04:34:20,012 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2165
2023-07-02 04:34:20,013 | DEBUG: Response: 200 (2165 bytes)
2023-07-02 04:34:20,013 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o4go1/
2023-07-02 04:34:20,013 | DEBUG: Data: None
2023-07-02 04:34:20,013 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 04:34:20,365 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o4go1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4583
2023-07-02 04:34:20,366 | DEBUG: Response: 200 (4583 bytes)
2023-07-02 04:34:20,367 | INFO: 127.0.0.1 - - [02/Jul/2023 04:34:20] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-02 13:15:55,877 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-02 13:15:55,889 | INFO: [33mPress CTRL+C to quit[0m
2023-07-02 13:17:26,911 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:17:26,911 | DEBUG: Data: None
2023-07-02 13:17:26,911 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:17:26,914 | DEBUG: Starting new HTTPS connection (1): www.reddit.com:443
2023-07-02 13:17:27,058 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:17:27,059 | DEBUG: Data: None
2023-07-02 13:17:27,059 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:17:27,062 | DEBUG: Starting new HTTPS connection (2): www.reddit.com:443
2023-07-02 13:17:27,718 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 668
2023-07-02 13:17:27,721 | DEBUG: Starting new HTTPS connection (1): oauth.reddit.com:443
2023-07-02 13:17:27,769 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:17:27,769 | DEBUG: Data: None
2023-07-02 13:17:27,769 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:17:27,772 | DEBUG: Starting new HTTPS connection (2): oauth.reddit.com:443
2023-07-02 13:17:27,857 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 668
2023-07-02 13:17:27,859 | DEBUG: Starting new HTTPS connection (3): oauth.reddit.com:443
2023-07-02 13:17:28,052 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-02 13:17:28,053 | DEBUG: Response: 200 (136 bytes)
2023-07-02 13:17:28,055 | INFO: 127.0.0.1 - - [02/Jul/2023 13:17:28] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-02 13:17:28,261 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1789
2023-07-02 13:17:28,263 | DEBUG: Response: 200 (1789 bytes)
2023-07-02 13:17:28,264 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:17:28,264 | DEBUG: Data: None
2023-07-02 13:17:28,264 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:17:28,294 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1789
2023-07-02 13:17:28,296 | DEBUG: Response: 200 (1789 bytes)
2023-07-02 13:17:28,298 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:17:28,298 | DEBUG: Data: None
2023-07-02 13:17:28,298 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:17:28,618 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2260
2023-07-02 13:17:28,619 | DEBUG: Response: 200 (2260 bytes)
2023-07-02 13:17:28,620 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:17:28,620 | DEBUG: Data: None
2023-07-02 13:17:28,620 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:17:28,672 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2261
2023-07-02 13:17:28,672 | DEBUG: Response: 200 (2261 bytes)
2023-07-02 13:17:28,673 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:17:28,673 | DEBUG: Data: None
2023-07-02 13:17:28,673 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:17:29,060 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6882
2023-07-02 13:17:29,062 | DEBUG: Response: 200 (6882 bytes)
2023-07-02 13:17:29,064 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nylh4/
2023-07-02 13:17:29,064 | DEBUG: Data: None
2023-07-02 13:17:29,064 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:17:29,166 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6890
2023-07-02 13:17:29,167 | DEBUG: Response: 200 (6890 bytes)
2023-07-02 13:17:29,168 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nylh4/
2023-07-02 13:17:29,168 | DEBUG: Data: None
2023-07-02 13:17:29,168 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:17:30,282 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nylh4/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 30382
2023-07-02 13:17:30,290 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nylh4/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 30361
2023-07-02 13:17:30,303 | DEBUG: Response: 200 (30361 bytes)
2023-07-02 13:17:30,370 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nwyki/
2023-07-02 13:17:30,370 | DEBUG: Data: None
2023-07-02 13:17:30,370 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:17:30,497 | DEBUG: Response: 200 (30382 bytes)
2023-07-02 13:17:30,513 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nwyki/
2023-07-02 13:17:30,513 | DEBUG: Data: None
2023-07-02 13:17:30,513 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:17:31,972 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nwyki/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 44717
2023-07-02 13:17:32,028 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nwyki/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 44714
2023-07-02 13:17:32,344 | DEBUG: Response: 200 (44717 bytes)
2023-07-02 13:17:32,379 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:17:32,379 | DEBUG: Data: None
2023-07-02 13:17:32,379 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:17:32,420 | DEBUG: Response: 200 (44714 bytes)
2023-07-02 13:17:32,449 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:17:32,449 | DEBUG: Data: None
2023-07-02 13:17:32,449 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:17:32,732 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2260
2023-07-02 13:17:32,733 | DEBUG: Response: 200 (2260 bytes)
2023-07-02 13:17:32,734 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o1giu/
2023-07-02 13:17:32,734 | DEBUG: Data: None
2023-07-02 13:17:32,734 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:17:32,794 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2261
2023-07-02 13:17:32,796 | DEBUG: Response: 200 (2261 bytes)
2023-07-02 13:17:32,797 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o1giu/
2023-07-02 13:17:32,797 | DEBUG: Data: None
2023-07-02 13:17:32,797 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:17:33,083 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o1giu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3173
2023-07-02 13:17:33,084 | DEBUG: Response: 200 (3173 bytes)
2023-07-02 13:17:33,085 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:17:33,085 | DEBUG: Data: None
2023-07-02 13:17:33,085 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:17:33,157 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o1giu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3173
2023-07-02 13:17:33,158 | DEBUG: Response: 200 (3173 bytes)
2023-07-02 13:17:33,161 | INFO: 127.0.0.1 - - [02/Jul/2023 13:17:33] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-02 13:17:33,427 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2165
2023-07-02 13:17:33,431 | DEBUG: Response: 200 (2165 bytes)
2023-07-02 13:17:33,433 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o4go1/
2023-07-02 13:17:33,434 | DEBUG: Data: None
2023-07-02 13:17:33,434 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:17:33,966 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o4go1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14945
2023-07-02 13:17:33,973 | DEBUG: Response: 200 (14945 bytes)
2023-07-02 13:17:33,983 | INFO: 127.0.0.1 - - [02/Jul/2023 13:17:33] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-02 13:18:20,919 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:18:20,919 | DEBUG: Data: None
2023-07-02 13:18:20,919 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:18:20,974 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:18:20,975 | DEBUG: Data: None
2023-07-02 13:18:20,975 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:18:21,199 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-02 13:18:21,200 | DEBUG: Response: 200 (136 bytes)
2023-07-02 13:18:21,201 | INFO: 127.0.0.1 - - [02/Jul/2023 13:18:21] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-02 13:18:21,280 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1789
2023-07-02 13:18:21,284 | DEBUG: Response: 200 (1789 bytes)
2023-07-02 13:18:21,285 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:18:21,286 | DEBUG: Data: None
2023-07-02 13:18:21,286 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:18:21,602 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2261
2023-07-02 13:18:21,606 | DEBUG: Response: 200 (2261 bytes)
2023-07-02 13:18:21,611 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:18:21,612 | DEBUG: Data: None
2023-07-02 13:18:21,612 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:18:21,743 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:18:21,743 | DEBUG: Data: None
2023-07-02 13:18:21,744 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:18:22,043 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6887
2023-07-02 13:18:22,048 | DEBUG: Response: 200 (6887 bytes)
2023-07-02 13:18:22,051 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nylh4/
2023-07-02 13:18:22,052 | DEBUG: Data: None
2023-07-02 13:18:22,052 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:18:22,087 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1788
2023-07-02 13:18:22,088 | DEBUG: Response: 200 (1788 bytes)
2023-07-02 13:18:22,090 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:18:22,091 | DEBUG: Data: None
2023-07-02 13:18:22,091 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:18:22,477 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2260
2023-07-02 13:18:22,480 | DEBUG: Response: 200 (2260 bytes)
2023-07-02 13:18:22,484 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:18:22,484 | DEBUG: Data: None
2023-07-02 13:18:22,484 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:18:22,921 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6884
2023-07-02 13:18:22,922 | DEBUG: Response: 200 (6884 bytes)
2023-07-02 13:18:22,924 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nylh4/
2023-07-02 13:18:22,924 | DEBUG: Data: None
2023-07-02 13:18:22,924 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:18:23,286 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nylh4/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 30363
2023-07-02 13:18:23,292 | DEBUG: Response: 200 (30363 bytes)
2023-07-02 13:18:23,311 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nwyki/
2023-07-02 13:18:23,311 | DEBUG: Data: None
2023-07-02 13:18:23,311 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:18:23,993 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nylh4/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 30343
2023-07-02 13:18:24,155 | DEBUG: Response: 200 (30343 bytes)
2023-07-02 13:18:24,186 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nwyki/
2023-07-02 13:18:24,186 | DEBUG: Data: None
2023-07-02 13:18:24,186 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:18:24,988 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nwyki/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 44729
2023-07-02 13:18:25,175 | DEBUG: Response: 200 (44729 bytes)
2023-07-02 13:18:25,225 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:18:25,226 | DEBUG: Data: None
2023-07-02 13:18:25,226 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:18:25,551 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2260
2023-07-02 13:18:25,551 | DEBUG: Response: 200 (2260 bytes)
2023-07-02 13:18:25,552 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o1giu/
2023-07-02 13:18:25,552 | DEBUG: Data: None
2023-07-02 13:18:25,552 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:18:25,862 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nwyki/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 44718
2023-07-02 13:18:25,876 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o1giu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3174
2023-07-02 13:18:25,878 | DEBUG: Response: 200 (3174 bytes)
2023-07-02 13:18:25,881 | INFO: 127.0.0.1 - - [02/Jul/2023 13:18:25] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-02 13:18:26,265 | DEBUG: Response: 200 (44718 bytes)
2023-07-02 13:18:26,289 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:18:26,289 | DEBUG: Data: None
2023-07-02 13:18:26,289 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:18:26,661 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2260
2023-07-02 13:18:26,663 | DEBUG: Response: 200 (2260 bytes)
2023-07-02 13:18:26,663 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o1giu/
2023-07-02 13:18:26,663 | DEBUG: Data: None
2023-07-02 13:18:26,664 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:18:27,444 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o1giu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3176
2023-07-02 13:18:27,446 | DEBUG: Response: 200 (3176 bytes)
2023-07-02 13:18:27,451 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:18:27,452 | DEBUG: Data: None
2023-07-02 13:18:27,452 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:18:27,797 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2166
2023-07-02 13:18:27,801 | DEBUG: Response: 200 (2166 bytes)
2023-07-02 13:18:27,802 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o4go1/
2023-07-02 13:18:27,803 | DEBUG: Data: None
2023-07-02 13:18:27,803 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:18:28,564 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o4go1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14960
2023-07-02 13:18:28,567 | DEBUG: Response: 200 (14960 bytes)
2023-07-02 13:18:28,578 | INFO: 127.0.0.1 - - [02/Jul/2023 13:18:28] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-02 13:18:38,788 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:18:38,788 | DEBUG: Data: None
2023-07-02 13:18:38,788 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:18:39,035 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:18:39,036 | DEBUG: Data: None
2023-07-02 13:18:39,036 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:18:39,283 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-02 13:18:39,285 | DEBUG: Response: 200 (136 bytes)
2023-07-02 13:18:39,286 | INFO: 127.0.0.1 - - [02/Jul/2023 13:18:39] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-02 13:18:39,353 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1789
2023-07-02 13:18:39,354 | DEBUG: Response: 200 (1789 bytes)
2023-07-02 13:18:39,354 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:18:39,355 | DEBUG: Data: None
2023-07-02 13:18:39,355 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:18:39,737 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2260
2023-07-02 13:18:39,739 | DEBUG: Response: 200 (2260 bytes)
2023-07-02 13:18:39,742 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:18:39,742 | DEBUG: Data: None
2023-07-02 13:18:39,742 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:18:40,162 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6891
2023-07-02 13:18:40,164 | DEBUG: Response: 200 (6891 bytes)
2023-07-02 13:18:40,166 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nylh4/
2023-07-02 13:18:40,167 | DEBUG: Data: None
2023-07-02 13:18:40,167 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:18:41,684 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nylh4/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 30352
2023-07-02 13:18:41,735 | DEBUG: Response: 200 (30352 bytes)
2023-07-02 13:18:41,753 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nwyki/
2023-07-02 13:18:41,753 | DEBUG: Data: None
2023-07-02 13:18:41,753 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:18:43,327 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nwyki/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 44741
2023-07-02 13:18:43,498 | DEBUG: Response: 200 (44741 bytes)
2023-07-02 13:18:43,529 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:18:43,529 | DEBUG: Data: None
2023-07-02 13:18:43,529 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:18:43,941 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2260
2023-07-02 13:18:43,943 | DEBUG: Response: 200 (2260 bytes)
2023-07-02 13:18:43,944 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o1giu/
2023-07-02 13:18:43,945 | DEBUG: Data: None
2023-07-02 13:18:43,945 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:18:44,452 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o1giu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3176
2023-07-02 13:18:44,453 | DEBUG: Response: 200 (3176 bytes)
2023-07-02 13:18:44,454 | INFO: 127.0.0.1 - - [02/Jul/2023 13:18:44] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-02 13:18:44,462 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:18:44,462 | DEBUG: Data: None
2023-07-02 13:18:44,462 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:18:44,793 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1793
2023-07-02 13:18:44,794 | DEBUG: Response: 200 (1793 bytes)
2023-07-02 13:18:44,794 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:18:44,795 | DEBUG: Data: None
2023-07-02 13:18:44,795 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:18:45,179 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2260
2023-07-02 13:18:45,180 | DEBUG: Response: 200 (2260 bytes)
2023-07-02 13:18:45,181 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:18:45,181 | DEBUG: Data: None
2023-07-02 13:18:45,181 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:18:45,592 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6888
2023-07-02 13:18:45,595 | DEBUG: Response: 200 (6888 bytes)
2023-07-02 13:18:45,598 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nylh4/
2023-07-02 13:18:45,598 | DEBUG: Data: None
2023-07-02 13:18:45,598 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:18:47,121 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nylh4/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 30376
2023-07-02 13:18:47,133 | DEBUG: Response: 200 (30376 bytes)
2023-07-02 13:18:47,160 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nwyki/
2023-07-02 13:18:47,161 | DEBUG: Data: None
2023-07-02 13:18:47,162 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:18:49,257 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nwyki/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 44742
2023-07-02 13:18:49,499 | DEBUG: Response: 200 (44742 bytes)
2023-07-02 13:18:49,526 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:18:49,527 | DEBUG: Data: None
2023-07-02 13:18:49,527 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:18:49,929 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2261
2023-07-02 13:18:49,930 | DEBUG: Response: 200 (2261 bytes)
2023-07-02 13:18:49,931 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o1giu/
2023-07-02 13:18:49,931 | DEBUG: Data: None
2023-07-02 13:18:49,931 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:18:50,315 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o1giu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3174
2023-07-02 13:18:50,316 | DEBUG: Response: 200 (3174 bytes)
2023-07-02 13:18:50,317 | INFO: 127.0.0.1 - - [02/Jul/2023 13:18:50] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-02 13:19:33,999 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:19:33,999 | DEBUG: Data: None
2023-07-02 13:19:33,999 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:19:34,134 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:19:34,134 | DEBUG: Data: None
2023-07-02 13:19:34,134 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:19:34,280 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-02 13:19:34,281 | DEBUG: Response: 200 (136 bytes)
2023-07-02 13:19:34,281 | INFO: 127.0.0.1 - - [02/Jul/2023 13:19:34] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-02 13:19:34,473 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1788
2023-07-02 13:19:34,475 | DEBUG: Response: 200 (1788 bytes)
2023-07-02 13:19:34,476 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:19:34,476 | DEBUG: Data: None
2023-07-02 13:19:34,476 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:19:34,874 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2260
2023-07-02 13:19:34,875 | DEBUG: Response: 200 (2260 bytes)
2023-07-02 13:19:34,877 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:19:34,877 | DEBUG: Data: None
2023-07-02 13:19:34,877 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:19:35,311 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6889
2023-07-02 13:19:35,318 | DEBUG: Response: 200 (6889 bytes)
2023-07-02 13:19:35,322 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nylh4/
2023-07-02 13:19:35,322 | DEBUG: Data: None
2023-07-02 13:19:35,322 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:19:36,526 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nylh4/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 30373
2023-07-02 13:19:36,528 | DEBUG: Response: 200 (30373 bytes)
2023-07-02 13:19:36,549 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nwyki/
2023-07-02 13:19:36,549 | DEBUG: Data: None
2023-07-02 13:19:36,549 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:19:38,357 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nwyki/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 44702
2023-07-02 13:19:38,557 | DEBUG: Response: 200 (44702 bytes)
2023-07-02 13:19:38,593 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:19:38,593 | DEBUG: Data: None
2023-07-02 13:19:38,594 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:19:38,992 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2260
2023-07-02 13:19:38,994 | DEBUG: Response: 200 (2260 bytes)
2023-07-02 13:19:38,996 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o1giu/
2023-07-02 13:19:38,996 | DEBUG: Data: None
2023-07-02 13:19:38,997 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:19:39,357 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o1giu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3175
2023-07-02 13:19:39,358 | DEBUG: Response: 200 (3175 bytes)
2023-07-02 13:19:39,359 | INFO: 127.0.0.1 - - [02/Jul/2023 13:19:39] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-02 13:19:39,366 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:19:39,367 | DEBUG: Data: None
2023-07-02 13:19:39,367 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:19:39,707 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1789
2023-07-02 13:19:39,708 | DEBUG: Response: 200 (1789 bytes)
2023-07-02 13:19:39,709 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:19:39,709 | DEBUG: Data: None
2023-07-02 13:19:39,709 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:19:40,048 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2260
2023-07-02 13:19:40,048 | DEBUG: Response: 200 (2260 bytes)
2023-07-02 13:19:40,049 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:19:40,049 | DEBUG: Data: None
2023-07-02 13:19:40,049 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:19:40,442 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6891
2023-07-02 13:19:40,443 | DEBUG: Response: 200 (6891 bytes)
2023-07-02 13:19:40,444 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nylh4/
2023-07-02 13:19:40,444 | DEBUG: Data: None
2023-07-02 13:19:40,444 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:19:41,826 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:19:41,826 | DEBUG: Data: None
2023-07-02 13:19:41,826 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:19:41,889 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nylh4/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 30359
2023-07-02 13:19:41,896 | DEBUG: Response: 200 (30359 bytes)
2023-07-02 13:19:41,926 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nwyki/
2023-07-02 13:19:41,927 | DEBUG: Data: None
2023-07-02 13:19:41,927 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:19:41,929 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:19:41,930 | DEBUG: Data: None
2023-07-02 13:19:41,930 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:19:42,094 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-02 13:19:42,095 | DEBUG: Response: 200 (136 bytes)
2023-07-02 13:19:42,096 | INFO: 127.0.0.1 - - [02/Jul/2023 13:19:42] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-02 13:19:42,256 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1789
2023-07-02 13:19:42,258 | DEBUG: Response: 200 (1789 bytes)
2023-07-02 13:19:42,261 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:19:42,261 | DEBUG: Data: None
2023-07-02 13:19:42,261 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:19:42,617 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2261
2023-07-02 13:19:42,619 | DEBUG: Response: 200 (2261 bytes)
2023-07-02 13:19:42,621 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:19:42,622 | DEBUG: Data: None
2023-07-02 13:19:42,622 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:19:42,767 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:19:42,768 | DEBUG: Data: None
2023-07-02 13:19:42,768 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:19:42,999 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6882
2023-07-02 13:19:43,017 | DEBUG: Response: 200 (6882 bytes)
2023-07-02 13:19:43,018 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nylh4/
2023-07-02 13:19:43,018 | DEBUG: Data: None
2023-07-02 13:19:43,019 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:19:43,074 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1789
2023-07-02 13:19:43,077 | DEBUG: Response: 200 (1789 bytes)
2023-07-02 13:19:43,079 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:19:43,079 | DEBUG: Data: None
2023-07-02 13:19:43,080 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:19:43,409 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nwyki/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 44731
2023-07-02 13:19:43,410 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2261
2023-07-02 13:19:43,412 | DEBUG: Response: 200 (2261 bytes)
2023-07-02 13:19:43,413 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:19:43,413 | DEBUG: Data: None
2023-07-02 13:19:43,413 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:19:43,613 | DEBUG: Response: 200 (44731 bytes)
2023-07-02 13:19:43,646 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:19:43,646 | DEBUG: Data: None
2023-07-02 13:19:43,646 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:19:43,962 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6889
2023-07-02 13:19:43,966 | DEBUG: Response: 200 (6889 bytes)
2023-07-02 13:19:43,967 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nylh4/
2023-07-02 13:19:43,967 | DEBUG: Data: None
2023-07-02 13:19:43,967 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:19:44,010 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2260
2023-07-02 13:19:44,010 | DEBUG: Response: 200 (2260 bytes)
2023-07-02 13:19:44,011 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o1giu/
2023-07-02 13:19:44,011 | DEBUG: Data: None
2023-07-02 13:19:44,011 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:19:44,356 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o1giu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3172
2023-07-02 13:19:44,357 | DEBUG: Response: 200 (3172 bytes)
2023-07-02 13:19:44,359 | INFO: 127.0.0.1 - - [02/Jul/2023 13:19:44] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-02 13:19:44,561 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nylh4/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 30362
2023-07-02 13:19:44,572 | DEBUG: Response: 200 (30362 bytes)
2023-07-02 13:19:44,594 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nwyki/
2023-07-02 13:19:44,595 | DEBUG: Data: None
2023-07-02 13:19:44,595 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:19:45,148 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nylh4/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 30372
2023-07-02 13:19:45,156 | DEBUG: Response: 200 (30372 bytes)
2023-07-02 13:19:45,172 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nwyki/
2023-07-02 13:19:45,172 | DEBUG: Data: None
2023-07-02 13:19:45,173 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:19:46,216 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nwyki/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 44717
2023-07-02 13:19:46,414 | DEBUG: Response: 200 (44717 bytes)
2023-07-02 13:19:46,455 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:19:46,455 | DEBUG: Data: None
2023-07-02 13:19:46,455 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:19:46,813 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2261
2023-07-02 13:19:46,814 | DEBUG: Response: 200 (2261 bytes)
2023-07-02 13:19:46,815 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o1giu/
2023-07-02 13:19:46,815 | DEBUG: Data: None
2023-07-02 13:19:46,815 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:19:47,083 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nwyki/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 44697
2023-07-02 13:19:47,182 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o1giu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3173
2023-07-02 13:19:47,183 | DEBUG: Response: 200 (3173 bytes)
2023-07-02 13:19:47,184 | INFO: 127.0.0.1 - - [02/Jul/2023 13:19:47] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-02 13:19:47,274 | DEBUG: Response: 200 (44697 bytes)
2023-07-02 13:19:47,310 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:19:47,310 | DEBUG: Data: None
2023-07-02 13:19:47,310 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:19:47,649 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2261
2023-07-02 13:19:47,650 | DEBUG: Response: 200 (2261 bytes)
2023-07-02 13:19:47,651 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o1giu/
2023-07-02 13:19:47,651 | DEBUG: Data: None
2023-07-02 13:19:47,651 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:19:47,986 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o1giu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3173
2023-07-02 13:19:47,988 | DEBUG: Response: 200 (3173 bytes)
2023-07-02 13:19:47,991 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:19:47,992 | DEBUG: Data: None
2023-07-02 13:19:47,992 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:19:48,313 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2166
2023-07-02 13:19:48,314 | DEBUG: Response: 200 (2166 bytes)
2023-07-02 13:19:48,315 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o4go1/
2023-07-02 13:19:48,315 | DEBUG: Data: None
2023-07-02 13:19:48,315 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:19:48,827 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o4go1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14953
2023-07-02 13:19:48,829 | DEBUG: Response: 200 (14953 bytes)
2023-07-02 13:19:48,834 | INFO: 127.0.0.1 - - [02/Jul/2023 13:19:48] "GET /watchlist?ticks=AMZN,TSLA,AMD HTTP/1.1" 200 -
2023-07-02 13:20:28,335 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:20:28,336 | DEBUG: Data: None
2023-07-02 13:20:28,336 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:20:28,760 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1789
2023-07-02 13:20:28,761 | DEBUG: Response: 200 (1789 bytes)
2023-07-02 13:20:28,761 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:20:28,761 | DEBUG: Data: None
2023-07-02 13:20:28,761 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:20:29,088 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2260
2023-07-02 13:20:29,089 | DEBUG: Response: 200 (2260 bytes)
2023-07-02 13:20:29,089 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:20:29,089 | DEBUG: Data: None
2023-07-02 13:20:29,090 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:20:29,536 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6889
2023-07-02 13:20:29,537 | DEBUG: Response: 200 (6889 bytes)
2023-07-02 13:20:29,538 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nylh4/
2023-07-02 13:20:29,538 | DEBUG: Data: None
2023-07-02 13:20:29,538 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:20:30,615 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nylh4/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 30347
2023-07-02 13:20:30,809 | DEBUG: Response: 200 (30347 bytes)
2023-07-02 13:20:30,829 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nwyki/
2023-07-02 13:20:30,830 | DEBUG: Data: None
2023-07-02 13:20:30,830 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:20:32,789 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nwyki/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 44797
2023-07-02 13:20:32,966 | DEBUG: Response: 200 (44797 bytes)
2023-07-02 13:20:32,995 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:20:32,995 | DEBUG: Data: None
2023-07-02 13:20:32,996 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:20:33,354 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2261
2023-07-02 13:20:33,355 | DEBUG: Response: 200 (2261 bytes)
2023-07-02 13:20:33,355 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o1giu/
2023-07-02 13:20:33,355 | DEBUG: Data: None
2023-07-02 13:20:33,355 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:20:33,677 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o1giu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3174
2023-07-02 13:20:33,678 | DEBUG: Response: 200 (3174 bytes)
2023-07-02 13:20:33,680 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:20:33,680 | DEBUG: Data: None
2023-07-02 13:20:33,680 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:20:34,025 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2166
2023-07-02 13:20:34,026 | DEBUG: Response: 200 (2166 bytes)
2023-07-02 13:20:34,027 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o4go1/
2023-07-02 13:20:34,027 | DEBUG: Data: None
2023-07-02 13:20:34,027 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:20:34,793 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o4go1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14954
2023-07-02 13:20:34,794 | DEBUG: Response: 200 (14954 bytes)
2023-07-02 13:20:34,799 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:20:34,799 | DEBUG: Data: None
2023-07-02 13:20:34,800 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:20:35,171 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-02 13:20:35,172 | DEBUG: Response: 200 (136 bytes)
2023-07-02 13:20:35,172 | INFO: 127.0.0.1 - - [02/Jul/2023 13:20:35] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-02 13:20:38,214 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:20:38,214 | DEBUG: Data: None
2023-07-02 13:20:38,215 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:20:38,536 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1793
2023-07-02 13:20:38,538 | DEBUG: Response: 200 (1793 bytes)
2023-07-02 13:20:38,539 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:20:38,539 | DEBUG: Data: None
2023-07-02 13:20:38,539 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:20:38,891 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2261
2023-07-02 13:20:38,892 | DEBUG: Response: 200 (2261 bytes)
2023-07-02 13:20:38,893 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:20:38,922 | DEBUG: Data: None
2023-07-02 13:20:38,922 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:20:39,327 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6889
2023-07-02 13:20:39,327 | DEBUG: Response: 200 (6889 bytes)
2023-07-02 13:20:39,330 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nylh4/
2023-07-02 13:20:39,330 | DEBUG: Data: None
2023-07-02 13:20:39,330 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:20:40,587 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nylh4/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 30347
2023-07-02 13:20:40,591 | DEBUG: Response: 200 (30347 bytes)
2023-07-02 13:20:40,609 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nwyki/
2023-07-02 13:20:40,609 | DEBUG: Data: None
2023-07-02 13:20:40,609 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:20:42,136 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nwyki/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 44821
2023-07-02 13:20:42,338 | DEBUG: Response: 200 (44821 bytes)
2023-07-02 13:20:42,371 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:20:42,371 | DEBUG: Data: None
2023-07-02 13:20:42,371 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:20:42,706 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2260
2023-07-02 13:20:42,708 | DEBUG: Response: 200 (2260 bytes)
2023-07-02 13:20:42,710 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o1giu/
2023-07-02 13:20:42,710 | DEBUG: Data: None
2023-07-02 13:20:42,710 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:20:43,056 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o1giu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3176
2023-07-02 13:20:43,058 | DEBUG: Response: 200 (3176 bytes)
2023-07-02 13:20:43,059 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:20:43,059 | DEBUG: Data: None
2023-07-02 13:20:43,059 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:20:43,427 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1788
2023-07-02 13:20:43,429 | DEBUG: Response: 200 (1788 bytes)
2023-07-02 13:20:43,432 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:20:43,432 | DEBUG: Data: None
2023-07-02 13:20:43,432 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:20:43,782 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2260
2023-07-02 13:20:43,783 | DEBUG: Response: 200 (2260 bytes)
2023-07-02 13:20:43,785 | INFO: 127.0.0.1 - - [02/Jul/2023 13:20:43] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-02 13:23:44,890 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:23:44,891 | DEBUG: Data: None
2023-07-02 13:23:44,891 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:23:45,203 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:23:45,203 | DEBUG: Data: None
2023-07-02 13:23:45,204 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:23:45,526 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1789
2023-07-02 13:23:45,529 | DEBUG: Response: 200 (1789 bytes)
2023-07-02 13:23:45,530 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:23:45,531 | DEBUG: Data: None
2023-07-02 13:23:45,531 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:23:45,579 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-02 13:23:45,580 | DEBUG: Response: 200 (136 bytes)
2023-07-02 13:23:45,581 | INFO: 127.0.0.1 - - [02/Jul/2023 13:23:45] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-02 13:23:45,855 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2261
2023-07-02 13:23:45,857 | DEBUG: Response: 200 (2261 bytes)
2023-07-02 13:23:45,861 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:23:45,861 | DEBUG: Data: None
2023-07-02 13:23:45,862 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:23:46,262 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6883
2023-07-02 13:23:46,264 | DEBUG: Response: 200 (6883 bytes)
2023-07-02 13:23:46,267 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nylh4/
2023-07-02 13:23:46,267 | DEBUG: Data: None
2023-07-02 13:23:46,267 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:23:46,394 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:23:46,395 | DEBUG: Data: None
2023-07-02 13:23:46,395 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:23:46,754 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1789
2023-07-02 13:23:46,841 | DEBUG: Response: 200 (1789 bytes)
2023-07-02 13:23:46,841 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:23:46,843 | DEBUG: Data: None
2023-07-02 13:23:46,843 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:23:47,179 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2261
2023-07-02 13:23:47,182 | DEBUG: Response: 200 (2261 bytes)
2023-07-02 13:23:47,182 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:23:47,182 | DEBUG: Data: None
2023-07-02 13:23:47,183 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:23:47,473 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nylh4/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 30560
2023-07-02 13:23:47,479 | DEBUG: Response: 200 (30560 bytes)
2023-07-02 13:23:47,511 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nwyki/
2023-07-02 13:23:47,512 | DEBUG: Data: None
2023-07-02 13:23:47,512 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:23:47,572 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6886
2023-07-02 13:23:47,575 | DEBUG: Response: 200 (6886 bytes)
2023-07-02 13:23:47,578 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nylh4/
2023-07-02 13:23:47,578 | DEBUG: Data: None
2023-07-02 13:23:47,578 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:23:48,748 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nylh4/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 30579
2023-07-02 13:23:48,754 | DEBUG: Response: 200 (30579 bytes)
2023-07-02 13:23:48,849 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nwyki/
2023-07-02 13:23:48,849 | DEBUG: Data: None
2023-07-02 13:23:48,849 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:23:49,133 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nwyki/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 44781
2023-07-02 13:23:49,332 | DEBUG: Response: 200 (44781 bytes)
2023-07-02 13:23:49,359 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:23:49,359 | DEBUG: Data: None
2023-07-02 13:23:49,359 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:23:49,687 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2260
2023-07-02 13:23:49,688 | DEBUG: Response: 200 (2260 bytes)
2023-07-02 13:23:49,690 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o1giu/
2023-07-02 13:23:49,690 | DEBUG: Data: None
2023-07-02 13:23:49,690 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:23:50,016 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o1giu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3419
2023-07-02 13:23:50,017 | DEBUG: Response: 200 (3419 bytes)
2023-07-02 13:23:50,018 | INFO: 127.0.0.1 - - [02/Jul/2023 13:23:50] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-02 13:23:50,338 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nwyki/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 44805
2023-07-02 13:23:50,540 | DEBUG: Response: 200 (44805 bytes)
2023-07-02 13:23:50,567 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:23:50,567 | DEBUG: Data: None
2023-07-02 13:23:50,567 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:23:50,931 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2260
2023-07-02 13:23:50,932 | DEBUG: Response: 200 (2260 bytes)
2023-07-02 13:23:50,933 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o1giu/
2023-07-02 13:23:50,933 | DEBUG: Data: None
2023-07-02 13:23:50,933 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:23:51,269 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o1giu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3419
2023-07-02 13:23:51,270 | DEBUG: Response: 200 (3419 bytes)
2023-07-02 13:23:51,271 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:23:51,272 | DEBUG: Data: None
2023-07-02 13:23:51,272 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:23:51,580 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2166
2023-07-02 13:23:51,581 | DEBUG: Response: 200 (2166 bytes)
2023-07-02 13:23:51,582 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o4go1/
2023-07-02 13:23:51,582 | DEBUG: Data: None
2023-07-02 13:23:51,582 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:23:52,080 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o4go1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 15317
2023-07-02 13:23:52,265 | DEBUG: Response: 200 (15317 bytes)
2023-07-02 13:23:52,273 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:23:52,273 | DEBUG: Data: None
2023-07-02 13:23:52,273 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:23:52,578 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-02 13:23:52,579 | DEBUG: Response: 200 (136 bytes)
2023-07-02 13:23:52,580 | INFO: 127.0.0.1 - - [02/Jul/2023 13:23:52] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-02 13:24:33,219 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:24:33,219 | DEBUG: Data: None
2023-07-02 13:24:33,219 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:24:33,406 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:24:33,407 | DEBUG: Data: None
2023-07-02 13:24:33,407 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:24:33,553 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1789
2023-07-02 13:24:33,555 | DEBUG: Response: 200 (1789 bytes)
2023-07-02 13:24:33,557 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:24:33,557 | DEBUG: Data: None
2023-07-02 13:24:33,558 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:24:33,809 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1788
2023-07-02 13:24:33,810 | DEBUG: Response: 200 (1788 bytes)
2023-07-02 13:24:33,811 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:24:33,811 | DEBUG: Data: None
2023-07-02 13:24:33,811 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:24:33,929 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2260
2023-07-02 13:24:33,931 | DEBUG: Response: 200 (2260 bytes)
2023-07-02 13:24:33,931 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:24:33,932 | DEBUG: Data: None
2023-07-02 13:24:33,932 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:24:34,157 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2260
2023-07-02 13:24:34,158 | DEBUG: Response: 200 (2260 bytes)
2023-07-02 13:24:34,159 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:24:34,159 | DEBUG: Data: None
2023-07-02 13:24:34,159 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:24:34,324 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6888
2023-07-02 13:24:34,325 | DEBUG: Response: 200 (6888 bytes)
2023-07-02 13:24:34,328 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nylh4/
2023-07-02 13:24:34,328 | DEBUG: Data: None
2023-07-02 13:24:34,328 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:24:34,566 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6885
2023-07-02 13:24:34,568 | DEBUG: Response: 200 (6885 bytes)
2023-07-02 13:24:34,572 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nylh4/
2023-07-02 13:24:34,572 | DEBUG: Data: None
2023-07-02 13:24:34,572 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:24:35,538 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nylh4/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 30571
2023-07-02 13:24:35,544 | DEBUG: Response: 200 (30571 bytes)
2023-07-02 13:24:35,592 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nwyki/
2023-07-02 13:24:35,593 | DEBUG: Data: None
2023-07-02 13:24:35,596 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:24:35,803 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nylh4/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 30568
2023-07-02 13:24:35,807 | DEBUG: Response: 200 (30568 bytes)
2023-07-02 13:24:35,830 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nwyki/
2023-07-02 13:24:35,830 | DEBUG: Data: None
2023-07-02 13:24:35,830 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:24:37,273 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nwyki/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 44822
2023-07-02 13:24:37,365 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nwyki/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 44818
2023-07-02 13:24:37,465 | DEBUG: Response: 200 (44822 bytes)
2023-07-02 13:24:37,495 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:24:37,495 | DEBUG: Data: None
2023-07-02 13:24:37,496 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:24:37,567 | DEBUG: Response: 200 (44818 bytes)
2023-07-02 13:24:37,599 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:24:37,599 | DEBUG: Data: None
2023-07-02 13:24:37,599 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:24:37,881 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2261
2023-07-02 13:24:37,883 | DEBUG: Response: 200 (2261 bytes)
2023-07-02 13:24:37,885 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o1giu/
2023-07-02 13:24:37,885 | DEBUG: Data: None
2023-07-02 13:24:37,885 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:24:37,959 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2260
2023-07-02 13:24:37,961 | DEBUG: Response: 200 (2260 bytes)
2023-07-02 13:24:37,963 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o1giu/
2023-07-02 13:24:37,964 | DEBUG: Data: None
2023-07-02 13:24:37,964 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:24:38,227 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o1giu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3418
2023-07-02 13:24:38,229 | DEBUG: Response: 200 (3418 bytes)
2023-07-02 13:24:38,232 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:24:38,232 | DEBUG: Data: None
2023-07-02 13:24:38,232 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:24:38,307 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o1giu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3418
2023-07-02 13:24:38,311 | DEBUG: Response: 200 (3418 bytes)
2023-07-02 13:24:38,314 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:24:38,314 | DEBUG: Data: None
2023-07-02 13:24:38,314 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:24:38,559 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2167
2023-07-02 13:24:38,561 | DEBUG: Response: 200 (2167 bytes)
2023-07-02 13:24:38,561 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o4go1/
2023-07-02 13:24:38,562 | DEBUG: Data: None
2023-07-02 13:24:38,562 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:24:38,725 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1789
2023-07-02 13:24:38,726 | DEBUG: Response: 200 (1789 bytes)
2023-07-02 13:24:38,727 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:24:38,727 | DEBUG: Data: None
2023-07-02 13:24:38,727 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:24:39,082 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2261
2023-07-02 13:24:39,083 | DEBUG: Response: 200 (2261 bytes)
2023-07-02 13:24:39,085 | INFO: 127.0.0.1 - - [02/Jul/2023 13:24:39] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-02 13:24:39,313 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o4go1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 15336
2023-07-02 13:24:39,320 | DEBUG: Response: 200 (15336 bytes)
2023-07-02 13:24:39,326 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:24:39,326 | DEBUG: Data: None
2023-07-02 13:24:39,326 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:24:39,652 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-02 13:24:39,655 | DEBUG: Response: 200 (136 bytes)
2023-07-02 13:24:39,657 | INFO: 127.0.0.1 - - [02/Jul/2023 13:24:39] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-02 13:24:39,696 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:24:39,696 | DEBUG: Data: None
2023-07-02 13:24:39,697 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:24:39,942 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:24:39,943 | DEBUG: Data: None
2023-07-02 13:24:39,943 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:24:39,968 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-02 13:24:39,970 | DEBUG: Response: 200 (136 bytes)
2023-07-02 13:24:39,972 | INFO: 127.0.0.1 - - [02/Jul/2023 13:24:39] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-02 13:24:40,263 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1788
2023-07-02 13:24:40,265 | DEBUG: Response: 200 (1788 bytes)
2023-07-02 13:24:40,266 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:24:40,266 | DEBUG: Data: None
2023-07-02 13:24:40,266 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:24:40,634 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2261
2023-07-02 13:24:40,636 | DEBUG: Response: 200 (2261 bytes)
2023-07-02 13:24:40,639 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:24:40,639 | DEBUG: Data: None
2023-07-02 13:24:40,639 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:24:41,011 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:24:41,011 | DEBUG: Data: None
2023-07-02 13:24:41,013 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:24:41,058 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6886
2023-07-02 13:24:41,060 | DEBUG: Response: 200 (6886 bytes)
2023-07-02 13:24:41,063 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nylh4/
2023-07-02 13:24:41,064 | DEBUG: Data: None
2023-07-02 13:24:41,064 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:24:41,325 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1789
2023-07-02 13:24:41,327 | DEBUG: Response: 200 (1789 bytes)
2023-07-02 13:24:41,328 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:24:41,328 | DEBUG: Data: None
2023-07-02 13:24:41,328 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:24:41,642 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2260
2023-07-02 13:24:41,643 | DEBUG: Response: 200 (2260 bytes)
2023-07-02 13:24:41,644 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:24:41,644 | DEBUG: Data: None
2023-07-02 13:24:41,644 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:24:42,054 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6884
2023-07-02 13:24:42,057 | DEBUG: Response: 200 (6884 bytes)
2023-07-02 13:24:42,061 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nylh4/
2023-07-02 13:24:42,061 | DEBUG: Data: None
2023-07-02 13:24:42,061 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:24:42,318 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nylh4/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 30568
2023-07-02 13:24:42,322 | DEBUG: Response: 200 (30568 bytes)
2023-07-02 13:24:42,347 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nwyki/
2023-07-02 13:24:42,347 | DEBUG: Data: None
2023-07-02 13:24:42,347 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:24:43,245 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nylh4/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 30561
2023-07-02 13:24:43,444 | DEBUG: Response: 200 (30561 bytes)
2023-07-02 13:24:43,467 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14nwyki/
2023-07-02 13:24:43,467 | DEBUG: Data: None
2023-07-02 13:24:43,467 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:24:43,956 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nwyki/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 44819
2023-07-02 13:24:44,222 | DEBUG: Response: 200 (44819 bytes)
2023-07-02 13:24:44,246 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:24:44,247 | DEBUG: Data: None
2023-07-02 13:24:44,247 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:24:44,567 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2260
2023-07-02 13:24:44,569 | DEBUG: Response: 200 (2260 bytes)
2023-07-02 13:24:44,571 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o1giu/
2023-07-02 13:24:44,571 | DEBUG: Data: None
2023-07-02 13:24:44,571 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:24:44,911 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o1giu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3418
2023-07-02 13:24:44,912 | DEBUG: Response: 200 (3418 bytes)
2023-07-02 13:24:44,913 | INFO: 127.0.0.1 - - [02/Jul/2023 13:24:44] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-02 13:24:45,016 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14nwyki/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 44807
2023-07-02 13:24:45,205 | DEBUG: Response: 200 (44807 bytes)
2023-07-02 13:24:45,228 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o2sli/
2023-07-02 13:24:45,228 | DEBUG: Data: None
2023-07-02 13:24:45,228 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:24:45,594 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o2sli/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 2260
2023-07-02 13:24:45,595 | DEBUG: Response: 200 (2260 bytes)
2023-07-02 13:24:45,596 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o1giu/
2023-07-02 13:24:45,596 | DEBUG: Data: None
2023-07-02 13:24:45,596 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:24:45,941 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o1giu/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3417
2023-07-02 13:24:45,942 | DEBUG: Response: 200 (3417 bytes)
2023-07-02 13:24:45,943 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:24:45,944 | DEBUG: Data: None
2023-07-02 13:24:45,944 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:24:46,258 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2166
2023-07-02 13:24:46,259 | DEBUG: Response: 200 (2166 bytes)
2023-07-02 13:24:46,259 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14o4go1/
2023-07-02 13:24:46,259 | DEBUG: Data: None
2023-07-02 13:24:46,259 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-02 13:24:46,916 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14o4go1/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 15343
2023-07-02 13:24:47,111 | DEBUG: Response: 200 (15343 bytes)
2023-07-02 13:24:47,122 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-02 13:24:47,122 | DEBUG: Data: None
2023-07-02 13:24:47,122 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-02 13:24:47,428 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-02 13:24:47,429 | DEBUG: Response: 200 (136 bytes)
2023-07-02 13:24:47,429 | INFO: 127.0.0.1 - - [02/Jul/2023 13:24:47] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-02 13:51:02,818 | INFO: 127.0.0.1 - - [02/Jul/2023 13:51:02] "[33mOPTIONS /exercises/ HTTP/1.1[0m" 404 -
2023-07-02 13:51:03,075 | INFO: 127.0.0.1 - - [02/Jul/2023 13:51:03] "[33mGET /exercises/ HTTP/1.1[0m" 404 -
2023-07-04 12:40:43,627 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-04 12:40:43,642 | INFO: [33mPress CTRL+C to quit[0m
2023-07-04 12:46:46,627 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-04 12:46:46,627 | INFO: [33mPress CTRL+C to quit[0m
2023-07-04 12:46:55,106 | INFO: 127.0.0.1 - - [04/Jul/2023 12:46:55] "[33mOPTIONS /predict HTTP/1.1[0m" 404 -
2023-07-04 12:48:45,887 | INFO: 127.0.0.1 - - [04/Jul/2023 12:48:45] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-04 12:48:46,142 | INFO: 127.0.0.1 - - [04/Jul/2023 12:48:46] "POST /forecast HTTP/1.1" 200 -
2023-07-04 13:06:38,493 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-04 13:06:38,493 | INFO: [33mPress CTRL+C to quit[0m
2023-07-04 13:06:44,322 | INFO: 127.0.0.1 - - [04/Jul/2023 13:06:44] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-04 13:06:44,576 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 75, in post
    CPS = args['changePointPriorScale']
KeyError: 'changePointPriorScale'
2023-07-04 13:06:44,612 | INFO: 127.0.0.1 - - [04/Jul/2023 13:06:44] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-04 13:06:50,067 | INFO: 127.0.0.1 - - [04/Jul/2023 13:06:50] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-04 13:06:50,380 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 75, in post
    CPS = args['changePointPriorScale']
KeyError: 'changePointPriorScale'
2023-07-04 13:06:50,380 | INFO: 127.0.0.1 - - [04/Jul/2023 13:06:50] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-04 13:09:25,876 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-04 13:09:25,876 | INFO: [33mPress CTRL+C to quit[0m
2023-07-04 13:09:31,740 | INFO: 127.0.0.1 - - [04/Jul/2023 13:09:31] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-04 13:09:31,996 | INFO: 127.0.0.1 - - [04/Jul/2023 13:09:31] "POST /forecast HTTP/1.1" 200 -
2023-07-04 13:10:35,880 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-04 13:10:35,881 | INFO: [33mPress CTRL+C to quit[0m
2023-07-04 13:10:38,383 | INFO: 127.0.0.1 - - [04/Jul/2023 13:10:38] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-04 13:10:38,639 | INFO: 127.0.0.1 - - [04/Jul/2023 13:10:38] "POST /forecast HTTP/1.1" 200 -
2023-07-04 13:27:07,255 | INFO: 127.0.0.1 - - [04/Jul/2023 13:27:07] "[31m[1mPOST /forecast?ticker=GME&changePointPriorScale=10&holidaysPriorScale=10&seasonalityMode=multiplicative&seasonalityPriorScale=10&dailySeasonalityFourierOrder=10&weeklySeasonalityFourierOrder=10&monthlySeasonalityFourierOrder=10&yearlySeasonalityFourierOrder=10&quaterlySeasonalityFourierOrder=10 HTTP/1.1[0m" 400 -
2023-07-04 13:28:52,988 | INFO: 127.0.0.1 - - [04/Jul/2023 13:28:52] "[31m[1mPOST /forecast HTTP/1.1[0m" 400 -
2023-07-04 13:31:04,291 | INFO: 127.0.0.1 - - [04/Jul/2023 13:31:04] "[31m[1mPOST /forecast HTTP/1.1[0m" 400 -
2023-07-04 13:31:28,053 | INFO: 127.0.0.1 - - [04/Jul/2023 13:31:28] "[31m[1mPOST /forecast HTTP/1.1[0m" 400 -
2023-07-04 13:32:08,393 | INFO: 127.0.0.1 - - [04/Jul/2023 13:32:08] "[31m[1mPOST /forecast HTTP/1.1[0m" 400 -
2023-07-04 13:32:55,512 | INFO: 127.0.0.1 - - [04/Jul/2023 13:32:55] "[31m[1mPOST /forecast HTTP/1.1[0m" 400 -
2023-07-04 13:33:29,922 | INFO: 127.0.0.1 - - [04/Jul/2023 13:33:29] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-04 13:33:30,178 | INFO: 127.0.0.1 - - [04/Jul/2023 13:33:30] "POST /forecast HTTP/1.1" 200 -
2023-07-04 13:38:37,130 | INFO: 127.0.0.1 - - [04/Jul/2023 13:38:37] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-04 13:38:37,383 | INFO: 127.0.0.1 - - [04/Jul/2023 13:38:37] "POST /forecast HTTP/1.1" 200 -
2023-07-04 13:38:50,216 | INFO: 127.0.0.1 - - [04/Jul/2023 13:38:50] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-04 13:38:50,470 | INFO: 127.0.0.1 - - [04/Jul/2023 13:38:50] "POST /forecast HTTP/1.1" 200 -
2023-07-04 13:42:36,373 | INFO: 127.0.0.1 - - [04/Jul/2023 13:42:36] "[31m[1mPOST /forecast HTTP/1.1[0m" 400 -
2023-07-04 13:45:21,772 | INFO: 127.0.0.1 - - [04/Jul/2023 13:45:21] "POST /forecast HTTP/1.1" 200 -
2023-07-04 13:45:55,853 | INFO: 127.0.0.1 - - [04/Jul/2023 13:45:55] "POST /forecast HTTP/1.1" 200 -
2023-07-04 13:46:01,770 | INFO: 127.0.0.1 - - [04/Jul/2023 13:46:01] "POST /forecast HTTP/1.1" 200 -
2023-07-04 18:55:09,810 | INFO: 127.0.0.1 - - [04/Jul/2023 18:55:09] "POST /forecast HTTP/1.1" 200 -
2023-07-04 19:37:36,523 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-04 19:37:36,528 | DEBUG: Data: None
2023-07-04 19:37:36,528 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-04 19:37:36,576 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-04 19:37:36,576 | DEBUG: Data: None
2023-07-04 19:37:36,576 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-04 19:37:36,594 | DEBUG: Starting new HTTPS connection (1): www.reddit.com:443
2023-07-04 19:37:36,597 | DEBUG: Starting new HTTPS connection (2): www.reddit.com:443
2023-07-04 19:37:37,113 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-04 19:37:37,113 | DEBUG: Data: None
2023-07-04 19:37:37,113 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-04 19:37:37,114 | DEBUG: Starting new HTTPS connection (3): www.reddit.com:443
2023-07-04 19:37:37,727 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 668
2023-07-04 19:37:37,745 | DEBUG: Starting new HTTPS connection (1): oauth.reddit.com:443
2023-07-04 19:37:37,778 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 669
2023-07-04 19:37:37,780 | DEBUG: Starting new HTTPS connection (2): oauth.reddit.com:443
2023-07-04 19:37:37,896 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 667
2023-07-04 19:37:37,900 | DEBUG: Starting new HTTPS connection (3): oauth.reddit.com:443
2023-07-04 19:37:38,149 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-04 19:37:38,152 | DEBUG: Response: 200 (136 bytes)
2023-07-04 19:37:38,154 | INFO: 127.0.0.1 - - [04/Jul/2023 19:37:38] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-04 19:37:38,267 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1767
2023-07-04 19:37:38,268 | DEBUG: Response: 200 (1767 bytes)
2023-07-04 19:37:38,268 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1767
2023-07-04 19:37:38,271 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ptseh/
2023-07-04 19:37:38,272 | DEBUG: Data: None
2023-07-04 19:37:38,272 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 19:37:38,272 | DEBUG: Response: 200 (1767 bytes)
2023-07-04 19:37:38,273 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ptseh/
2023-07-04 19:37:38,274 | DEBUG: Data: None
2023-07-04 19:37:38,274 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 19:37:38,600 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ptseh/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1786
2023-07-04 19:37:38,601 | DEBUG: Response: 200 (1786 bytes)
2023-07-04 19:37:38,602 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-04 19:37:38,602 | DEBUG: Data: None
2023-07-04 19:37:38,602 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-04 19:37:38,625 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ptseh/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1786
2023-07-04 19:37:38,627 | DEBUG: Response: 200 (1786 bytes)
2023-07-04 19:37:38,629 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-04 19:37:38,629 | DEBUG: Data: None
2023-07-04 19:37:38,629 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-04 19:37:39,010 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5866
2023-07-04 19:37:39,011 | DEBUG: Response: 200 (5866 bytes)
2023-07-04 19:37:39,016 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-04 19:37:39,017 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5881
2023-07-04 19:37:39,017 | DEBUG: Data: None
2023-07-04 19:37:39,018 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 19:37:39,018 | DEBUG: Response: 200 (5881 bytes)
2023-07-04 19:37:39,019 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-04 19:37:39,019 | DEBUG: Data: None
2023-07-04 19:37:39,019 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 19:37:40,235 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 22034
2023-07-04 19:37:40,245 | DEBUG: Response: 200 (22034 bytes)
2023-07-04 19:37:40,317 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14puvpc/
2023-07-04 19:37:40,317 | DEBUG: Data: None
2023-07-04 19:37:40,317 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 19:37:40,367 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 22028
2023-07-04 19:37:40,372 | DEBUG: Response: 200 (22028 bytes)
2023-07-04 19:37:40,607 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14puvpc/
2023-07-04 19:37:40,607 | DEBUG: Data: None
2023-07-04 19:37:40,607 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 19:37:40,864 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14puvpc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 12260
2023-07-04 19:37:40,874 | DEBUG: Response: 200 (12260 bytes)
2023-07-04 19:37:40,878 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-04 19:37:40,878 | DEBUG: Data: None
2023-07-04 19:37:40,878 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 19:37:41,244 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14puvpc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 12269
2023-07-04 19:37:41,247 | DEBUG: Response: 200 (12269 bytes)
2023-07-04 19:37:41,252 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-04 19:37:41,252 | DEBUG: Data: None
2023-07-04 19:37:41,252 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 19:37:41,671 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 12253
2023-07-04 19:37:41,672 | DEBUG: Response: 200 (12253 bytes)
2023-07-04 19:37:41,677 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-04 19:37:41,677 | DEBUG: Data: None
2023-07-04 19:37:41,677 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 19:37:42,015 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3663
2023-07-04 19:37:42,016 | DEBUG: Response: 200 (3663 bytes)
2023-07-04 19:37:42,017 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ptseh/
2023-07-04 19:37:42,017 | DEBUG: Data: None
2023-07-04 19:37:42,017 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 19:37:42,052 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 12261
2023-07-04 19:37:42,056 | DEBUG: Response: 200 (12261 bytes)
2023-07-04 19:37:42,060 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-04 19:37:42,060 | DEBUG: Data: None
2023-07-04 19:37:42,060 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 19:37:42,399 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3658
2023-07-04 19:37:42,400 | DEBUG: Response: 200 (3658 bytes)
2023-07-04 19:37:42,401 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ptseh/
2023-07-04 19:37:42,401 | DEBUG: Data: None
2023-07-04 19:37:42,401 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 19:37:42,703 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ptseh/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1785
2023-07-04 19:37:42,704 | DEBUG: Response: 200 (1785 bytes)
2023-07-04 19:37:42,705 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-04 19:37:42,705 | DEBUG: Data: None
2023-07-04 19:37:42,705 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-04 19:37:42,725 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ptseh/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1786
2023-07-04 19:37:42,726 | DEBUG: Response: 200 (1786 bytes)
2023-07-04 19:37:42,726 | INFO: 127.0.0.1 - - [04/Jul/2023 19:37:42] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-04 19:37:43,023 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-04 19:37:43,024 | DEBUG: Response: 200 (136 bytes)
2023-07-04 19:37:43,024 | INFO: 127.0.0.1 - - [04/Jul/2023 19:37:43] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-04 19:43:00,638 | INFO: 127.0.0.1 - - [04/Jul/2023 19:43:00] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-04 19:43:00,904 | INFO: 127.0.0.1 - - [04/Jul/2023 19:43:00] "POST /forecast HTTP/1.1" 200 -
2023-07-04 19:44:36,564 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-04 19:44:36,564 | INFO: [33mPress CTRL+C to quit[0m
2023-07-04 19:45:10,091 | INFO: 127.0.0.1 - - [04/Jul/2023 19:45:10] "POST /forecast HTTP/1.1" 200 -
2023-07-04 19:49:40,740 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-04 19:49:40,750 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-04 19:49:40,751 | DEBUG: interactive is False
2023-07-04 19:49:40,752 | DEBUG: platform is win32
2023-07-04 19:49:40,752 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-04 19:49:40,855 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-04 19:49:40,866 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-04 19:49:41,710 | DEBUG: Loaded backend qtagg version unknown.
2023-07-04 19:49:41,710 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-04 19:49:41,743 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-04 19:49:41,743 | INFO: [33mPress CTRL+C to quit[0m
2023-07-04 19:49:44,872 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-04 19:49:45,702 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688480384&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-04 19:49:48,751 | INFO: 127.0.0.1 - - [04/Jul/2023 19:49:48] "POST /forecast HTTP/1.1" 200 -
2023-07-04 20:11:09,346 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-04 20:11:09,349 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-04 20:11:09,350 | DEBUG: interactive is False
2023-07-04 20:11:09,350 | DEBUG: platform is win32
2023-07-04 20:11:09,350 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-04 20:11:09,439 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-04 20:11:09,442 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-04 20:11:09,838 | DEBUG: Loaded backend qtagg version unknown.
2023-07-04 20:11:09,838 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-04 20:11:09,860 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-04 20:11:09,860 | INFO: [33mPress CTRL+C to quit[0m
2023-07-04 20:11:17,598 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-04 20:11:17,760 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688481677&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-04 20:11:18,101 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 25, in getForecast
    model = Prophet(growth="linear",changepoint_prior_scale=int(CPS),
  File "C:\Python310\lib\site-packages\prophet\forecaster.py", line 142, in __init__
    self.validate_inputs()
  File "C:\Python310\lib\site-packages\prophet\forecaster.py", line 194, in validate_inputs
    raise ValueError(
ValueError: seasonality_mode must be "additive" or "multiplicative"
2023-07-04 20:11:18,141 | INFO: 127.0.0.1 - - [04/Jul/2023 20:11:18] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-04 20:14:54,506 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-04 20:14:54,810 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688481894&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-04 20:14:55,106 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-04 20:14:55,272 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-04 20:14:55,885 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp_79nveh9\to46e9u9.json
2023-07-04 20:14:59,189 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp_79nveh9\ho0o8tpz.json
2023-07-04 20:14:59,197 | DEBUG: idx 0
2023-07-04 20:14:59,197 | DEBUG: running CmdStan, num_threads: None
2023-07-04 20:14:59,197 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=72275', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp_79nveh9\\to46e9u9.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp_79nveh9\\ho0o8tpz.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp_79nveh9\\prophet_modely7oe6cxu\\prophet_model-20230704201459.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-04 20:14:59,197 | INFO: Chain [1] start processing
2023-07-04 20:15:28,025 | INFO: Chain [1] done processing
2023-07-04 20:15:28,085 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 42, in getForecast
    fut = model.make_future_dataframe(periods=365/4)
  File "C:\Python310\lib\site-packages\prophet\forecaster.py", line 1808, in make_future_dataframe
    dates = dates[:periods]  # Return correct number of periods
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\indexes\extension.py", line 279, in __getitem__
    result = self._data[key]
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\arrays\datetimelike.py", line 322, in __getitem__
    result = super().__getitem__(key)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\arrays\_mixins.py", line 207, in __getitem__
    result = self._ndarray[key]
TypeError: slice indices must be integers or None or have an __index__ method
2023-07-04 20:15:28,110 | INFO: 127.0.0.1 - - [04/Jul/2023 20:15:28] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-04 20:17:31,326 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-04 20:17:31,713 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688482051&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-04 20:17:31,972 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-04 20:17:32,081 | DEBUG: TBB already found in load path
2023-07-04 20:17:32,299 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp_79nveh9\0qe8wsg1.json
2023-07-04 20:17:35,129 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp_79nveh9\g48f2op_.json
2023-07-04 20:17:35,130 | DEBUG: idx 0
2023-07-04 20:17:35,130 | DEBUG: running CmdStan, num_threads: None
2023-07-04 20:17:35,130 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=83128', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp_79nveh9\\0qe8wsg1.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp_79nveh9\\g48f2op_.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp_79nveh9\\prophet_model140l6d5b\\prophet_model-20230704201735.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-04 20:17:35,130 | INFO: Chain [1] start processing
2023-07-04 20:17:54,524 | INFO: Chain [1] done processing
2023-07-04 20:17:54,587 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 42, in getForecast
    fut = model.make_future_dataframe(periods=92)
  File "C:\Python310\lib\site-packages\prophet\forecaster.py", line 1808, in make_future_dataframe
    dates = dates[:periods]  # Return correct number of periods
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\indexes\extension.py", line 279, in __getitem__
    result = self._data[key]
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\arrays\datetimelike.py", line 322, in __getitem__
    result = super().__getitem__(key)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\arrays\_mixins.py", line 207, in __getitem__
    result = self._ndarray[key]
TypeError: slice indices must be integers or None or have an __index__ method
2023-07-04 20:17:54,593 | INFO: 127.0.0.1 - - [04/Jul/2023 20:17:54] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-04 20:19:02,387 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-04 20:19:03,312 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688482142&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-04 20:19:03,602 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-04 20:19:03,700 | DEBUG: TBB already found in load path
2023-07-04 20:19:03,943 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp_79nveh9\emtz0ezl.json
2023-07-04 20:19:06,678 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp_79nveh9\3osrq6pu.json
2023-07-04 20:19:06,680 | DEBUG: idx 0
2023-07-04 20:19:06,681 | DEBUG: running CmdStan, num_threads: None
2023-07-04 20:19:06,681 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=65381', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp_79nveh9\\emtz0ezl.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp_79nveh9\\3osrq6pu.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp_79nveh9\\prophet_modelppoukwgi\\prophet_model-20230704201906.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-04 20:19:06,681 | INFO: Chain [1] start processing
2023-07-04 20:19:26,556 | INFO: Chain [1] done processing
2023-07-04 20:19:26,612 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 42, in getForecast
    fut = model.make_future_dataframe(periods=365)
  File "C:\Python310\lib\site-packages\prophet\forecaster.py", line 1808, in make_future_dataframe
    dates = dates[:periods]  # Return correct number of periods
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\indexes\extension.py", line 279, in __getitem__
    result = self._data[key]
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\arrays\datetimelike.py", line 322, in __getitem__
    result = super().__getitem__(key)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\arrays\_mixins.py", line 207, in __getitem__
    result = self._ndarray[key]
TypeError: slice indices must be integers or None or have an __index__ method
2023-07-04 20:19:26,619 | INFO: 127.0.0.1 - - [04/Jul/2023 20:19:26] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-04 20:21:14,360 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-04 20:21:14,363 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-04 20:21:14,364 | DEBUG: interactive is False
2023-07-04 20:21:14,364 | DEBUG: platform is win32
2023-07-04 20:21:14,365 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-04 20:21:14,451 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-04 20:21:14,454 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-04 20:21:14,842 | DEBUG: Loaded backend qtagg version unknown.
2023-07-04 20:21:14,843 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-04 20:21:14,863 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-04 20:21:14,864 | INFO: [33mPress CTRL+C to quit[0m
2023-07-04 20:21:19,703 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-04 20:21:20,776 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688482279&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-04 20:21:21,186 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-04 20:21:21,289 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-04 20:21:21,647 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp5ncpkwh7\0v6jr_op.json
2023-07-04 20:21:24,911 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp5ncpkwh7\rn7ao7_u.json
2023-07-04 20:21:24,917 | DEBUG: idx 0
2023-07-04 20:21:24,918 | DEBUG: running CmdStan, num_threads: None
2023-07-04 20:21:24,918 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=18053', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp5ncpkwh7\\0v6jr_op.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp5ncpkwh7\\rn7ao7_u.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp5ncpkwh7\\prophet_model0yvku94b\\prophet_model-20230704202124.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-04 20:21:24,918 | INFO: Chain [1] start processing
2023-07-04 20:21:51,760 | INFO: Chain [1] done processing
2023-07-04 20:21:54,141 | ERROR: Error importing optional module nbformat
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\_plotly_utils\optional_imports.py", line 30, in get_module
    return import_module(name)
  File "C:\Python310\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "C:\Python310\lib\site-packages\nbformat\__init__.py", line 32, in <module>
    from .validator import validate, ValidationError
  File "C:\Python310\lib\site-packages\nbformat\validator.py", line 12, in <module>
    from .json_compat import get_current_validator, ValidationError
  File "C:\Python310\lib\site-packages\nbformat\json_compat.py", line 10, in <module>
    import jsonschema
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\jsonschema\__init__.py", line 11, in <module>
    from jsonschema.exceptions import (
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\jsonschema\exceptions.py", line 152, in <module>
    @attr.s(hash=True)
AttributeError: module 'attr' has no attribute 's'
2023-07-04 20:21:55,089 | INFO: 127.0.0.1 - - [04/Jul/2023 20:21:55] "POST /forecast HTTP/1.1" 200 -
2023-07-04 20:24:43,139 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-04 20:24:43,488 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688482483&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-04 20:24:43,729 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-04 20:24:43,859 | DEBUG: TBB already found in load path
2023-07-04 20:24:44,062 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp5ncpkwh7\74pg3biz.json
2023-07-04 20:24:47,037 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp5ncpkwh7\8_4a1bx1.json
2023-07-04 20:24:47,040 | DEBUG: idx 0
2023-07-04 20:24:47,040 | DEBUG: running CmdStan, num_threads: None
2023-07-04 20:24:47,040 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=41716', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp5ncpkwh7\\74pg3biz.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp5ncpkwh7\\8_4a1bx1.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp5ncpkwh7\\prophet_modelq7__oawk\\prophet_model-20230704202447.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-04 20:24:47,040 | INFO: Chain [1] start processing
2023-07-04 20:25:14,422 | INFO: Chain [1] done processing
2023-07-04 20:25:17,057 | INFO: 127.0.0.1 - - [04/Jul/2023 20:25:17] "POST /forecast HTTP/1.1" 200 -
2023-07-04 20:26:43,490 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-04 20:26:44,024 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688482603&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-04 20:26:44,283 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-04 20:26:44,420 | DEBUG: TBB already found in load path
2023-07-04 20:26:44,594 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp5ncpkwh7\0tcmwobq.json
2023-07-04 20:26:46,894 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp5ncpkwh7\r5mvb5kz.json
2023-07-04 20:26:46,897 | DEBUG: idx 0
2023-07-04 20:26:46,898 | DEBUG: running CmdStan, num_threads: None
2023-07-04 20:26:46,898 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=5107', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp5ncpkwh7\\0tcmwobq.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp5ncpkwh7\\r5mvb5kz.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp5ncpkwh7\\prophet_modellrpgzc_i\\prophet_model-20230704202646.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-04 20:26:46,898 | INFO: Chain [1] start processing
2023-07-04 20:27:06,702 | INFO: Chain [1] done processing
2023-07-04 20:27:09,162 | INFO: 127.0.0.1 - - [04/Jul/2023 20:27:09] "POST /forecast HTTP/1.1" 200 -
2023-07-04 20:28:13,540 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-04 20:28:13,966 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688482693&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-04 20:28:14,214 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-04 20:28:14,340 | DEBUG: TBB already found in load path
2023-07-04 20:28:14,471 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp5ncpkwh7\6uee211m.json
2023-07-04 20:28:15,553 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp5ncpkwh7\8_xzn4ew.json
2023-07-04 20:28:15,554 | DEBUG: idx 0
2023-07-04 20:28:15,555 | DEBUG: running CmdStan, num_threads: None
2023-07-04 20:28:15,555 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=35397', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp5ncpkwh7\\6uee211m.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp5ncpkwh7\\8_xzn4ew.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp5ncpkwh7\\prophet_model1nvsp3al\\prophet_model-20230704202815.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-04 20:28:15,555 | INFO: Chain [1] start processing
2023-07-04 20:28:22,727 | INFO: Chain [1] done processing
2023-07-04 20:28:25,103 | INFO: 127.0.0.1 - - [04/Jul/2023 20:28:25] "POST /forecast HTTP/1.1" 200 -
2023-07-04 22:32:50,737 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-04 22:32:50,749 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-04 22:32:50,779 | DEBUG: Data: None
2023-07-04 22:32:50,779 | DEBUG: Data: None
2023-07-04 22:32:50,780 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-04 22:32:50,780 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-04 22:32:50,825 | DEBUG: Starting new HTTPS connection (1): www.reddit.com:443
2023-07-04 22:32:50,827 | DEBUG: Starting new HTTPS connection (2): www.reddit.com:443
2023-07-04 22:32:51,198 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-04 22:32:51,198 | DEBUG: Data: None
2023-07-04 22:32:51,198 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-04 22:32:51,239 | DEBUG: Starting new HTTPS connection (3): www.reddit.com:443
2023-07-04 22:32:51,892 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 665
2023-07-04 22:32:51,906 | DEBUG: Starting new HTTPS connection (1): oauth.reddit.com:443
2023-07-04 22:32:52,056 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 678
2023-07-04 22:32:52,061 | DEBUG: Starting new HTTPS connection (2): oauth.reddit.com:443
2023-07-04 22:32:52,342 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1767
2023-07-04 22:32:52,346 | DEBUG: Response: 200 (1767 bytes)
2023-07-04 22:32:52,367 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ptseh/
2023-07-04 22:32:52,367 | DEBUG: Data: None
2023-07-04 22:32:52,367 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 22:32:52,461 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1768
2023-07-04 22:32:52,464 | DEBUG: Response: 200 (1768 bytes)
2023-07-04 22:32:52,466 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ptseh/
2023-07-04 22:32:52,466 | DEBUG: Data: None
2023-07-04 22:32:52,466 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 22:32:52,578 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 669
2023-07-04 22:32:52,587 | DEBUG: Starting new HTTPS connection (3): oauth.reddit.com:443
2023-07-04 22:32:52,678 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ptseh/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1786
2023-07-04 22:32:52,680 | DEBUG: Response: 200 (1786 bytes)
2023-07-04 22:32:52,683 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-04 22:32:52,683 | DEBUG: Data: None
2023-07-04 22:32:52,683 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-04 22:32:52,779 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ptseh/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1785
2023-07-04 22:32:52,782 | DEBUG: Response: 200 (1785 bytes)
2023-07-04 22:32:52,784 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-04 22:32:52,784 | DEBUG: Data: None
2023-07-04 22:32:52,785 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-04 22:32:52,924 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-04 22:32:52,925 | DEBUG: Response: 200 (136 bytes)
2023-07-04 22:32:52,934 | INFO: 127.0.0.1 - - [04/Jul/2023 22:32:52] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-04 22:32:52,939 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-04 22:32:52,939 | DEBUG: Data: None
2023-07-04 22:32:52,940 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-04 22:32:53,152 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5879
2023-07-04 22:32:53,155 | DEBUG: Response: 200 (5879 bytes)
2023-07-04 22:32:53,159 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-04 22:32:53,159 | DEBUG: Data: None
2023-07-04 22:32:53,159 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 22:32:53,195 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-04 22:32:53,196 | DEBUG: Response: 200 (136 bytes)
2023-07-04 22:32:53,198 | INFO: 127.0.0.1 - - [04/Jul/2023 22:32:53] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-04 22:32:53,204 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5886
2023-07-04 22:32:53,205 | DEBUG: Response: 200 (5886 bytes)
2023-07-04 22:32:53,207 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-04 22:32:53,207 | DEBUG: Data: None
2023-07-04 22:32:53,207 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 22:32:54,305 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 29936
2023-07-04 22:32:54,403 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-04 22:32:54,403 | DEBUG: Data: None
2023-07-04 22:32:54,403 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-04 22:32:54,407 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-04 22:32:54,409 | DEBUG: Data: None
2023-07-04 22:32:54,411 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-04 22:32:54,417 | DEBUG: Starting new HTTPS connection (4): oauth.reddit.com:443
2023-07-04 22:32:54,497 | DEBUG: Response: 200 (29936 bytes)
2023-07-04 22:32:54,521 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14puvpc/
2023-07-04 22:32:54,522 | DEBUG: Data: None
2023-07-04 22:32:54,522 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 22:32:54,522 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 29926
2023-07-04 22:32:54,527 | DEBUG: Response: 200 (29926 bytes)
2023-07-04 22:32:54,552 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14puvpc/
2023-07-04 22:32:54,552 | DEBUG: Data: None
2023-07-04 22:32:54,553 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 22:32:54,754 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1768
2023-07-04 22:32:54,755 | DEBUG: Response: 200 (1768 bytes)
2023-07-04 22:32:54,755 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ptseh/
2023-07-04 22:32:54,756 | DEBUG: Data: None
2023-07-04 22:32:54,756 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 22:32:54,816 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 1767
2023-07-04 22:32:54,818 | DEBUG: Response: 200 (1767 bytes)
2023-07-04 22:32:54,819 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ptseh/
2023-07-04 22:32:54,819 | DEBUG: Data: None
2023-07-04 22:32:54,819 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 22:32:55,073 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14puvpc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 12240
2023-07-04 22:32:55,076 | DEBUG: Response: 200 (12240 bytes)
2023-07-04 22:32:55,082 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-04 22:32:55,082 | DEBUG: Data: None
2023-07-04 22:32:55,082 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 22:32:55,082 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ptseh/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1785
2023-07-04 22:32:55,084 | DEBUG: Response: 200 (1785 bytes)
2023-07-04 22:32:55,085 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-04 22:32:55,085 | DEBUG: Data: None
2023-07-04 22:32:55,085 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-04 22:32:55,186 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14puvpc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 12240
2023-07-04 22:32:55,188 | DEBUG: Response: 200 (12240 bytes)
2023-07-04 22:32:55,195 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-04 22:32:55,196 | DEBUG: Data: None
2023-07-04 22:32:55,196 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 22:32:55,306 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ptseh/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1787
2023-07-04 22:32:55,307 | DEBUG: Response: 200 (1787 bytes)
2023-07-04 22:32:55,308 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-04 22:32:55,308 | DEBUG: Data: None
2023-07-04 22:32:55,308 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-04 22:32:55,449 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5887
2023-07-04 22:32:55,450 | DEBUG: Response: 200 (5887 bytes)
2023-07-04 22:32:55,451 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-04 22:32:55,451 | DEBUG: Data: None
2023-07-04 22:32:55,451 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 22:32:55,655 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 12787
2023-07-04 22:32:55,662 | DEBUG: Response: 200 (12787 bytes)
2023-07-04 22:32:55,675 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-04 22:32:55,675 | DEBUG: Data: None
2023-07-04 22:32:55,675 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 22:32:55,696 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5886
2023-07-04 22:32:55,702 | DEBUG: Response: 200 (5886 bytes)
2023-07-04 22:32:55,705 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-04 22:32:55,705 | DEBUG: Data: None
2023-07-04 22:32:55,705 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 22:32:55,748 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 12789
2023-07-04 22:32:55,751 | DEBUG: Response: 200 (12789 bytes)
2023-07-04 22:32:55,761 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-04 22:32:55,761 | DEBUG: Data: None
2023-07-04 22:32:55,761 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 22:32:56,005 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4024
2023-07-04 22:32:56,011 | DEBUG: Response: 200 (4024 bytes)
2023-07-04 22:32:56,014 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ptseh/
2023-07-04 22:32:56,014 | DEBUG: Data: None
2023-07-04 22:32:56,014 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 22:32:56,113 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4024
2023-07-04 22:32:56,114 | DEBUG: Response: 200 (4024 bytes)
2023-07-04 22:32:56,116 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ptseh/
2023-07-04 22:32:56,116 | DEBUG: Data: None
2023-07-04 22:32:56,116 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 22:32:56,335 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ptseh/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1786
2023-07-04 22:32:56,336 | DEBUG: Response: 200 (1786 bytes)
2023-07-04 22:32:56,337 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-04 22:32:56,337 | DEBUG: Data: None
2023-07-04 22:32:56,337 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-04 22:32:56,429 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ptseh/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1785
2023-07-04 22:32:56,430 | DEBUG: Response: 200 (1785 bytes)
2023-07-04 22:32:56,431 | INFO: 127.0.0.1 - - [04/Jul/2023 22:32:56] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-04 22:32:56,663 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 29909
2023-07-04 22:32:56,671 | DEBUG: Response: 200 (29909 bytes)
2023-07-04 22:32:56,692 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14puvpc/
2023-07-04 22:32:56,692 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-04 22:32:56,693 | DEBUG: Data: None
2023-07-04 22:32:56,694 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 22:32:56,693 | DEBUG: Response: 200 (136 bytes)
2023-07-04 22:32:56,695 | INFO: 127.0.0.1 - - [04/Jul/2023 22:32:56] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-04 22:32:57,163 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 29930
2023-07-04 22:32:57,179 | DEBUG: Response: 200 (29930 bytes)
2023-07-04 22:32:57,196 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14puvpc/
2023-07-04 22:32:57,197 | DEBUG: Data: None
2023-07-04 22:32:57,197 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 22:32:57,507 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14puvpc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 12255
2023-07-04 22:32:57,516 | DEBUG: Response: 200 (12255 bytes)
2023-07-04 22:32:57,529 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-04 22:32:57,530 | DEBUG: Data: None
2023-07-04 22:32:57,530 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 22:32:58,074 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14puvpc/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 12238
2023-07-04 22:32:58,085 | DEBUG: Response: 200 (12238 bytes)
2023-07-04 22:32:58,094 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-04 22:32:58,094 | DEBUG: Data: None
2023-07-04 22:32:58,094 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 22:32:58,154 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 12784
2023-07-04 22:32:58,198 | DEBUG: Response: 200 (12784 bytes)
2023-07-04 22:32:58,206 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-04 22:32:58,206 | DEBUG: Data: None
2023-07-04 22:32:58,206 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 22:32:58,576 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4024
2023-07-04 22:32:58,577 | DEBUG: Response: 200 (4024 bytes)
2023-07-04 22:32:58,579 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ptseh/
2023-07-04 22:32:58,579 | DEBUG: Data: None
2023-07-04 22:32:58,580 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 22:32:58,743 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 12771
2023-07-04 22:32:58,775 | DEBUG: Response: 200 (12771 bytes)
2023-07-04 22:32:58,782 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-04 22:32:58,782 | DEBUG: Data: None
2023-07-04 22:32:58,782 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 22:32:58,886 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ptseh/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1786
2023-07-04 22:32:58,887 | DEBUG: Response: 200 (1786 bytes)
2023-07-04 22:32:58,888 | INFO: 127.0.0.1 - - [04/Jul/2023 22:32:58] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-04 22:32:59,216 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4024
2023-07-04 22:32:59,218 | DEBUG: Response: 200 (4024 bytes)
2023-07-04 22:32:59,220 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14ptseh/
2023-07-04 22:32:59,220 | DEBUG: Data: None
2023-07-04 22:32:59,220 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-04 22:32:59,527 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14ptseh/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 1785
2023-07-04 22:32:59,528 | DEBUG: Response: 200 (1785 bytes)
2023-07-04 22:32:59,529 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-04 22:32:59,529 | DEBUG: Data: None
2023-07-04 22:32:59,529 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-04 22:32:59,890 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-04 22:32:59,892 | DEBUG: Response: 200 (136 bytes)
2023-07-04 22:32:59,893 | INFO: 127.0.0.1 - - [04/Jul/2023 22:32:59] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 01:30:06,738 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 01:30:06,758 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 01:30:06,760 | DEBUG: interactive is False
2023-07-05 01:30:06,760 | DEBUG: platform is win32
2023-07-05 01:30:06,760 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'shlex', 'netrc', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 01:30:06,857 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 01:30:06,864 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 01:30:07,678 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 01:30:07,678 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 01:30:07,717 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 01:30:07,717 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 01:30:27,888 | INFO: 127.0.0.1 - - [05/Jul/2023 01:30:27] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 01:30:28,151 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 01:30:28,521 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688500828&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 01:30:30,581 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 25, in getForecast
    model = Prophet(growth="linear",changepoint_prior_scale=int(CPS),
  File "C:\Python310\lib\site-packages\prophet\forecaster.py", line 142, in __init__
    self.validate_inputs()
  File "C:\Python310\lib\site-packages\prophet\forecaster.py", line 194, in validate_inputs
    raise ValueError(
ValueError: seasonality_mode must be "additive" or "multiplicative"
2023-07-05 01:30:30,647 | INFO: 127.0.0.1 - - [05/Jul/2023 01:30:30] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 01:31:24,419 | INFO: 127.0.0.1 - - [05/Jul/2023 01:31:24] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 01:31:24,689 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 01:31:24,836 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688500884&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 01:31:25,181 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 01:31:25,453 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 01:31:25,799 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpia_tcc9n\g1yk9mxx.json
2023-07-05 01:31:28,626 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpia_tcc9n\7thic38f.json
2023-07-05 01:31:28,628 | DEBUG: idx 0
2023-07-05 01:31:28,628 | DEBUG: running CmdStan, num_threads: None
2023-07-05 01:31:28,629 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=38195', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpia_tcc9n\\g1yk9mxx.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpia_tcc9n\\7thic38f.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpia_tcc9n\\prophet_modeligfqgido\\prophet_model-20230705013128.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 01:31:28,629 | INFO: Chain [1] start processing
2023-07-05 01:31:45,259 | INFO: Chain [1] done processing
2023-07-05 01:31:47,602 | ERROR: Error importing optional module nbformat
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\_plotly_utils\optional_imports.py", line 30, in get_module
    return import_module(name)
  File "C:\Python310\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "C:\Python310\lib\site-packages\nbformat\__init__.py", line 32, in <module>
    from .validator import validate, ValidationError
  File "C:\Python310\lib\site-packages\nbformat\validator.py", line 12, in <module>
    from .json_compat import get_current_validator, ValidationError
  File "C:\Python310\lib\site-packages\nbformat\json_compat.py", line 10, in <module>
    import jsonschema
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\jsonschema\__init__.py", line 11, in <module>
    from jsonschema.exceptions import (
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\jsonschema\exceptions.py", line 152, in <module>
    @attr.s(hash=True)
AttributeError: module 'attr' has no attribute 's'
2023-07-05 01:31:48,322 | INFO: 127.0.0.1 - - [05/Jul/2023 01:31:48] "POST /forecast HTTP/1.1" 200 -
2023-07-05 01:32:32,329 | INFO: 127.0.0.1 - - [05/Jul/2023 01:32:32] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 01:32:32,603 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 01:32:32,849 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688500952&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 01:32:33,076 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 01:32:33,174 | DEBUG: TBB already found in load path
2023-07-05 01:32:33,365 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpia_tcc9n\736_g5w4.json
2023-07-05 01:32:36,212 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpia_tcc9n\1qnq9s7v.json
2023-07-05 01:32:36,214 | DEBUG: idx 0
2023-07-05 01:32:36,214 | DEBUG: running CmdStan, num_threads: None
2023-07-05 01:32:36,214 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=37734', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpia_tcc9n\\736_g5w4.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpia_tcc9n\\1qnq9s7v.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpia_tcc9n\\prophet_model1wwijfcx\\prophet_model-20230705013236.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 01:32:36,214 | INFO: Chain [1] start processing
2023-07-05 01:32:51,329 | INFO: Chain [1] done processing
2023-07-05 01:32:53,030 | INFO: 127.0.0.1 - - [05/Jul/2023 01:32:53] "POST /forecast HTTP/1.1" 200 -
2023-07-05 01:33:06,958 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 01:33:06,961 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 01:33:06,962 | DEBUG: interactive is False
2023-07-05 01:33:06,963 | DEBUG: platform is win32
2023-07-05 01:33:06,963 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 01:33:07,044 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 01:33:07,047 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 01:33:07,434 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 01:33:07,434 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 01:33:07,455 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 01:33:07,455 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 01:33:19,127 | INFO: 127.0.0.1 - - [05/Jul/2023 01:33:19] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 01:33:19,388 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 01:33:19,537 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688500999&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 01:33:19,882 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 01:33:19,968 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 01:33:20,209 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp7oo7jtpq\50ltmdci.json
2023-07-05 01:33:22,837 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp7oo7jtpq\spudbk1_.json
2023-07-05 01:33:22,839 | DEBUG: idx 0
2023-07-05 01:33:22,839 | DEBUG: running CmdStan, num_threads: None
2023-07-05 01:33:22,839 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=43037', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp7oo7jtpq\\50ltmdci.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp7oo7jtpq\\spudbk1_.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp7oo7jtpq\\prophet_model5lk66yge\\prophet_model-20230705013322.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 01:33:22,839 | INFO: Chain [1] start processing
2023-07-05 01:33:39,923 | INFO: Chain [1] done processing
2023-07-05 01:33:41,239 | INFO: 127.0.0.1 - - [05/Jul/2023 01:33:41] "POST /forecast HTTP/1.1" 200 -
2023-07-05 01:48:18,330 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 01:48:18,336 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 01:48:18,338 | DEBUG: interactive is False
2023-07-05 01:48:18,338 | DEBUG: platform is win32
2023-07-05 01:48:18,339 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 01:48:18,448 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 01:48:18,452 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 01:48:19,205 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 01:48:19,206 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 01:48:19,271 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 01:48:19,272 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 01:48:42,268 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 01:48:42,518 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688501922&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 01:48:42,999 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 01:48:43,466 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 01:48:43,783 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp68vz39ij\uzpx667l.json
2023-07-05 01:48:44,883 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp68vz39ij\ofubhzl7.json
2023-07-05 01:48:44,887 | DEBUG: idx 0
2023-07-05 01:48:44,887 | DEBUG: running CmdStan, num_threads: None
2023-07-05 01:48:44,887 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=99140', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp68vz39ij\\uzpx667l.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp68vz39ij\\ofubhzl7.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp68vz39ij\\prophet_modeltlzgddex\\prophet_model-20230705014844.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 01:48:44,887 | INFO: Chain [1] start processing
2023-07-05 01:48:55,194 | INFO: Chain [1] done processing
2023-07-05 01:48:56,900 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 45, in getForecast
    data  = pd.merge(forecast,df,on='ds',how='left')
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\reshape\merge.py", line 106, in merge
    op = _MergeOperation(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\reshape\merge.py", line 703, in __init__
    self._maybe_coerce_merge_keys()
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\reshape\merge.py", line 1260, in _maybe_coerce_merge_keys
    raise ValueError(msg)
ValueError: You are trying to merge on datetime64[ns] and object columns. If you wish to proceed you should use pd.concat
2023-07-05 01:48:57,021 | INFO: 127.0.0.1 - - [05/Jul/2023 01:48:57] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 01:49:29,261 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 01:49:29,265 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 01:49:29,266 | DEBUG: interactive is False
2023-07-05 01:49:29,266 | DEBUG: platform is win32
2023-07-05 01:49:29,267 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 01:49:29,357 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 01:49:29,361 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 01:49:29,814 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 01:49:29,814 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 01:49:29,840 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 01:49:29,840 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 01:49:39,174 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 01:49:39,329 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688501979&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 01:49:39,724 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 01:49:39,815 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 01:49:40,062 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpm4m1m05v\ctcsvp32.json
2023-07-05 01:49:41,136 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpm4m1m05v\7q_035gl.json
2023-07-05 01:49:41,139 | DEBUG: idx 0
2023-07-05 01:49:41,139 | DEBUG: running CmdStan, num_threads: None
2023-07-05 01:49:41,139 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=90439', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpm4m1m05v\\ctcsvp32.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpm4m1m05v\\7q_035gl.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpm4m1m05v\\prophet_modeloax_x6se\\prophet_model-20230705014941.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 01:49:41,140 | INFO: Chain [1] start processing
2023-07-05 01:49:49,864 | INFO: Chain [1] done processing
2023-07-05 01:49:51,534 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 45, in getForecast
    data  = pd.concat(forecast,df,on='ds',how='left')
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\util\_decorators.py", line 311, in wrapper
    return func(*args, **kwargs)
TypeError: concat() got an unexpected keyword argument 'on'
2023-07-05 01:49:51,573 | INFO: 127.0.0.1 - - [05/Jul/2023 01:49:51] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 01:56:51,808 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 01:56:51,812 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 01:56:51,814 | DEBUG: interactive is False
2023-07-05 01:56:51,814 | DEBUG: platform is win32
2023-07-05 01:56:51,814 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 01:56:51,905 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 01:56:51,908 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 01:56:52,351 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 01:56:52,351 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 01:56:52,376 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 01:56:52,376 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 01:56:56,624 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 01:56:56,970 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688502416&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 01:56:57,365 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 01:56:57,459 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 01:56:57,705 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpqipta4w8\m689mabj.json
2023-07-05 01:56:58,770 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpqipta4w8\217ydyxp.json
2023-07-05 01:56:58,772 | DEBUG: idx 0
2023-07-05 01:56:58,772 | DEBUG: running CmdStan, num_threads: None
2023-07-05 01:56:58,772 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=48523', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpqipta4w8\\m689mabj.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpqipta4w8\\217ydyxp.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpqipta4w8\\prophet_modelujf7x4dq\\prophet_model-20230705015658.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 01:56:58,773 | INFO: Chain [1] start processing
2023-07-05 01:57:06,881 | INFO: Chain [1] done processing
2023-07-05 01:57:08,574 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 45, in getForecast
    data  = pd.concat(forecast,df,axis=1)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\util\_decorators.py", line 311, in wrapper
    return func(*args, **kwargs)
TypeError: concat() got multiple values for argument 'axis'
2023-07-05 01:57:08,589 | INFO: 127.0.0.1 - - [05/Jul/2023 01:57:08] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 01:58:47,145 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 01:58:47,148 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 01:58:47,149 | DEBUG: interactive is False
2023-07-05 01:58:47,149 | DEBUG: platform is win32
2023-07-05 01:58:47,149 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 01:58:47,253 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 01:58:47,257 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 01:58:47,901 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 01:58:47,902 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 01:58:47,936 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 01:58:47,937 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 01:58:54,155 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 01:58:54,316 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688502534&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 01:58:54,710 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 01:58:54,805 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 01:58:55,047 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpnsh4lcrs\lkeq84m4.json
2023-07-05 01:58:56,120 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpnsh4lcrs\0nb5s38h.json
2023-07-05 01:58:56,122 | DEBUG: idx 0
2023-07-05 01:58:56,123 | DEBUG: running CmdStan, num_threads: None
2023-07-05 01:58:56,123 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=6920', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpnsh4lcrs\\lkeq84m4.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpnsh4lcrs\\0nb5s38h.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpnsh4lcrs\\prophet_modelgqlyb0wg\\prophet_model-20230705015856.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 01:58:56,123 | INFO: Chain [1] start processing
2023-07-05 01:59:06,861 | INFO: Chain [1] done processing
2023-07-05 01:59:09,120 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 48, in getForecast
    data = data.to_json()
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\generic.py", line 2558, in to_json
    return json.to_json(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 113, in to_json
    s = writer(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 168, in __init__
    self._format_axes()
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 233, in _format_axes
    raise ValueError(
ValueError: DataFrame columns must be unique for orient='columns'.
2023-07-05 01:59:09,205 | INFO: 127.0.0.1 - - [05/Jul/2023 01:59:09] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 02:01:03,798 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:01:03,800 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:01:03,802 | DEBUG: interactive is False
2023-07-05 02:01:03,802 | DEBUG: platform is win32
2023-07-05 02:01:03,802 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:01:03,891 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:01:03,894 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:01:04,288 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:01:04,289 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:01:04,311 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:01:04,312 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:01:06,885 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:01:07,248 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688502666&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:01:07,654 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:01:07,748 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 02:01:07,999 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp9_wtlk7g\215qybf4.json
2023-07-05 02:01:09,059 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp9_wtlk7g\9zyjqskz.json
2023-07-05 02:01:09,061 | DEBUG: idx 0
2023-07-05 02:01:09,061 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:01:09,061 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=7533', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp9_wtlk7g\\215qybf4.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp9_wtlk7g\\9zyjqskz.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp9_wtlk7g\\prophet_modellkzll_oy\\prophet_model-20230705020109.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:01:09,061 | INFO: Chain [1] start processing
2023-07-05 02:01:18,003 | INFO: Chain [1] done processing
2023-07-05 02:01:19,705 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 49, in getForecast
    data = data.to_json()
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\generic.py", line 2558, in to_json
    return json.to_json(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 113, in to_json
    s = writer(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 168, in __init__
    self._format_axes()
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 233, in _format_axes
    raise ValueError(
ValueError: DataFrame columns must be unique for orient='columns'.
2023-07-05 02:01:19,719 | INFO: 127.0.0.1 - - [05/Jul/2023 02:01:19] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 02:01:50,412 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:01:50,419 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:01:50,420 | DEBUG: interactive is False
2023-07-05 02:01:50,421 | DEBUG: platform is win32
2023-07-05 02:01:50,421 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:01:50,599 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:01:50,604 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:01:51,115 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:01:51,116 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:01:51,137 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:01:51,137 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:01:51,802 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:01:51,958 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688502711&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:01:52,363 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:01:52,454 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 02:01:52,697 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpspu8op3c\nl6ekntw.json
2023-07-05 02:01:53,790 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpspu8op3c\wiitrj28.json
2023-07-05 02:01:53,794 | DEBUG: idx 0
2023-07-05 02:01:53,794 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:01:53,794 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=76155', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpspu8op3c\\nl6ekntw.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpspu8op3c\\wiitrj28.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpspu8op3c\\prophet_model7j83173s\\prophet_model-20230705020153.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:01:53,794 | INFO: Chain [1] start processing
2023-07-05 02:02:00,230 | INFO: Chain [1] done processing
2023-07-05 02:02:01,980 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 49, in getForecast
    data = data.to_json()
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\generic.py", line 2558, in to_json
    return json.to_json(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 113, in to_json
    s = writer(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 168, in __init__
    self._format_axes()
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 233, in _format_axes
    raise ValueError(
ValueError: DataFrame columns must be unique for orient='columns'.
2023-07-05 02:02:01,987 | INFO: 127.0.0.1 - - [05/Jul/2023 02:02:01] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 02:03:14,354 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:03:14,359 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:03:14,361 | DEBUG: interactive is False
2023-07-05 02:03:14,361 | DEBUG: platform is win32
2023-07-05 02:03:14,361 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:03:14,519 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:03:14,524 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:03:14,971 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:03:14,972 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:03:14,994 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:03:14,994 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:03:15,545 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:03:16,058 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688502795&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:03:16,457 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:03:16,549 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 02:03:16,781 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpfse3kjzt\s9n7ugz0.json
2023-07-05 02:03:17,865 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpfse3kjzt\pm_ewyr1.json
2023-07-05 02:03:17,867 | DEBUG: idx 0
2023-07-05 02:03:17,867 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:03:17,867 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=85881', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpfse3kjzt\\s9n7ugz0.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpfse3kjzt\\pm_ewyr1.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpfse3kjzt\\prophet_modelb7viv2t_\\prophet_model-20230705020317.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:03:17,867 | INFO: Chain [1] start processing
2023-07-05 02:03:24,422 | INFO: Chain [1] done processing
2023-07-05 02:03:26,087 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 50, in getForecast
    data = data.to_json()
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\generic.py", line 2558, in to_json
    return json.to_json(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 113, in to_json
    s = writer(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 168, in __init__
    self._format_axes()
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 233, in _format_axes
    raise ValueError(
ValueError: DataFrame columns must be unique for orient='columns'.
2023-07-05 02:03:26,094 | INFO: 127.0.0.1 - - [05/Jul/2023 02:03:26] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 02:04:29,664 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:04:29,671 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:04:29,674 | DEBUG: interactive is False
2023-07-05 02:04:29,674 | DEBUG: platform is win32
2023-07-05 02:04:29,674 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:04:29,820 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:04:29,825 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:04:30,265 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:04:30,266 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:04:30,291 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:04:30,291 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:04:31,131 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:04:31,324 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688502871&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:04:31,728 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:04:31,822 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 02:04:32,061 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpriecaavk\nsi_4h9e.json
2023-07-05 02:04:33,144 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpriecaavk\ktq7yujv.json
2023-07-05 02:04:33,146 | DEBUG: idx 0
2023-07-05 02:04:33,146 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:04:33,146 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=57705', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpriecaavk\\nsi_4h9e.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpriecaavk\\ktq7yujv.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpriecaavk\\prophet_modelnplvj9le\\prophet_model-20230705020433.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:04:33,146 | INFO: Chain [1] start processing
2023-07-05 02:04:40,032 | INFO: Chain [1] done processing
2023-07-05 02:04:41,764 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 50, in getForecast
    data = data.to_json()
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\generic.py", line 2558, in to_json
    return json.to_json(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 113, in to_json
    s = writer(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 168, in __init__
    self._format_axes()
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 233, in _format_axes
    raise ValueError(
ValueError: DataFrame columns must be unique for orient='columns'.
2023-07-05 02:04:41,780 | INFO: 127.0.0.1 - - [05/Jul/2023 02:04:41] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 02:05:25,499 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:05:25,502 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:05:25,503 | DEBUG: interactive is False
2023-07-05 02:05:25,503 | DEBUG: platform is win32
2023-07-05 02:05:25,503 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:05:25,587 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:05:25,590 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:05:26,000 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:05:26,001 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:05:26,023 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:05:26,023 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:05:28,721 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:05:28,982 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688502928&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:05:29,409 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:05:29,497 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 02:05:29,749 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpyhcb2e3h\tj9vsvm6.json
2023-07-05 02:05:31,072 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpyhcb2e3h\0kqsi2ak.json
2023-07-05 02:05:31,079 | DEBUG: idx 0
2023-07-05 02:05:31,080 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:05:31,080 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=37572', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpyhcb2e3h\\tj9vsvm6.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpyhcb2e3h\\0kqsi2ak.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpyhcb2e3h\\prophet_modeltb1jay8g\\prophet_model-20230705020531.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:05:31,081 | INFO: Chain [1] start processing
2023-07-05 02:05:37,769 | INFO: Chain [1] done processing
2023-07-05 02:05:39,545 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 50, in getForecast
    data = data.to_json(orient="records")
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\generic.py", line 2558, in to_json
    return json.to_json(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 113, in to_json
    s = writer(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 168, in __init__
    self._format_axes()
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 233, in _format_axes
    raise ValueError(
ValueError: DataFrame columns must be unique for orient='records'.
2023-07-05 02:05:39,560 | INFO: 127.0.0.1 - - [05/Jul/2023 02:05:39] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 02:06:03,835 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:06:03,845 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:06:03,847 | DEBUG: interactive is False
2023-07-05 02:06:03,847 | DEBUG: platform is win32
2023-07-05 02:06:03,847 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:06:03,983 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:06:03,986 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:06:04,589 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:06:04,590 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:06:04,611 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:06:04,611 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:06:05,757 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:06:05,922 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688502965&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:06:06,348 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:06:06,441 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 02:06:06,678 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmprjtf7_yz\pnf96j6v.json
2023-07-05 02:06:07,733 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmprjtf7_yz\xgjzeoc1.json
2023-07-05 02:06:07,736 | DEBUG: idx 0
2023-07-05 02:06:07,736 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:06:07,736 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=30025', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmprjtf7_yz\\pnf96j6v.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmprjtf7_yz\\xgjzeoc1.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmprjtf7_yz\\prophet_modeltmzq_qa2\\prophet_model-20230705020607.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:06:07,736 | INFO: Chain [1] start processing
2023-07-05 02:06:16,983 | INFO: Chain [1] done processing
2023-07-05 02:06:18,815 | INFO: 127.0.0.1 - - [05/Jul/2023 02:06:18] "POST /forecast HTTP/1.1" 200 -
2023-07-05 02:08:19,974 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:08:19,977 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:08:19,978 | DEBUG: interactive is False
2023-07-05 02:08:19,978 | DEBUG: platform is win32
2023-07-05 02:08:19,978 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:08:20,061 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:08:20,064 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:08:20,591 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:08:20,591 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:08:20,636 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:08:20,637 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:08:24,902 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:08:25,422 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688503104&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:08:25,818 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:08:25,911 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 02:08:26,149 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpc5l8k7zp\6mmkccok.json
2023-07-05 02:08:27,216 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpc5l8k7zp\vauc1_77.json
2023-07-05 02:08:27,218 | DEBUG: idx 0
2023-07-05 02:08:27,218 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:08:27,218 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=10000', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpc5l8k7zp\\6mmkccok.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpc5l8k7zp\\vauc1_77.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpc5l8k7zp\\prophet_modelv88hezsc\\prophet_model-20230705020827.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:08:27,218 | INFO: Chain [1] start processing
2023-07-05 02:08:33,966 | INFO: Chain [1] done processing
2023-07-05 02:08:36,065 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 493, in wrapper
    return self.make_response(data, code, headers=headers)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 522, in make_response
    resp = self.representations[mediatype](data, *args, **kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\representations\json.py", line 21, in output_json
    dumped = dumps(data, **settings) + "\n"
  File "C:\Python310\lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "C:\Python310\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Python310\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Python310\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type method is not JSON serializable
2023-07-05 02:08:36,120 | INFO: 127.0.0.1 - - [05/Jul/2023 02:08:36] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 02:12:02,090 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:12:02,093 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:12:02,094 | DEBUG: interactive is False
2023-07-05 02:12:02,094 | DEBUG: platform is win32
2023-07-05 02:12:02,094 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:12:02,175 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:12:02,177 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:12:02,583 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:12:02,583 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:12:02,612 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:12:02,613 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:12:04,638 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:12:04,810 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688503324&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:12:05,149 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:12:05,232 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 02:12:05,426 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpsfvjs6kh\0rahghd7.json
2023-07-05 02:12:06,501 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpsfvjs6kh\x7do78uv.json
2023-07-05 02:12:06,505 | DEBUG: idx 0
2023-07-05 02:12:06,506 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:12:06,506 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=67138', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpsfvjs6kh\\0rahghd7.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpsfvjs6kh\\x7do78uv.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpsfvjs6kh\\prophet_modela6y8ksu5\\prophet_model-20230705021206.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:12:06,506 | INFO: Chain [1] start processing
2023-07-05 02:12:10,301 | INFO: Chain [1] done processing
2023-07-05 02:12:11,577 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 51, in getForecast
    data = data.to_json()
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\generic.py", line 2558, in to_json
    return json.to_json(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 113, in to_json
    s = writer(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 168, in __init__
    self._format_axes()
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 233, in _format_axes
    raise ValueError(
ValueError: DataFrame columns must be unique for orient='columns'.
2023-07-05 02:12:11,586 | INFO: 127.0.0.1 - - [05/Jul/2023 02:12:11] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 02:12:19,697 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:12:19,852 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688503339&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:12:20,114 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:12:20,246 | DEBUG: TBB already found in load path
2023-07-05 02:12:20,494 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpsfvjs6kh\10ao1s02.json
2023-07-05 02:12:21,578 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpsfvjs6kh\egvxs31f.json
2023-07-05 02:12:21,579 | DEBUG: idx 0
2023-07-05 02:12:21,579 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:12:21,579 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=72443', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpsfvjs6kh\\10ao1s02.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpsfvjs6kh\\egvxs31f.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpsfvjs6kh\\prophet_model623ya5bk\\prophet_model-20230705021221.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:12:21,580 | INFO: Chain [1] start processing
2023-07-05 02:12:29,756 | INFO: Chain [1] done processing
2023-07-05 02:12:31,424 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 51, in getForecast
    data = data.to_json()
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\generic.py", line 2558, in to_json
    return json.to_json(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 113, in to_json
    s = writer(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 168, in __init__
    self._format_axes()
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 233, in _format_axes
    raise ValueError(
ValueError: DataFrame columns must be unique for orient='columns'.
2023-07-05 02:12:31,426 | INFO: 127.0.0.1 - - [05/Jul/2023 02:12:31] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 02:12:57,768 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:12:57,773 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:12:57,775 | DEBUG: interactive is False
2023-07-05 02:12:57,775 | DEBUG: platform is win32
2023-07-05 02:12:57,775 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:12:57,965 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:12:57,970 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:12:58,660 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:12:58,661 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:12:58,696 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:12:58,697 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:13:32,343 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:13:32,507 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688503412&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:13:32,809 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:13:32,906 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 02:13:33,184 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp6nr5mwif\tmepxroo.json
2023-07-05 02:13:34,331 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp6nr5mwif\qvp8alkc.json
2023-07-05 02:13:34,336 | DEBUG: idx 0
2023-07-05 02:13:34,336 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:13:34,336 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=65367', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp6nr5mwif\\tmepxroo.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp6nr5mwif\\qvp8alkc.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp6nr5mwif\\prophet_model9ng5chfo\\prophet_model-20230705021334.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:13:34,336 | INFO: Chain [1] start processing
2023-07-05 02:13:44,512 | INFO: Chain [1] done processing
2023-07-05 02:13:46,240 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 51, in getForecast
    data = data.to_json()
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\generic.py", line 2558, in to_json
    return json.to_json(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 113, in to_json
    s = writer(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 168, in __init__
    self._format_axes()
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 233, in _format_axes
    raise ValueError(
ValueError: DataFrame columns must be unique for orient='columns'.
2023-07-05 02:13:46,249 | INFO: 127.0.0.1 - - [05/Jul/2023 02:13:46] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 02:14:45,394 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:14:45,397 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:14:45,398 | DEBUG: interactive is False
2023-07-05 02:14:45,398 | DEBUG: platform is win32
2023-07-05 02:14:45,398 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:14:45,482 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:14:45,485 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:14:45,871 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:14:45,871 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:14:45,894 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:14:45,894 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:14:47,033 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:14:47,296 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688503487&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:14:47,595 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:14:47,690 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 02:14:47,933 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpnzf21ziq\h1c2c1u_.json
2023-07-05 02:14:49,013 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpnzf21ziq\m6_po1j9.json
2023-07-05 02:14:49,017 | DEBUG: idx 0
2023-07-05 02:14:49,017 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:14:49,017 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=12032', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpnzf21ziq\\h1c2c1u_.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpnzf21ziq\\m6_po1j9.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpnzf21ziq\\prophet_modelevtn7dsa\\prophet_model-20230705021449.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:14:49,018 | INFO: Chain [1] start processing
2023-07-05 02:14:57,656 | INFO: Chain [1] done processing
2023-07-05 02:15:00,215 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 52, in getForecast
    data = data.to_json()
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\generic.py", line 2558, in to_json
    return json.to_json(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 113, in to_json
    s = writer(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 168, in __init__
    self._format_axes()
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 233, in _format_axes
    raise ValueError(
ValueError: DataFrame columns must be unique for orient='columns'.
2023-07-05 02:15:00,226 | INFO: 127.0.0.1 - - [05/Jul/2023 02:15:00] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 02:16:16,490 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:16:16,496 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:16:16,500 | DEBUG: interactive is False
2023-07-05 02:16:16,500 | DEBUG: platform is win32
2023-07-05 02:16:16,500 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:16:16,668 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:16:16,672 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:16:17,132 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:16:17,133 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:16:17,157 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:16:17,157 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:16:18,286 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:16:18,599 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688503578&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:16:18,971 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:16:19,087 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 02:16:19,332 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmptftpqa5g\ribojf_y.json
2023-07-05 02:16:20,368 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmptftpqa5g\xs6dwuco.json
2023-07-05 02:16:20,370 | DEBUG: idx 0
2023-07-05 02:16:20,370 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:16:20,370 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=61302', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmptftpqa5g\\ribojf_y.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmptftpqa5g\\xs6dwuco.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmptftpqa5g\\prophet_model077oesk4\\prophet_model-20230705021620.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:16:20,370 | INFO: Chain [1] start processing
2023-07-05 02:16:27,883 | INFO: Chain [1] done processing
2023-07-05 02:16:30,453 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 52, in getForecast
    data = data.to_json()
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\generic.py", line 2558, in to_json
    return json.to_json(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 113, in to_json
    s = writer(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 168, in __init__
    self._format_axes()
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 233, in _format_axes
    raise ValueError(
ValueError: DataFrame columns must be unique for orient='columns'.
2023-07-05 02:16:30,466 | INFO: 127.0.0.1 - - [05/Jul/2023 02:16:30] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 02:17:59,987 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:17:59,998 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:18:00,000 | DEBUG: interactive is False
2023-07-05 02:18:00,001 | DEBUG: platform is win32
2023-07-05 02:18:00,001 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:18:00,131 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:18:00,134 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:18:00,534 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:18:00,534 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:18:00,556 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:18:00,556 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:18:01,594 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:18:01,981 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688503681&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:18:02,363 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:18:02,457 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 02:18:02,781 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp2ghug3h3\za00_f20.json
2023-07-05 02:18:03,860 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp2ghug3h3\v8z3hp3z.json
2023-07-05 02:18:03,864 | DEBUG: idx 0
2023-07-05 02:18:03,864 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:18:03,864 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=10783', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp2ghug3h3\\za00_f20.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp2ghug3h3\\v8z3hp3z.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp2ghug3h3\\prophet_modeli97kyykv\\prophet_model-20230705021803.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:18:03,864 | INFO: Chain [1] start processing
2023-07-05 02:18:12,636 | INFO: Chain [1] done processing
2023-07-05 02:18:14,356 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 44, in getForecast
    forecast.drop(['ds'])
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\util\_decorators.py", line 311, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\frame.py", line 4906, in drop
    return super().drop(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\generic.py", line 4150, in drop
    obj = obj._drop_axis(labels, axis, level=level, errors=errors)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\generic.py", line 4185, in _drop_axis
    new_axis = axis.drop(labels, errors=errors)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\indexes\base.py", line 6017, in drop
    raise KeyError(f"{labels[mask]} not found in axis")
KeyError: "['ds'] not found in axis"
2023-07-05 02:18:14,399 | INFO: 127.0.0.1 - - [05/Jul/2023 02:18:14] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 02:18:46,386 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:18:46,389 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:18:46,390 | DEBUG: interactive is False
2023-07-05 02:18:46,390 | DEBUG: platform is win32
2023-07-05 02:18:46,390 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:18:46,470 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:18:46,472 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:18:46,900 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:18:46,900 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:18:46,922 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:18:46,922 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:18:51,344 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:18:51,513 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688503731&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:18:51,909 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:18:52,004 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 02:18:52,248 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpuxsuhaz4\heiu1h2z.json
2023-07-05 02:18:53,299 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpuxsuhaz4\r5shjmwm.json
2023-07-05 02:18:53,302 | DEBUG: idx 0
2023-07-05 02:18:53,303 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:18:53,303 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=60821', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpuxsuhaz4\\heiu1h2z.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpuxsuhaz4\\r5shjmwm.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpuxsuhaz4\\prophet_model_ioqqksb\\prophet_model-20230705021853.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:18:53,303 | INFO: Chain [1] start processing
2023-07-05 02:19:01,441 | INFO: Chain [1] done processing
2023-07-05 02:19:03,053 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 44, in getForecast
    forecast.drop(['ds'])
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\util\_decorators.py", line 311, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\frame.py", line 4906, in drop
    return super().drop(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\generic.py", line 4150, in drop
    obj = obj._drop_axis(labels, axis, level=level, errors=errors)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\generic.py", line 4185, in _drop_axis
    new_axis = axis.drop(labels, errors=errors)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\indexes\base.py", line 6017, in drop
    raise KeyError(f"{labels[mask]} not found in axis")
KeyError: "['ds'] not found in axis"
2023-07-05 02:19:03,068 | INFO: 127.0.0.1 - - [05/Jul/2023 02:19:03] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 02:19:50,623 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:19:50,626 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:19:50,627 | DEBUG: interactive is False
2023-07-05 02:19:50,627 | DEBUG: platform is win32
2023-07-05 02:19:50,627 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:19:50,710 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:19:50,712 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:19:51,618 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:19:51,622 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:19:51,669 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:19:51,669 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:19:54,150 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:19:54,525 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688503794&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:19:54,923 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:19:55,026 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 02:19:55,274 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpse_wqmmi\d5704f5q.json
2023-07-05 02:19:56,334 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpse_wqmmi\w8iwt27p.json
2023-07-05 02:19:56,337 | DEBUG: idx 0
2023-07-05 02:19:56,337 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:19:56,337 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=49748', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpse_wqmmi\\d5704f5q.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpse_wqmmi\\w8iwt27p.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpse_wqmmi\\prophet_modelmsq4kag9\\prophet_model-20230705021956.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:19:56,337 | INFO: Chain [1] start processing
2023-07-05 02:20:03,352 | INFO: Chain [1] done processing
2023-07-05 02:20:04,961 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 44, in getForecast
    print(forecast.colums)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\generic.py", line 5487, in __getattr__
    return object.__getattribute__(self, name)
AttributeError: 'DataFrame' object has no attribute 'colums'
2023-07-05 02:20:04,970 | INFO: 127.0.0.1 - - [05/Jul/2023 02:20:04] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 02:20:25,604 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:20:25,607 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:20:25,608 | DEBUG: interactive is False
2023-07-05 02:20:25,608 | DEBUG: platform is win32
2023-07-05 02:20:25,608 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:20:25,701 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:20:25,703 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:20:26,098 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:20:26,098 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:20:26,123 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:20:26,123 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:20:27,352 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:20:27,513 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688503827&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:20:27,916 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:20:28,012 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 02:20:28,262 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpnbe37y8z\d2l82a0a.json
2023-07-05 02:20:29,359 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpnbe37y8z\r2s78pwc.json
2023-07-05 02:20:29,361 | DEBUG: idx 0
2023-07-05 02:20:29,361 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:20:29,361 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=50723', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpnbe37y8z\\d2l82a0a.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpnbe37y8z\\r2s78pwc.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpnbe37y8z\\prophet_modelv0_ynv40\\prophet_model-20230705022029.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:20:29,361 | INFO: Chain [1] start processing
2023-07-05 02:20:39,222 | INFO: Chain [1] done processing
2023-07-05 02:20:40,888 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 45, in getForecast
    forecast.drop(['ds'])
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\util\_decorators.py", line 311, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\frame.py", line 4906, in drop
    return super().drop(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\generic.py", line 4150, in drop
    obj = obj._drop_axis(labels, axis, level=level, errors=errors)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\generic.py", line 4185, in _drop_axis
    new_axis = axis.drop(labels, errors=errors)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\indexes\base.py", line 6017, in drop
    raise KeyError(f"{labels[mask]} not found in axis")
KeyError: "['ds'] not found in axis"
2023-07-05 02:20:40,909 | INFO: 127.0.0.1 - - [05/Jul/2023 02:20:40] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 02:23:17,834 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:23:17,837 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:23:17,838 | DEBUG: interactive is False
2023-07-05 02:23:17,839 | DEBUG: platform is win32
2023-07-05 02:23:17,839 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:23:17,921 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:23:17,924 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:23:18,328 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:23:18,329 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:23:18,354 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:23:18,354 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:23:21,598 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:23:21,846 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688504001&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:23:22,256 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:23:22,356 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 02:23:22,618 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp6cbbbrw0\ijvo3u1_.json
2023-07-05 02:23:23,715 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp6cbbbrw0\o7gcylc0.json
2023-07-05 02:23:23,718 | DEBUG: idx 0
2023-07-05 02:23:23,718 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:23:23,718 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=53923', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp6cbbbrw0\\ijvo3u1_.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp6cbbbrw0\\o7gcylc0.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp6cbbbrw0\\prophet_modelmg70j6nj\\prophet_model-20230705022323.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:23:23,718 | INFO: Chain [1] start processing
2023-07-05 02:23:32,190 | INFO: Chain [1] done processing
2023-07-05 02:23:33,877 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 45, in getForecast
    df.drop(['ds'])
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\util\_decorators.py", line 311, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\frame.py", line 4906, in drop
    return super().drop(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\generic.py", line 4150, in drop
    obj = obj._drop_axis(labels, axis, level=level, errors=errors)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\generic.py", line 4185, in _drop_axis
    new_axis = axis.drop(labels, errors=errors)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\indexes\base.py", line 6017, in drop
    raise KeyError(f"{labels[mask]} not found in axis")
KeyError: "['ds'] not found in axis"
2023-07-05 02:23:33,897 | INFO: 127.0.0.1 - - [05/Jul/2023 02:23:33] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 02:24:10,454 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:24:10,457 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:24:10,459 | DEBUG: interactive is False
2023-07-05 02:24:10,459 | DEBUG: platform is win32
2023-07-05 02:24:10,459 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:24:10,540 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:24:10,543 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:24:10,956 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:24:10,957 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:24:10,979 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:24:10,979 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:24:13,324 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:24:13,483 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688504053&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:24:13,880 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:24:13,971 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 02:24:14,222 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpd75fh7qx\v_1bem1_.json
2023-07-05 02:24:15,292 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpd75fh7qx\ywuuwi15.json
2023-07-05 02:24:15,296 | DEBUG: idx 0
2023-07-05 02:24:15,296 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:24:15,296 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=60753', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpd75fh7qx\\v_1bem1_.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpd75fh7qx\\ywuuwi15.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpd75fh7qx\\prophet_model1gj8jftm\\prophet_model-20230705022415.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:24:15,296 | INFO: Chain [1] start processing
2023-07-05 02:24:23,075 | INFO: Chain [1] done processing
2023-07-05 02:24:24,722 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 45, in getForecast
    df.drop('ds')
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\util\_decorators.py", line 311, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\frame.py", line 4906, in drop
    return super().drop(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\generic.py", line 4150, in drop
    obj = obj._drop_axis(labels, axis, level=level, errors=errors)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\generic.py", line 4185, in _drop_axis
    new_axis = axis.drop(labels, errors=errors)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\indexes\base.py", line 6017, in drop
    raise KeyError(f"{labels[mask]} not found in axis")
KeyError: "['ds'] not found in axis"
2023-07-05 02:24:24,733 | INFO: 127.0.0.1 - - [05/Jul/2023 02:24:24] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 02:26:06,485 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:26:06,489 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:26:06,490 | DEBUG: interactive is False
2023-07-05 02:26:06,491 | DEBUG: platform is win32
2023-07-05 02:26:06,491 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:26:06,627 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:26:06,631 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:26:07,058 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:26:07,058 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:26:07,082 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:26:07,082 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:26:11,189 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:26:11,385 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688504171&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:26:11,782 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:26:11,876 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 02:26:12,139 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpequ96wjw\664511k9.json
2023-07-05 02:26:13,231 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpequ96wjw\9dwlxmmk.json
2023-07-05 02:26:13,234 | DEBUG: idx 0
2023-07-05 02:26:13,234 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:26:13,234 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=54824', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpequ96wjw\\664511k9.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpequ96wjw\\9dwlxmmk.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpequ96wjw\\prophet_model1bvtogu4\\prophet_model-20230705022613.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:26:13,234 | INFO: Chain [1] start processing
2023-07-05 02:26:22,215 | INFO: Chain [1] done processing
2023-07-05 02:26:23,875 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 49, in getForecast
    data = data [['date','y','yhat','yhat_upper','yhat_lower']]
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\frame.py", line 3464, in __getitem__
    indexer = self.loc._get_listlike_indexer(key, axis=1)[1]
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\indexing.py", line 1314, in _get_listlike_indexer
    self._validate_read_indexer(keyarr, indexer, axis)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\indexing.py", line 1377, in _validate_read_indexer
    raise KeyError(f"{not_found} not in index")
KeyError: "['date'] not in index"
2023-07-05 02:26:23,898 | INFO: 127.0.0.1 - - [05/Jul/2023 02:26:23] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 02:26:57,885 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:26:57,888 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:26:57,890 | DEBUG: interactive is False
2023-07-05 02:26:57,890 | DEBUG: platform is win32
2023-07-05 02:26:57,890 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:26:57,983 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:26:57,987 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:26:58,405 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:26:58,406 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:26:58,426 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:26:58,426 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:26:59,940 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:27:00,107 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688504219&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:27:00,497 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:27:00,590 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 02:27:00,830 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpljj6b175\zabt8gao.json
2023-07-05 02:27:01,895 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpljj6b175\7uwxnmnj.json
2023-07-05 02:27:01,898 | DEBUG: idx 0
2023-07-05 02:27:01,898 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:27:01,898 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=85119', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpljj6b175\\zabt8gao.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpljj6b175\\7uwxnmnj.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpljj6b175\\prophet_modelpfr1gh2g\\prophet_model-20230705022701.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:27:01,898 | INFO: Chain [1] start processing
2023-07-05 02:27:08,584 | INFO: Chain [1] done processing
2023-07-05 02:27:10,208 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 53, in getForecast
    data = data.to_json()
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\generic.py", line 2558, in to_json
    return json.to_json(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 113, in to_json
    s = writer(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 168, in __init__
    self._format_axes()
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\io\json\_json.py", line 233, in _format_axes
    raise ValueError(
ValueError: DataFrame columns must be unique for orient='columns'.
2023-07-05 02:27:10,221 | INFO: 127.0.0.1 - - [05/Jul/2023 02:27:10] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 02:27:44,419 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:27:44,422 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:27:44,424 | DEBUG: interactive is False
2023-07-05 02:27:44,424 | DEBUG: platform is win32
2023-07-05 02:27:44,424 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:27:44,516 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:27:44,518 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:27:44,945 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:27:44,946 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:27:44,966 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:27:44,966 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:27:47,053 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:27:47,393 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688504267&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:27:47,796 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:27:47,888 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 02:27:48,142 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp5uimr7p2\jwpbom6f.json
2023-07-05 02:27:49,206 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp5uimr7p2\nnfvo8ib.json
2023-07-05 02:27:49,209 | DEBUG: idx 0
2023-07-05 02:27:49,210 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:27:49,210 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=81115', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp5uimr7p2\\jwpbom6f.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp5uimr7p2\\nnfvo8ib.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp5uimr7p2\\prophet_modelzp86nu_0\\prophet_model-20230705022749.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:27:49,210 | INFO: Chain [1] start processing
2023-07-05 02:27:57,739 | INFO: Chain [1] done processing
2023-07-05 02:27:59,407 | INFO: 127.0.0.1 - - [05/Jul/2023 02:27:59] "POST /forecast HTTP/1.1" 200 -
2023-07-05 02:34:20,564 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:34:20,568 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:34:20,569 | DEBUG: interactive is False
2023-07-05 02:34:20,569 | DEBUG: platform is win32
2023-07-05 02:34:20,569 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'shlex', 'netrc', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:34:20,662 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:34:20,665 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:34:21,122 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:34:21,123 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:34:21,150 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:34:21,150 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:34:38,948 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:34:38,951 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:34:38,952 | DEBUG: interactive is False
2023-07-05 02:34:38,952 | DEBUG: platform is win32
2023-07-05 02:34:38,953 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:34:39,037 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:34:39,041 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:34:39,780 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:34:39,786 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:34:39,873 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:34:39,874 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:34:41,698 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:34:41,943 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688504681&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:34:42,350 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:34:42,472 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 02:34:42,795 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp29atl54i\l9hzq0m7.json
2023-07-05 02:34:43,876 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp29atl54i\g1jg6xsv.json
2023-07-05 02:34:43,878 | DEBUG: idx 0
2023-07-05 02:34:43,878 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:34:43,878 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=65195', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp29atl54i\\l9hzq0m7.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp29atl54i\\g1jg6xsv.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp29atl54i\\prophet_modeln3x2lwfn\\prophet_model-20230705023443.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:34:43,878 | INFO: Chain [1] start processing
2023-07-05 02:34:52,402 | INFO: Chain [1] done processing
2023-07-05 02:34:54,124 | INFO: 127.0.0.1 - - [05/Jul/2023 02:34:54] "POST /forecast HTTP/1.1" 200 -
2023-07-05 02:39:25,749 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:39:25,753 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:39:25,755 | DEBUG: interactive is False
2023-07-05 02:39:25,755 | DEBUG: platform is win32
2023-07-05 02:39:25,755 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:39:25,867 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:39:25,870 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:39:26,329 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:39:26,329 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:39:26,350 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:39:26,351 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:39:27,552 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:39:27,927 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688504967&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:39:28,173 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:39:28,267 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 02:39:28,510 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp5uoecp51\3hcbzndq.json
2023-07-05 02:39:29,629 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp5uoecp51\qhkg9ei8.json
2023-07-05 02:39:29,632 | DEBUG: idx 0
2023-07-05 02:39:29,632 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:39:29,632 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=61482', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp5uoecp51\\3hcbzndq.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp5uoecp51\\qhkg9ei8.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp5uoecp51\\prophet_model_8jbw4ot\\prophet_model-20230705023929.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:39:29,632 | INFO: Chain [1] start processing
2023-07-05 02:39:46,135 | INFO: Chain [1] done processing
2023-07-05 02:39:47,902 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 50, in getForecast
    data["ds"]=data["ds"].map(lambda x: str(datetime.strptime(x,"%Y-%m-%d")))
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\series.py", line 4161, in map
    new_values = super()._map_values(arg, na_action=na_action)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\base.py", line 870, in _map_values
    new_values = map_f(values, mapper)
  File "pandas\_libs\lib.pyx", line 2859, in pandas._libs.lib.map_infer
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 50, in <lambda>
    data["ds"]=data["ds"].map(lambda x: str(datetime.strptime(x,"%Y-%m-%d")))
TypeError: strptime() argument 1 must be str, not Timestamp
2023-07-05 02:39:47,956 | INFO: 127.0.0.1 - - [05/Jul/2023 02:39:47] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 02:40:25,921 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:40:25,929 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:40:25,932 | DEBUG: interactive is False
2023-07-05 02:40:25,933 | DEBUG: platform is win32
2023-07-05 02:40:25,933 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:40:26,104 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:40:26,109 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:40:26,554 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:40:26,555 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:40:26,577 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:40:26,577 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:40:27,806 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:40:28,001 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688505027&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:40:28,394 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:40:28,486 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 02:40:28,733 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpq9njz1qy\mqbjfdxg.json
2023-07-05 02:40:29,939 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpq9njz1qy\rq_5lgdq.json
2023-07-05 02:40:29,942 | DEBUG: idx 0
2023-07-05 02:40:29,942 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:40:29,943 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=52504', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpq9njz1qy\\mqbjfdxg.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpq9njz1qy\\rq_5lgdq.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpq9njz1qy\\prophet_modelgwtm_83a\\prophet_model-20230705024029.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:40:29,943 | INFO: Chain [1] start processing
2023-07-05 02:40:40,135 | INFO: Chain [1] done processing
2023-07-05 02:40:41,880 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 50, in getForecast
    data["ds"]=data["ds"].map(lambda x: str(datetime.strptime(str(x),"%Y-%m-%d")))
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\series.py", line 4161, in map
    new_values = super()._map_values(arg, na_action=na_action)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\base.py", line 870, in _map_values
    new_values = map_f(values, mapper)
  File "pandas\_libs\lib.pyx", line 2859, in pandas._libs.lib.map_infer
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 50, in <lambda>
    data["ds"]=data["ds"].map(lambda x: str(datetime.strptime(str(x),"%Y-%m-%d")))
  File "C:\Python310\lib\_strptime.py", line 568, in _strptime_datetime
    tt, fraction, gmtoff_fraction = _strptime(data_string, format)
  File "C:\Python310\lib\_strptime.py", line 352, in _strptime
    raise ValueError("unconverted data remains: %s" %
ValueError: unconverted data remains:  00:00:00
2023-07-05 02:40:41,903 | INFO: 127.0.0.1 - - [05/Jul/2023 02:40:41] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 02:45:06,509 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:45:06,513 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:45:06,515 | DEBUG: interactive is False
2023-07-05 02:45:06,515 | DEBUG: platform is win32
2023-07-05 02:45:06,515 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:45:06,621 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:45:06,625 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:45:07,055 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:45:07,055 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:45:07,077 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:45:07,077 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:45:07,962 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:45:08,446 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688505307&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:45:08,837 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:45:08,933 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 02:45:09,180 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpp8sa04gc\68fxshcm.json
2023-07-05 02:45:10,246 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpp8sa04gc\78c9d2bx.json
2023-07-05 02:45:10,248 | DEBUG: idx 0
2023-07-05 02:45:10,249 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:45:10,250 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=21532', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpp8sa04gc\\68fxshcm.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpp8sa04gc\\78c9d2bx.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpp8sa04gc\\prophet_model8w04h5ul\\prophet_model-20230705024510.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:45:10,250 | INFO: Chain [1] start processing
2023-07-05 02:45:17,196 | INFO: Chain [1] done processing
2023-07-05 02:45:18,981 | INFO: 127.0.0.1 - - [05/Jul/2023 02:45:18] "POST /forecast HTTP/1.1" 200 -
2023-07-05 02:46:46,496 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:46:46,499 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:46:46,501 | DEBUG: interactive is False
2023-07-05 02:46:46,501 | DEBUG: platform is win32
2023-07-05 02:46:46,501 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:46:46,605 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:46:46,609 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:46:47,052 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:46:47,053 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:46:47,081 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:46:47,081 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:46:49,167 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:46:49,504 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688505409&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:46:49,901 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:46:50,006 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 02:46:50,284 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpvx1b15su\31m5818s.json
2023-07-05 02:46:51,436 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpvx1b15su\4k90w_jx.json
2023-07-05 02:46:51,438 | DEBUG: idx 0
2023-07-05 02:46:51,438 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:46:51,438 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=86819', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpvx1b15su\\31m5818s.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpvx1b15su\\4k90w_jx.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpvx1b15su\\prophet_modelnzdn22n2\\prophet_model-20230705024651.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:46:51,438 | INFO: Chain [1] start processing
2023-07-05 02:47:02,923 | INFO: Chain [1] done processing
2023-07-05 02:47:04,604 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 50, in getForecast
    data["ds"]=data["ds"].map(lambda x: str(datetime.strptime(str(x),"%Y-%m-%d").date()))
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\series.py", line 4161, in map
    new_values = super()._map_values(arg, na_action=na_action)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\base.py", line 870, in _map_values
    new_values = map_f(values, mapper)
  File "pandas\_libs\lib.pyx", line 2859, in pandas._libs.lib.map_infer
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 50, in <lambda>
    data["ds"]=data["ds"].map(lambda x: str(datetime.strptime(str(x),"%Y-%m-%d").date()))
  File "C:\Python310\lib\_strptime.py", line 568, in _strptime_datetime
    tt, fraction, gmtoff_fraction = _strptime(data_string, format)
  File "C:\Python310\lib\_strptime.py", line 352, in _strptime
    raise ValueError("unconverted data remains: %s" %
ValueError: unconverted data remains:  00:00:00
2023-07-05 02:47:04,617 | INFO: 127.0.0.1 - - [05/Jul/2023 02:47:04] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 02:47:50,846 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:47:50,849 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:47:50,850 | DEBUG: interactive is False
2023-07-05 02:47:50,850 | DEBUG: platform is win32
2023-07-05 02:47:50,850 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:47:50,936 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:47:50,939 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:47:51,327 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:47:51,328 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:47:51,349 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:47:51,350 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:47:53,321 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:47:53,696 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688505473&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:47:54,093 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:47:54,185 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 02:47:54,427 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpx0448qqy\0b_ug3pt.json
2023-07-05 02:47:55,523 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpx0448qqy\p_3h0euv.json
2023-07-05 02:47:55,525 | DEBUG: idx 0
2023-07-05 02:47:55,525 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:47:55,525 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=41854', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpx0448qqy\\0b_ug3pt.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpx0448qqy\\p_3h0euv.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpx0448qqy\\prophet_modelrn5kbk7s\\prophet_model-20230705024755.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:47:55,525 | INFO: Chain [1] start processing
2023-07-05 02:48:02,789 | INFO: Chain [1] done processing
2023-07-05 02:48:04,567 | INFO: 127.0.0.1 - - [05/Jul/2023 02:48:04] "POST /forecast HTTP/1.1" 200 -
2023-07-05 02:50:40,310 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:50:40,313 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:50:40,314 | DEBUG: interactive is False
2023-07-05 02:50:40,314 | DEBUG: platform is win32
2023-07-05 02:50:40,314 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:50:40,403 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:50:40,406 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:50:40,822 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:50:40,823 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:50:40,846 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:50:40,846 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:50:48,334 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:50:48,737 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688505648&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:50:49,171 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:50:49,287 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 02:50:49,538 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxqql90p7\b192f597.json
2023-07-05 02:50:50,634 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxqql90p7\vw9qwymk.json
2023-07-05 02:50:50,638 | DEBUG: idx 0
2023-07-05 02:50:50,638 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:50:50,638 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=27881', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxqql90p7\\b192f597.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxqql90p7\\vw9qwymk.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxqql90p7\\prophet_model3wq2605n\\prophet_model-20230705025050.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:50:50,639 | INFO: Chain [1] start processing
2023-07-05 02:51:00,392 | INFO: Chain [1] done processing
2023-07-05 02:51:02,224 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\indexes\base.py", line 3361, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas\_libs\index.pyx", line 76, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 108, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'yhat'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 58, in getForecast
    graphData.append(data['yhat': metric + '_forecast'].tolist())
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\frame.py", line 3430, in __getitem__
    indexer = convert_to_index_sliceable(self, key)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\indexing.py", line 2329, in convert_to_index_sliceable
    return idx._convert_slice_indexer(key, kind="getitem")
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\indexes\base.py", line 3753, in _convert_slice_indexer
    indexer = self.slice_indexer(start, stop, step)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\indexes\base.py", line 5685, in slice_indexer
    start_slice, end_slice = self.slice_locs(start, end, step=step)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\indexes\base.py", line 5887, in slice_locs
    start_slice = self.get_slice_bound(start, "left")
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\indexes\base.py", line 5807, in get_slice_bound
    raise err
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\indexes\base.py", line 5801, in get_slice_bound
    slc = self.get_loc(label)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\indexes\base.py", line 3363, in get_loc
    raise KeyError(key) from err
KeyError: 'yhat'
2023-07-05 02:51:02,237 | INFO: 127.0.0.1 - - [05/Jul/2023 02:51:02] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 02:51:14,248 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:51:14,251 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:51:14,252 | DEBUG: interactive is False
2023-07-05 02:51:14,252 | DEBUG: platform is win32
2023-07-05 02:51:14,253 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:51:14,351 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:51:14,354 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:51:14,818 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:51:14,818 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:51:14,840 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:51:14,840 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:51:19,616 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:51:19,776 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688505679&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:51:20,186 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:51:20,287 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 02:51:20,539 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp8b57fy8k\xw0o1jc3.json
2023-07-05 02:51:21,609 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp8b57fy8k\4roaxy5f.json
2023-07-05 02:51:21,612 | DEBUG: idx 0
2023-07-05 02:51:21,613 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:51:21,613 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=49678', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp8b57fy8k\\xw0o1jc3.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp8b57fy8k\\4roaxy5f.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp8b57fy8k\\prophet_modelkaxj1axl\\prophet_model-20230705025121.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:51:21,613 | INFO: Chain [1] start processing
2023-07-05 02:51:29,080 | INFO: Chain [1] done processing
2023-07-05 02:51:30,768 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\indexes\base.py", line 3361, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas\_libs\index.pyx", line 76, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 108, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'yhat'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 58, in getForecast
    graphData.append(data['yhat': metric + '_forecast'].tolist())
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\frame.py", line 3430, in __getitem__
    indexer = convert_to_index_sliceable(self, key)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\indexing.py", line 2329, in convert_to_index_sliceable
    return idx._convert_slice_indexer(key, kind="getitem")
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\indexes\base.py", line 3753, in _convert_slice_indexer
    indexer = self.slice_indexer(start, stop, step)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\indexes\base.py", line 5685, in slice_indexer
    start_slice, end_slice = self.slice_locs(start, end, step=step)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\indexes\base.py", line 5887, in slice_locs
    start_slice = self.get_slice_bound(start, "left")
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\indexes\base.py", line 5807, in get_slice_bound
    raise err
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\indexes\base.py", line 5801, in get_slice_bound
    slc = self.get_loc(label)
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\indexes\base.py", line 3363, in get_loc
    raise KeyError(key) from err
KeyError: 'yhat'
2023-07-05 02:51:30,777 | INFO: 127.0.0.1 - - [05/Jul/2023 02:51:30] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 02:52:57,999 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 02:52:58,002 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:52:58,004 | DEBUG: interactive is False
2023-07-05 02:52:58,004 | DEBUG: platform is win32
2023-07-05 02:52:58,004 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 02:52:58,086 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 02:52:58,088 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 02:52:58,493 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 02:52:58,493 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 02:52:58,515 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 02:52:58,515 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 02:53:00,884 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:53:01,314 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688505780&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:53:01,702 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:53:01,802 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 02:53:02,057 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpemfiduxo\hoel41y8.json
2023-07-05 02:53:03,111 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpemfiduxo\iyp9czh1.json
2023-07-05 02:53:03,113 | DEBUG: idx 0
2023-07-05 02:53:03,114 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:53:03,114 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=20143', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpemfiduxo\\hoel41y8.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpemfiduxo\\iyp9czh1.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpemfiduxo\\prophet_modelsp3en683\\prophet_model-20230705025303.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:53:03,114 | INFO: Chain [1] start processing
2023-07-05 02:53:09,913 | INFO: Chain [1] done processing
2023-07-05 02:53:11,664 | INFO: 127.0.0.1 - - [05/Jul/2023 02:53:11] "POST /forecast HTTP/1.1" 200 -
2023-07-05 02:57:24,622 | INFO: 127.0.0.1 - - [05/Jul/2023 02:57:24] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 02:57:24,893 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 02:57:25,476 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688506044&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 02:57:25,705 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 02:57:25,804 | DEBUG: TBB already found in load path
2023-07-05 02:57:25,995 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpemfiduxo\qb6fpa3c.json
2023-07-05 02:57:28,892 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpemfiduxo\ujsxfhdi.json
2023-07-05 02:57:28,894 | DEBUG: idx 0
2023-07-05 02:57:28,894 | DEBUG: running CmdStan, num_threads: None
2023-07-05 02:57:28,894 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=29575', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpemfiduxo\\qb6fpa3c.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpemfiduxo\\ujsxfhdi.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpemfiduxo\\prophet_model0li_u_xl\\prophet_model-20230705025728.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 02:57:28,894 | INFO: Chain [1] start processing
2023-07-05 02:57:47,335 | INFO: Chain [1] done processing
2023-07-05 02:57:48,664 | INFO: 127.0.0.1 - - [05/Jul/2023 02:57:48] "POST /forecast HTTP/1.1" 200 -
2023-07-05 03:06:55,486 | INFO: 127.0.0.1 - - [05/Jul/2023 03:06:55] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 03:06:55,756 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 03:06:56,131 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688506615&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 03:06:56,360 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 03:06:56,490 | DEBUG: TBB already found in load path
2023-07-05 03:06:56,667 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpemfiduxo\gpzb2gba.json
2023-07-05 03:06:59,532 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpemfiduxo\vz3yavoa.json
2023-07-05 03:06:59,534 | DEBUG: idx 0
2023-07-05 03:06:59,534 | DEBUG: running CmdStan, num_threads: None
2023-07-05 03:06:59,534 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=34065', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpemfiduxo\\gpzb2gba.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpemfiduxo\\vz3yavoa.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpemfiduxo\\prophet_modelva865nsz\\prophet_model-20230705030659.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 03:06:59,534 | INFO: Chain [1] start processing
2023-07-05 03:07:14,064 | INFO: Chain [1] done processing
2023-07-05 03:07:15,350 | INFO: 127.0.0.1 - - [05/Jul/2023 03:07:15] "POST /forecast HTTP/1.1" 200 -
2023-07-05 03:09:22,604 | INFO: 127.0.0.1 - - [05/Jul/2023 03:09:22] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 03:09:22,876 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 03:09:23,616 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688506762&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 03:09:23,851 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 03:09:23,947 | DEBUG: TBB already found in load path
2023-07-05 03:09:24,104 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpemfiduxo\4swwzg7o.json
2023-07-05 03:09:27,019 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpemfiduxo\91d2hsi8.json
2023-07-05 03:09:27,022 | DEBUG: idx 0
2023-07-05 03:09:27,022 | DEBUG: running CmdStan, num_threads: None
2023-07-05 03:09:27,022 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=5878', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpemfiduxo\\4swwzg7o.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpemfiduxo\\91d2hsi8.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpemfiduxo\\prophet_modelu013p0ys\\prophet_model-20230705030927.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 03:09:27,022 | INFO: Chain [1] start processing
2023-07-05 03:09:49,200 | INFO: Chain [1] done processing
2023-07-05 03:09:50,605 | INFO: 127.0.0.1 - - [05/Jul/2023 03:09:50] "POST /forecast HTTP/1.1" 200 -
2023-07-05 03:16:14,504 | INFO: 127.0.0.1 - - [05/Jul/2023 03:16:14] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 03:16:14,774 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 03:16:15,700 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688507174&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 03:16:15,934 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 03:16:16,087 | DEBUG: TBB already found in load path
2023-07-05 03:16:16,252 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpemfiduxo\sfv69pfb.json
2023-07-05 03:16:19,024 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpemfiduxo\8fkg1g80.json
2023-07-05 03:16:19,025 | DEBUG: idx 0
2023-07-05 03:16:19,026 | DEBUG: running CmdStan, num_threads: None
2023-07-05 03:16:19,026 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=69104', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpemfiduxo\\sfv69pfb.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpemfiduxo\\8fkg1g80.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpemfiduxo\\prophet_modelbo4940bg\\prophet_model-20230705031619.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 03:16:19,026 | INFO: Chain [1] start processing
2023-07-05 03:16:28,224 | INFO: Chain [1] done processing
2023-07-05 03:16:29,512 | INFO: 127.0.0.1 - - [05/Jul/2023 03:16:29] "POST /forecast HTTP/1.1" 200 -
2023-07-05 03:17:45,434 | INFO: 127.0.0.1 - - [05/Jul/2023 03:17:45] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 03:17:45,704 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 03:17:45,960 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688507265&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 03:17:46,179 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 03:17:46,275 | DEBUG: TBB already found in load path
2023-07-05 03:17:46,423 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpemfiduxo\vse9mcbx.json
2023-07-05 03:17:49,166 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpemfiduxo\oaf4uuuo.json
2023-07-05 03:17:49,167 | DEBUG: idx 0
2023-07-05 03:17:49,167 | DEBUG: running CmdStan, num_threads: None
2023-07-05 03:17:49,168 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=72995', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpemfiduxo\\vse9mcbx.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpemfiduxo\\oaf4uuuo.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpemfiduxo\\prophet_modelfh0m4i6w\\prophet_model-20230705031749.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 03:17:49,168 | INFO: Chain [1] start processing
2023-07-05 03:18:08,266 | INFO: Chain [1] done processing
2023-07-05 03:18:09,572 | INFO: 127.0.0.1 - - [05/Jul/2023 03:18:09] "POST /forecast HTTP/1.1" 200 -
2023-07-05 03:21:01,783 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 03:21:01,787 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 03:21:01,788 | DEBUG: interactive is False
2023-07-05 03:21:01,788 | DEBUG: platform is win32
2023-07-05 03:21:01,788 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 03:21:01,881 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 03:21:01,885 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 03:21:02,343 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 03:21:02,344 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 03:21:02,393 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 03:21:02,393 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 03:21:32,424 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 03:21:32,426 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 03:21:32,428 | DEBUG: interactive is False
2023-07-05 03:21:32,428 | DEBUG: platform is win32
2023-07-05 03:21:32,428 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 03:21:32,511 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 03:21:32,514 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 03:21:32,896 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 03:21:32,896 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 03:21:32,920 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 03:21:32,920 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 03:21:40,492 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 03:21:40,889 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688507500&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 03:21:41,317 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 03:21:41,415 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 03:21:41,723 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpr1cuzy1o\crih6pjw.json
2023-07-05 03:21:42,796 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpr1cuzy1o\kl9m6cur.json
2023-07-05 03:21:42,799 | DEBUG: idx 0
2023-07-05 03:21:42,799 | DEBUG: running CmdStan, num_threads: None
2023-07-05 03:21:42,799 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=73148', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpr1cuzy1o\\crih6pjw.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpr1cuzy1o\\kl9m6cur.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpr1cuzy1o\\prophet_modelf9dxlpbs\\prophet_model-20230705032142.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 03:21:42,800 | INFO: Chain [1] start processing
2023-07-05 03:21:50,603 | INFO: Chain [1] done processing
2023-07-05 03:21:52,407 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 61, in getForecast
    data = graphData.to_json()
AttributeError: 'dict' object has no attribute 'to_json'
2023-07-05 03:21:52,423 | INFO: 127.0.0.1 - - [05/Jul/2023 03:21:52] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 03:23:18,924 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 03:23:18,927 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 03:23:18,929 | DEBUG: interactive is False
2023-07-05 03:23:18,929 | DEBUG: platform is win32
2023-07-05 03:23:18,929 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 03:23:19,013 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 03:23:19,016 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 03:23:19,421 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 03:23:19,421 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 03:23:19,442 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 03:23:19,442 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 03:23:21,606 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 03:23:21,856 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688507601&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 03:23:22,255 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 03:23:22,354 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 03:23:22,606 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpwp4zjqgw\jj7o24l1.json
2023-07-05 03:23:23,718 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpwp4zjqgw\w9pem49h.json
2023-07-05 03:23:23,721 | DEBUG: idx 0
2023-07-05 03:23:23,721 | DEBUG: running CmdStan, num_threads: None
2023-07-05 03:23:23,721 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=34843', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpwp4zjqgw\\jj7o24l1.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpwp4zjqgw\\w9pem49h.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpwp4zjqgw\\prophet_model4eihku4f\\prophet_model-20230705032323.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 03:23:23,721 | INFO: Chain [1] start processing
2023-07-05 03:23:30,736 | INFO: Chain [1] done processing
2023-07-05 03:23:32,699 | INFO: 127.0.0.1 - - [05/Jul/2023 03:23:32] "POST /forecast HTTP/1.1" 200 -
2023-07-05 03:24:01,567 | INFO: 127.0.0.1 - - [05/Jul/2023 03:24:01] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 03:24:01,644 | INFO: 127.0.0.1 - - [05/Jul/2023 03:24:01] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 03:24:01,837 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 03:24:01,888 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 03:24:01,967 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688507641&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 03:24:02,015 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688507641&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 03:24:02,239 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 03:24:02,317 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 03:24:02,347 | DEBUG: TBB already found in load path
2023-07-05 03:24:02,435 | DEBUG: TBB already found in load path
2023-07-05 03:24:02,523 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpwp4zjqgw\ot8v9bnw.json
2023-07-05 03:24:04,787 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpwp4zjqgw\s0ntwp9h.json
2023-07-05 03:24:08,004 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpwp4zjqgw\dtzbuh7r.json
2023-07-05 03:24:08,025 | DEBUG: idx 0
2023-07-05 03:24:08,025 | DEBUG: running CmdStan, num_threads: None
2023-07-05 03:24:08,025 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=5948', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpwp4zjqgw\\ot8v9bnw.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpwp4zjqgw\\dtzbuh7r.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpwp4zjqgw\\prophet_modelmn5ugk8z\\prophet_model-20230705032408.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 03:24:08,025 | INFO: Chain [1] start processing
2023-07-05 03:24:08,569 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpwp4zjqgw\_l163dtu.json
2023-07-05 03:24:08,571 | DEBUG: idx 0
2023-07-05 03:24:08,571 | DEBUG: running CmdStan, num_threads: None
2023-07-05 03:24:08,571 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=14477', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpwp4zjqgw\\s0ntwp9h.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpwp4zjqgw\\_l163dtu.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpwp4zjqgw\\prophet_modelg_lkmpra\\prophet_model-20230705032408.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 03:24:08,571 | INFO: Chain [1] start processing
2023-07-05 03:24:40,231 | INFO: Chain [1] done processing
2023-07-05 03:24:41,907 | INFO: 127.0.0.1 - - [05/Jul/2023 03:24:41] "POST /forecast HTTP/1.1" 200 -
2023-07-05 03:24:44,431 | INFO: Chain [1] done processing
2023-07-05 03:24:45,760 | INFO: 127.0.0.1 - - [05/Jul/2023 03:24:45] "POST /forecast HTTP/1.1" 200 -
2023-07-05 03:29:31,969 | INFO: 127.0.0.1 - - [05/Jul/2023 03:29:31] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 03:29:32,240 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 03:29:32,731 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688507972&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 03:29:32,952 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 03:29:33,166 | DEBUG: TBB already found in load path
2023-07-05 03:29:33,382 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpwp4zjqgw\62htsk9j.json
2023-07-05 03:29:36,371 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpwp4zjqgw\yape017t.json
2023-07-05 03:29:36,373 | DEBUG: idx 0
2023-07-05 03:29:36,373 | DEBUG: running CmdStan, num_threads: None
2023-07-05 03:29:36,373 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=10906', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpwp4zjqgw\\62htsk9j.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpwp4zjqgw\\yape017t.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpwp4zjqgw\\prophet_modelfutoe3l1\\prophet_model-20230705032936.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 03:29:36,373 | INFO: Chain [1] start processing
2023-07-05 03:29:56,297 | INFO: Chain [1] done processing
2023-07-05 03:29:57,689 | INFO: 127.0.0.1 - - [05/Jul/2023 03:29:57] "POST /forecast HTTP/1.1" 200 -
2023-07-05 03:30:57,069 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 03:30:57,073 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 03:30:57,074 | DEBUG: interactive is False
2023-07-05 03:30:57,074 | DEBUG: platform is win32
2023-07-05 03:30:57,074 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 03:30:57,165 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 03:30:57,169 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 03:30:57,646 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 03:30:57,646 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 03:30:57,673 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 03:30:57,674 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 03:31:03,385 | INFO: 127.0.0.1 - - [05/Jul/2023 03:31:03] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 03:31:03,650 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 03:31:04,028 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688508063&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 03:31:04,370 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 03:31:04,451 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 03:31:04,736 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpd98ig3v2\hl9ac1zc.json
2023-07-05 03:31:07,535 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpd98ig3v2\m25q8ly8.json
2023-07-05 03:31:07,537 | DEBUG: idx 0
2023-07-05 03:31:07,537 | DEBUG: running CmdStan, num_threads: None
2023-07-05 03:31:07,537 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=8950', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpd98ig3v2\\hl9ac1zc.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpd98ig3v2\\m25q8ly8.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpd98ig3v2\\prophet_modelo7qf7m3r\\prophet_model-20230705033107.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 03:31:07,537 | INFO: Chain [1] start processing
2023-07-05 03:31:23,265 | INFO: Chain [1] done processing
2023-07-05 03:31:24,588 | INFO: 127.0.0.1 - - [05/Jul/2023 03:31:24] "POST /forecast HTTP/1.1" 200 -
2023-07-05 03:34:03,266 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 03:34:03,269 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 03:34:03,271 | DEBUG: interactive is False
2023-07-05 03:34:03,271 | DEBUG: platform is win32
2023-07-05 03:34:03,271 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 03:34:03,356 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 03:34:03,360 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 03:34:03,765 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 03:34:03,766 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 03:34:03,791 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 03:34:03,791 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 03:34:07,380 | INFO: 127.0.0.1 - - [05/Jul/2023 03:34:07] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 03:34:07,640 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 03:34:08,166 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688508247&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 03:34:08,495 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 03:34:08,577 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 03:34:08,826 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\ki8kt121.json
2023-07-05 03:34:11,483 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\k_zydtfe.json
2023-07-05 03:34:11,485 | DEBUG: idx 0
2023-07-05 03:34:11,486 | DEBUG: running CmdStan, num_threads: None
2023-07-05 03:34:11,486 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=86755', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\ki8kt121.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\k_zydtfe.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\prophet_model60s41ybg\\prophet_model-20230705033411.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 03:34:11,486 | INFO: Chain [1] start processing
2023-07-05 03:34:26,050 | INFO: Chain [1] done processing
2023-07-05 03:34:27,369 | INFO: 127.0.0.1 - - [05/Jul/2023 03:34:27] "POST /forecast HTTP/1.1" 200 -
2023-07-05 03:37:27,501 | INFO: 127.0.0.1 - - [05/Jul/2023 03:37:27] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 03:37:27,768 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 03:37:28,377 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688508447&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 03:37:28,602 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 03:37:28,693 | DEBUG: TBB already found in load path
2023-07-05 03:37:28,873 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\763so4gq.json
2023-07-05 03:37:31,786 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\zjwsu5df.json
2023-07-05 03:37:31,788 | DEBUG: idx 0
2023-07-05 03:37:31,788 | DEBUG: running CmdStan, num_threads: None
2023-07-05 03:37:31,788 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=76876', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\763so4gq.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\zjwsu5df.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\prophet_modelu4h13_11\\prophet_model-20230705033731.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 03:37:31,788 | INFO: Chain [1] start processing
2023-07-05 03:37:50,213 | INFO: Chain [1] done processing
2023-07-05 03:37:51,516 | INFO: 127.0.0.1 - - [05/Jul/2023 03:37:51] "POST /forecast HTTP/1.1" 200 -
2023-07-05 03:38:33,170 | INFO: 127.0.0.1 - - [05/Jul/2023 03:38:33] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 03:38:33,442 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 03:38:33,755 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688508513&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 03:38:33,982 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 03:38:34,135 | DEBUG: TBB already found in load path
2023-07-05 03:38:34,294 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\norxwts8.json
2023-07-05 03:38:37,032 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\ogmz70yx.json
2023-07-05 03:38:37,034 | DEBUG: idx 0
2023-07-05 03:38:37,034 | DEBUG: running CmdStan, num_threads: None
2023-07-05 03:38:37,034 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=14905', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\norxwts8.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\ogmz70yx.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\prophet_modeltltx1_1y\\prophet_model-20230705033837.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 03:38:37,034 | INFO: Chain [1] start processing
2023-07-05 03:38:50,192 | INFO: Chain [1] done processing
2023-07-05 03:38:51,514 | INFO: 127.0.0.1 - - [05/Jul/2023 03:38:51] "POST /forecast HTTP/1.1" 200 -
2023-07-05 03:39:55,150 | INFO: 127.0.0.1 - - [05/Jul/2023 03:39:55] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 03:39:55,395 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 03:39:55,702 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688508595&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 03:39:55,926 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 03:39:56,018 | DEBUG: TBB already found in load path
2023-07-05 03:39:56,187 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\dg5hlts4.json
2023-07-05 03:39:58,908 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\l_csjl2j.json
2023-07-05 03:39:58,910 | DEBUG: idx 0
2023-07-05 03:39:58,910 | DEBUG: running CmdStan, num_threads: None
2023-07-05 03:39:58,910 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=8677', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\dg5hlts4.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\l_csjl2j.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\prophet_modelzn7275ih\\prophet_model-20230705033958.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 03:39:58,910 | INFO: Chain [1] start processing
2023-07-05 03:40:12,158 | INFO: Chain [1] done processing
2023-07-05 03:40:13,504 | INFO: 127.0.0.1 - - [05/Jul/2023 03:40:13] "POST /forecast HTTP/1.1" 200 -
2023-07-05 03:40:54,256 | INFO: 127.0.0.1 - - [05/Jul/2023 03:40:54] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 03:40:54,531 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 03:40:54,803 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688508654&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 03:40:55,023 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 03:40:55,108 | DEBUG: TBB already found in load path
2023-07-05 03:40:55,258 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\y14vml_6.json
2023-07-05 03:40:58,068 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\ftagh5jv.json
2023-07-05 03:40:58,070 | DEBUG: idx 0
2023-07-05 03:40:58,070 | DEBUG: running CmdStan, num_threads: None
2023-07-05 03:40:58,070 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=97354', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\y14vml_6.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\ftagh5jv.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\prophet_modeljyl4ppsx\\prophet_model-20230705034058.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 03:40:58,070 | INFO: Chain [1] start processing
2023-07-05 03:41:16,479 | INFO: Chain [1] done processing
2023-07-05 03:41:17,845 | INFO: 127.0.0.1 - - [05/Jul/2023 03:41:17] "POST /forecast HTTP/1.1" 200 -
2023-07-05 03:47:29,595 | INFO: 127.0.0.1 - - [05/Jul/2023 03:47:29] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 03:47:29,867 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 03:47:30,012 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688509049&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 03:47:30,231 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 03:47:30,359 | DEBUG: TBB already found in load path
2023-07-05 03:47:30,510 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\kfa442f0.json
2023-07-05 03:47:33,376 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\jme8i4rz.json
2023-07-05 03:47:33,379 | DEBUG: idx 0
2023-07-05 03:47:33,379 | DEBUG: running CmdStan, num_threads: None
2023-07-05 03:47:33,379 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=19389', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\kfa442f0.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\jme8i4rz.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\prophet_model6evqa09a\\prophet_model-20230705034733.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 03:47:33,379 | INFO: Chain [1] start processing
2023-07-05 03:47:50,279 | INFO: Chain [1] done processing
2023-07-05 03:47:51,621 | INFO: 127.0.0.1 - - [05/Jul/2023 03:47:51] "POST /forecast HTTP/1.1" 200 -
2023-07-05 03:50:07,618 | INFO: 127.0.0.1 - - [05/Jul/2023 03:50:07] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 03:50:07,889 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 03:50:08,207 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688509207&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 03:50:08,426 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 03:50:08,506 | DEBUG: TBB already found in load path
2023-07-05 03:50:08,652 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\oacy_mr6.json
2023-07-05 03:50:11,449 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\us1y34hc.json
2023-07-05 03:50:11,451 | DEBUG: idx 0
2023-07-05 03:50:11,451 | DEBUG: running CmdStan, num_threads: None
2023-07-05 03:50:11,451 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=32360', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\oacy_mr6.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\us1y34hc.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\prophet_model8p4atbpw\\prophet_model-20230705035011.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 03:50:11,451 | INFO: Chain [1] start processing
2023-07-05 03:50:28,559 | INFO: Chain [1] done processing
2023-07-05 03:50:29,962 | INFO: 127.0.0.1 - - [05/Jul/2023 03:50:29] "POST /forecast HTTP/1.1" 200 -
2023-07-05 03:52:17,025 | INFO: 127.0.0.1 - - [05/Jul/2023 03:52:17] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 03:52:17,296 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 03:52:17,552 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688509337&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 03:52:17,782 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 03:52:17,861 | DEBUG: TBB already found in load path
2023-07-05 03:52:18,006 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\mqnqt07t.json
2023-07-05 03:52:20,887 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\uofem3bk.json
2023-07-05 03:52:20,889 | DEBUG: idx 0
2023-07-05 03:52:20,889 | DEBUG: running CmdStan, num_threads: None
2023-07-05 03:52:20,889 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=45971', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\mqnqt07t.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\uofem3bk.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\prophet_modelnb_40z49\\prophet_model-20230705035220.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 03:52:20,889 | INFO: Chain [1] start processing
2023-07-05 03:52:33,399 | INFO: Chain [1] done processing
2023-07-05 03:52:34,718 | INFO: 127.0.0.1 - - [05/Jul/2023 03:52:34] "POST /forecast HTTP/1.1" 200 -
2023-07-05 04:33:10,332 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:33:10,340 | DEBUG: Data: None
2023-07-05 04:33:10,340 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:33:10,364 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:33:10,364 | DEBUG: Data: None
2023-07-05 04:33:10,368 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:33:10,370 | DEBUG: Starting new HTTPS connection (1): www.reddit.com:443
2023-07-05 04:33:10,371 | DEBUG: Starting new HTTPS connection (2): www.reddit.com:443
2023-07-05 04:33:10,706 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:33:10,706 | DEBUG: Data: None
2023-07-05 04:33:10,706 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:33:10,708 | DEBUG: Starting new HTTPS connection (3): www.reddit.com:443
2023-07-05 04:33:11,187 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 669
2023-07-05 04:33:11,196 | DEBUG: Starting new HTTPS connection (1): oauth.reddit.com:443
2023-07-05 04:33:11,208 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 667
2023-07-05 04:33:11,211 | DEBUG: Starting new HTTPS connection (2): oauth.reddit.com:443
2023-07-05 04:33:11,462 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 665
2023-07-05 04:33:11,467 | DEBUG: Starting new HTTPS connection (3): oauth.reddit.com:443
2023-07-05 04:33:11,531 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 04:33:11,534 | DEBUG: Response: 200 (136 bytes)
2023-07-05 04:33:11,545 | INFO: 127.0.0.1 - - [05/Jul/2023 04:33:11] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-05 04:33:11,571 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2530
2023-07-05 04:33:11,573 | DEBUG: Response: 200 (2530 bytes)
2023-07-05 04:33:11,584 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:33:11,585 | DEBUG: Data: None
2023-07-05 04:33:11,585 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:33:11,901 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3717
2023-07-05 04:33:11,902 | DEBUG: Response: 200 (3717 bytes)
2023-07-05 04:33:11,906 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:33:11,906 | DEBUG: Data: None
2023-07-05 04:33:11,906 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:33:11,926 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2527
2023-07-05 04:33:11,927 | DEBUG: Response: 200 (2527 bytes)
2023-07-05 04:33:11,928 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:33:11,928 | DEBUG: Data: None
2023-07-05 04:33:11,928 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:33:12,267 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3716
2023-07-05 04:33:12,268 | DEBUG: Response: 200 (3716 bytes)
2023-07-05 04:33:12,269 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:33:12,270 | DEBUG: Data: None
2023-07-05 04:33:12,270 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:33:12,397 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6378
2023-07-05 04:33:12,398 | DEBUG: Response: 200 (6378 bytes)
2023-07-05 04:33:12,400 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 04:33:12,401 | DEBUG: Data: None
2023-07-05 04:33:12,401 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:33:12,631 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6355
2023-07-05 04:33:12,633 | DEBUG: Response: 200 (6355 bytes)
2023-07-05 04:33:12,635 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 04:33:12,635 | DEBUG: Data: None
2023-07-05 04:33:12,635 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:33:13,724 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 33598
2023-07-05 04:33:13,727 | DEBUG: Response: 200 (33598 bytes)
2023-07-05 04:33:13,750 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 04:33:13,750 | DEBUG: Data: None
2023-07-05 04:33:13,750 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:33:14,161 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 33540
2023-07-05 04:33:14,169 | DEBUG: Response: 200 (33540 bytes)
2023-07-05 04:33:14,189 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 04:33:14,189 | DEBUG: Data: None
2023-07-05 04:33:14,189 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:33:14,296 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 13844
2023-07-05 04:33:14,297 | DEBUG: Response: 200 (13844 bytes)
2023-07-05 04:33:14,305 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 04:33:14,305 | DEBUG: Data: None
2023-07-05 04:33:14,305 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:33:14,652 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4288
2023-07-05 04:33:14,653 | DEBUG: Response: 200 (4288 bytes)
2023-07-05 04:33:14,655 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 04:33:14,655 | DEBUG: Data: None
2023-07-05 04:33:14,655 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:33:14,728 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 13858
2023-07-05 04:33:14,730 | DEBUG: Response: 200 (13858 bytes)
2023-07-05 04:33:14,736 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 04:33:14,736 | DEBUG: Data: None
2023-07-05 04:33:14,736 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:33:15,055 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5818
2023-07-05 04:33:15,057 | DEBUG: Response: 200 (5818 bytes)
2023-07-05 04:33:15,059 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:33:15,059 | DEBUG: Data: None
2023-07-05 04:33:15,059 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:33:15,075 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4281
2023-07-05 04:33:15,076 | DEBUG: Response: 200 (4281 bytes)
2023-07-05 04:33:15,077 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 04:33:15,077 | DEBUG: Data: None
2023-07-05 04:33:15,077 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:33:15,376 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3717
2023-07-05 04:33:15,377 | DEBUG: Response: 200 (3717 bytes)
2023-07-05 04:33:15,379 | INFO: 127.0.0.1 - - [05/Jul/2023 04:33:15] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-05 04:33:15,460 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5818
2023-07-05 04:33:15,462 | DEBUG: Response: 200 (5818 bytes)
2023-07-05 04:33:15,464 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:33:15,464 | DEBUG: Data: None
2023-07-05 04:33:15,464 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:33:15,779 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3718
2023-07-05 04:33:15,780 | DEBUG: Response: 200 (3718 bytes)
2023-07-05 04:33:15,781 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:33:15,781 | DEBUG: Data: None
2023-07-05 04:33:15,781 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:33:16,105 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 04:33:16,106 | DEBUG: Response: 200 (136 bytes)
2023-07-05 04:33:16,107 | INFO: 127.0.0.1 - - [05/Jul/2023 04:33:16] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 04:38:36,415 | INFO: 127.0.0.1 - - [05/Jul/2023 04:38:36] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 04:38:36,708 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 04:38:36,902 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688512116&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 04:38:37,223 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 04:38:37,517 | DEBUG: TBB already found in load path
2023-07-05 04:38:37,770 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\z89gtxnk.json
2023-07-05 04:38:40,513 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\eihexppf.json
2023-07-05 04:38:40,515 | DEBUG: idx 0
2023-07-05 04:38:40,515 | DEBUG: running CmdStan, num_threads: None
2023-07-05 04:38:40,515 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=94313', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\z89gtxnk.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\eihexppf.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\prophet_modelc8f7po48\\prophet_model-20230705043840.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 04:38:40,515 | INFO: Chain [1] start processing
2023-07-05 04:38:58,260 | INFO: Chain [1] done processing
2023-07-05 04:38:59,543 | INFO: 127.0.0.1 - - [05/Jul/2023 04:38:59] "POST /forecast HTTP/1.1" 200 -
2023-07-05 04:39:36,563 | INFO: 127.0.0.1 - - [05/Jul/2023 04:39:36] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 04:39:36,878 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 04:39:37,472 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688512176&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 04:39:37,723 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 04:39:37,806 | DEBUG: TBB already found in load path
2023-07-05 04:39:37,975 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\5ydrv6qx.json
2023-07-05 04:39:40,886 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\7f0eclk4.json
2023-07-05 04:39:40,889 | DEBUG: idx 0
2023-07-05 04:39:40,889 | DEBUG: running CmdStan, num_threads: None
2023-07-05 04:39:40,890 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=45066', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\5ydrv6qx.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\7f0eclk4.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\prophet_modelig30rrmx\\prophet_model-20230705043940.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 04:39:40,890 | INFO: Chain [1] start processing
2023-07-05 04:40:00,573 | INFO: Chain [1] done processing
2023-07-05 04:40:02,094 | INFO: 127.0.0.1 - - [05/Jul/2023 04:40:02] "POST /forecast HTTP/1.1" 200 -
2023-07-05 04:40:30,115 | INFO: 127.0.0.1 - - [05/Jul/2023 04:40:30] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 04:40:30,389 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 04:40:30,512 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688512230&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 04:40:30,908 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 04:40:30,988 | DEBUG: TBB already found in load path
2023-07-05 04:40:31,135 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\d76pjt0f.json
2023-07-05 04:40:34,036 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\4l48j4w4.json
2023-07-05 04:40:34,037 | DEBUG: idx 0
2023-07-05 04:40:34,037 | DEBUG: running CmdStan, num_threads: None
2023-07-05 04:40:34,037 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=80528', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\d76pjt0f.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\4l48j4w4.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\prophet_models252gu7a\\prophet_model-20230705044034.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 04:40:34,037 | INFO: Chain [1] start processing
2023-07-05 04:40:51,639 | INFO: Chain [1] done processing
2023-07-05 04:40:53,041 | INFO: 127.0.0.1 - - [05/Jul/2023 04:40:53] "POST /forecast HTTP/1.1" 200 -
2023-07-05 04:42:41,614 | INFO: 127.0.0.1 - - [05/Jul/2023 04:42:41] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 04:42:41,883 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 04:42:42,135 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688512361&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 04:42:42,354 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 04:42:42,442 | DEBUG: TBB already found in load path
2023-07-05 04:42:42,669 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\9nuv6pjd.json
2023-07-05 04:42:45,487 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\a6_pbrqi.json
2023-07-05 04:42:45,488 | DEBUG: idx 0
2023-07-05 04:42:45,489 | DEBUG: running CmdStan, num_threads: None
2023-07-05 04:42:45,489 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=61160', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\9nuv6pjd.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\a6_pbrqi.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\prophet_modeltdtz8oa7\\prophet_model-20230705044245.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 04:42:45,489 | INFO: Chain [1] start processing
2023-07-05 04:43:00,576 | INFO: Chain [1] done processing
2023-07-05 04:43:01,850 | INFO: 127.0.0.1 - - [05/Jul/2023 04:43:01] "POST /forecast HTTP/1.1" 200 -
2023-07-05 04:47:39,035 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:47:39,035 | DEBUG: Data: None
2023-07-05 04:47:39,035 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:47:39,037 | DEBUG: Resetting dropped connection: oauth.reddit.com
2023-07-05 04:47:39,147 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:47:39,147 | DEBUG: Data: None
2023-07-05 04:47:39,147 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:47:39,150 | DEBUG: Resetting dropped connection: oauth.reddit.com
2023-07-05 04:47:39,333 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 04:47:39,334 | DEBUG: Response: 200 (136 bytes)
2023-07-05 04:47:39,335 | INFO: 127.0.0.1 - - [05/Jul/2023 04:47:39] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-05 04:47:39,538 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:47:39,539 | DEBUG: Data: None
2023-07-05 04:47:39,539 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:47:39,544 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2527
2023-07-05 04:47:39,545 | DEBUG: Response: 200 (2527 bytes)
2023-07-05 04:47:39,549 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:47:39,549 | DEBUG: Data: None
2023-07-05 04:47:39,549 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:47:39,835 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2528
2023-07-05 04:47:39,835 | DEBUG: Response: 200 (2528 bytes)
2023-07-05 04:47:39,836 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:47:39,836 | DEBUG: Data: None
2023-07-05 04:47:39,836 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:47:39,904 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3714
2023-07-05 04:47:39,905 | DEBUG: Response: 200 (3714 bytes)
2023-07-05 04:47:39,907 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:47:39,907 | DEBUG: Data: None
2023-07-05 04:47:39,907 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:47:40,182 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3713
2023-07-05 04:47:40,183 | DEBUG: Response: 200 (3713 bytes)
2023-07-05 04:47:40,184 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:47:40,184 | DEBUG: Data: None
2023-07-05 04:47:40,184 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:47:40,312 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6364
2023-07-05 04:47:40,315 | DEBUG: Response: 200 (6364 bytes)
2023-07-05 04:47:40,316 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 04:47:40,316 | DEBUG: Data: None
2023-07-05 04:47:40,316 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:47:40,556 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6373
2023-07-05 04:47:40,557 | DEBUG: Response: 200 (6373 bytes)
2023-07-05 04:47:40,558 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 04:47:40,558 | DEBUG: Data: None
2023-07-05 04:47:40,558 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:47:41,632 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 33785
2023-07-05 04:47:41,821 | DEBUG: Response: 200 (33785 bytes)
2023-07-05 04:47:41,836 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 04:47:41,836 | DEBUG: Data: None
2023-07-05 04:47:41,836 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:47:41,918 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 33764
2023-07-05 04:47:41,922 | DEBUG: Response: 200 (33764 bytes)
2023-07-05 04:47:41,937 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 04:47:41,937 | DEBUG: Data: None
2023-07-05 04:47:41,937 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:47:42,400 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14055
2023-07-05 04:47:42,402 | DEBUG: Response: 200 (14055 bytes)
2023-07-05 04:47:42,407 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 04:47:42,407 | DEBUG: Data: None
2023-07-05 04:47:42,407 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:47:42,504 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14043
2023-07-05 04:47:42,700 | DEBUG: Response: 200 (14043 bytes)
2023-07-05 04:47:42,707 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 04:47:42,707 | DEBUG: Data: None
2023-07-05 04:47:42,707 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:47:42,775 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5970
2023-07-05 04:47:42,776 | DEBUG: Response: 200 (5970 bytes)
2023-07-05 04:47:42,819 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 04:47:42,819 | DEBUG: Data: None
2023-07-05 04:47:42,819 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:47:43,060 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5969
2023-07-05 04:47:43,061 | DEBUG: Response: 200 (5969 bytes)
2023-07-05 04:47:43,063 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 04:47:43,063 | DEBUG: Data: None
2023-07-05 04:47:43,063 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:47:43,254 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4288
2023-07-05 04:47:43,255 | DEBUG: Response: 200 (4288 bytes)
2023-07-05 04:47:43,256 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:47:43,257 | DEBUG: Data: None
2023-07-05 04:47:43,257 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:47:43,396 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4275
2023-07-05 04:47:43,397 | DEBUG: Response: 200 (4275 bytes)
2023-07-05 04:47:43,398 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:47:43,398 | DEBUG: Data: None
2023-07-05 04:47:43,398 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:47:43,594 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3713
2023-07-05 04:47:43,595 | DEBUG: Response: 200 (3713 bytes)
2023-07-05 04:47:43,596 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:47:43,596 | DEBUG: Data: None
2023-07-05 04:47:43,596 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:47:43,718 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3714
2023-07-05 04:47:43,719 | DEBUG: Response: 200 (3714 bytes)
2023-07-05 04:47:43,720 | INFO: 127.0.0.1 - - [05/Jul/2023 04:47:43] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-05 04:47:43,903 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 04:47:43,904 | DEBUG: Response: 200 (136 bytes)
2023-07-05 04:47:43,904 | INFO: 127.0.0.1 - - [05/Jul/2023 04:47:43] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 04:51:31,113 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:51:31,113 | DEBUG: Data: None
2023-07-05 04:51:31,113 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:51:31,522 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2529
2023-07-05 04:51:31,524 | DEBUG: Response: 200 (2529 bytes)
2023-07-05 04:51:31,528 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:51:31,528 | DEBUG: Data: None
2023-07-05 04:51:31,528 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:51:31,875 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3720
2023-07-05 04:51:31,876 | DEBUG: Response: 200 (3720 bytes)
2023-07-05 04:51:31,877 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:51:31,877 | DEBUG: Data: None
2023-07-05 04:51:31,877 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:51:32,253 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6363
2023-07-05 04:51:32,254 | DEBUG: Response: 200 (6363 bytes)
2023-07-05 04:51:32,256 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 04:51:32,256 | DEBUG: Data: None
2023-07-05 04:51:32,256 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:51:34,100 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 33903
2023-07-05 04:51:34,104 | DEBUG: Response: 200 (33903 bytes)
2023-07-05 04:51:34,120 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 04:51:34,120 | DEBUG: Data: None
2023-07-05 04:51:34,120 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:51:34,751 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14058
2023-07-05 04:51:34,950 | DEBUG: Response: 200 (14058 bytes)
2023-07-05 04:51:34,956 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 04:51:34,956 | DEBUG: Data: None
2023-07-05 04:51:34,956 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:51:35,333 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5968
2023-07-05 04:51:35,334 | DEBUG: Response: 200 (5968 bytes)
2023-07-05 04:51:35,336 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 04:51:35,336 | DEBUG: Data: None
2023-07-05 04:51:35,337 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:51:35,676 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4288
2023-07-05 04:51:35,677 | DEBUG: Response: 200 (4288 bytes)
2023-07-05 04:51:35,679 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:51:35,679 | DEBUG: Data: None
2023-07-05 04:51:35,679 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:51:36,006 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3715
2023-07-05 04:51:36,007 | DEBUG: Response: 200 (3715 bytes)
2023-07-05 04:51:36,008 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:51:36,008 | DEBUG: Data: None
2023-07-05 04:51:36,008 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:51:36,288 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 04:51:36,289 | DEBUG: Response: 200 (136 bytes)
2023-07-05 04:51:36,289 | INFO: 127.0.0.1 - - [05/Jul/2023 04:51:36] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 04:52:12,107 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:52:12,107 | DEBUG: Data: None
2023-07-05 04:52:12,107 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:52:12,446 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2528
2023-07-05 04:52:12,447 | DEBUG: Response: 200 (2528 bytes)
2023-07-05 04:52:12,447 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:52:12,447 | DEBUG: Data: None
2023-07-05 04:52:12,447 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:52:12,790 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3721
2023-07-05 04:52:12,791 | DEBUG: Response: 200 (3721 bytes)
2023-07-05 04:52:12,792 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:52:12,792 | DEBUG: Data: None
2023-07-05 04:52:12,792 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:52:13,146 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6368
2023-07-05 04:52:13,146 | DEBUG: Response: 200 (6368 bytes)
2023-07-05 04:52:13,147 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 04:52:13,147 | DEBUG: Data: None
2023-07-05 04:52:13,147 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:52:14,570 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 33858
2023-07-05 04:52:14,578 | DEBUG: Response: 200 (33858 bytes)
2023-07-05 04:52:14,623 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 04:52:14,623 | DEBUG: Data: None
2023-07-05 04:52:14,623 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:52:15,216 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14054
2023-07-05 04:52:15,416 | DEBUG: Response: 200 (14054 bytes)
2023-07-05 04:52:15,425 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 04:52:15,425 | DEBUG: Data: None
2023-07-05 04:52:15,425 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:52:15,818 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5968
2023-07-05 04:52:15,820 | DEBUG: Response: 200 (5968 bytes)
2023-07-05 04:52:15,822 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 04:52:15,822 | DEBUG: Data: None
2023-07-05 04:52:15,823 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:52:16,176 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4285
2023-07-05 04:52:16,176 | DEBUG: Response: 200 (4285 bytes)
2023-07-05 04:52:16,178 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:52:16,178 | DEBUG: Data: None
2023-07-05 04:52:16,178 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:52:16,547 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3722
2023-07-05 04:52:16,551 | DEBUG: Response: 200 (3722 bytes)
2023-07-05 04:52:16,555 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:52:16,555 | DEBUG: Data: None
2023-07-05 04:52:16,555 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:52:16,875 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 04:52:16,876 | DEBUG: Response: 200 (136 bytes)
2023-07-05 04:52:16,877 | INFO: 127.0.0.1 - - [05/Jul/2023 04:52:16] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 04:52:50,106 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:52:50,106 | DEBUG: Data: None
2023-07-05 04:52:50,106 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:52:50,431 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2529
2023-07-05 04:52:50,432 | DEBUG: Response: 200 (2529 bytes)
2023-07-05 04:52:50,433 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:52:50,433 | DEBUG: Data: None
2023-07-05 04:52:50,433 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:52:50,778 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3721
2023-07-05 04:52:50,779 | DEBUG: Response: 200 (3721 bytes)
2023-07-05 04:52:50,782 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:52:50,783 | DEBUG: Data: None
2023-07-05 04:52:50,783 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:52:51,128 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6359
2023-07-05 04:52:51,128 | DEBUG: Response: 200 (6359 bytes)
2023-07-05 04:52:51,130 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 04:52:51,131 | DEBUG: Data: None
2023-07-05 04:52:51,131 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:52:52,502 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 33865
2023-07-05 04:52:52,507 | DEBUG: Response: 200 (33865 bytes)
2023-07-05 04:52:52,523 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 04:52:52,523 | DEBUG: Data: None
2023-07-05 04:52:52,523 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:52:53,155 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14046
2023-07-05 04:52:53,158 | DEBUG: Response: 200 (14046 bytes)
2023-07-05 04:52:53,166 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 04:52:53,166 | DEBUG: Data: None
2023-07-05 04:52:53,166 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:52:53,536 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5971
2023-07-05 04:52:53,537 | DEBUG: Response: 200 (5971 bytes)
2023-07-05 04:52:53,539 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 04:52:53,539 | DEBUG: Data: None
2023-07-05 04:52:53,539 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:52:53,891 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4289
2023-07-05 04:52:53,892 | DEBUG: Response: 200 (4289 bytes)
2023-07-05 04:52:53,895 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:52:53,895 | DEBUG: Data: None
2023-07-05 04:52:53,896 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:52:54,219 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3722
2023-07-05 04:52:54,222 | DEBUG: Response: 200 (3722 bytes)
2023-07-05 04:52:54,224 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:52:54,224 | DEBUG: Data: None
2023-07-05 04:52:54,224 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:52:54,533 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 04:52:54,533 | DEBUG: Response: 200 (136 bytes)
2023-07-05 04:52:54,534 | INFO: 127.0.0.1 - - [05/Jul/2023 04:52:54] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 04:53:34,105 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:53:34,105 | DEBUG: Data: None
2023-07-05 04:53:34,105 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:53:34,424 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2527
2023-07-05 04:53:34,425 | DEBUG: Response: 200 (2527 bytes)
2023-07-05 04:53:34,426 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:53:34,426 | DEBUG: Data: None
2023-07-05 04:53:34,426 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:53:34,729 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3721
2023-07-05 04:53:34,731 | DEBUG: Response: 200 (3721 bytes)
2023-07-05 04:53:34,732 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:53:34,732 | DEBUG: Data: None
2023-07-05 04:53:34,732 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:53:35,082 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6381
2023-07-05 04:53:35,083 | DEBUG: Response: 200 (6381 bytes)
2023-07-05 04:53:35,085 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 04:53:35,085 | DEBUG: Data: None
2023-07-05 04:53:35,085 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:53:36,821 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34047
2023-07-05 04:53:36,825 | DEBUG: Response: 200 (34047 bytes)
2023-07-05 04:53:36,844 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 04:53:36,844 | DEBUG: Data: None
2023-07-05 04:53:36,844 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:53:37,535 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14045
2023-07-05 04:53:37,721 | DEBUG: Response: 200 (14045 bytes)
2023-07-05 04:53:37,726 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 04:53:37,726 | DEBUG: Data: None
2023-07-05 04:53:37,726 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:53:38,132 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6133
2023-07-05 04:53:38,134 | DEBUG: Response: 200 (6133 bytes)
2023-07-05 04:53:38,137 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 04:53:38,137 | DEBUG: Data: None
2023-07-05 04:53:38,137 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:53:38,483 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4284
2023-07-05 04:53:38,484 | DEBUG: Response: 200 (4284 bytes)
2023-07-05 04:53:38,485 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:53:38,485 | DEBUG: Data: None
2023-07-05 04:53:38,485 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:53:38,814 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3717
2023-07-05 04:53:38,816 | DEBUG: Response: 200 (3717 bytes)
2023-07-05 04:53:38,816 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:53:38,816 | DEBUG: Data: None
2023-07-05 04:53:38,816 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:53:39,101 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 04:53:39,102 | DEBUG: Response: 200 (136 bytes)
2023-07-05 04:53:39,103 | INFO: 127.0.0.1 - - [05/Jul/2023 04:53:39] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 04:53:40,385 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:53:40,386 | DEBUG: Data: None
2023-07-05 04:53:40,386 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:53:40,687 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2529
2023-07-05 04:53:40,689 | DEBUG: Response: 200 (2529 bytes)
2023-07-05 04:53:40,690 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:53:40,691 | DEBUG: Data: None
2023-07-05 04:53:40,691 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:53:41,026 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3715
2023-07-05 04:53:41,028 | DEBUG: Response: 200 (3715 bytes)
2023-07-05 04:53:41,029 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:53:41,029 | DEBUG: Data: None
2023-07-05 04:53:41,029 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:53:41,408 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6358
2023-07-05 04:53:41,410 | DEBUG: Response: 200 (6358 bytes)
2023-07-05 04:53:41,411 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 04:53:41,411 | DEBUG: Data: None
2023-07-05 04:53:41,411 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:53:42,812 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34040
2023-07-05 04:53:43,003 | DEBUG: Response: 200 (34040 bytes)
2023-07-05 04:53:43,046 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 04:53:43,046 | DEBUG: Data: None
2023-07-05 04:53:43,046 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:53:43,684 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14052
2023-07-05 04:53:43,881 | DEBUG: Response: 200 (14052 bytes)
2023-07-05 04:53:43,891 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 04:53:43,892 | DEBUG: Data: None
2023-07-05 04:53:43,892 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:53:44,323 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6133
2023-07-05 04:53:44,325 | DEBUG: Response: 200 (6133 bytes)
2023-07-05 04:53:44,333 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 04:53:44,333 | DEBUG: Data: None
2023-07-05 04:53:44,334 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:53:44,686 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4280
2023-07-05 04:53:44,687 | DEBUG: Response: 200 (4280 bytes)
2023-07-05 04:53:44,693 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:53:44,693 | DEBUG: Data: None
2023-07-05 04:53:44,694 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:53:45,032 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3716
2023-07-05 04:53:45,033 | DEBUG: Response: 200 (3716 bytes)
2023-07-05 04:53:45,034 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:53:45,034 | DEBUG: Data: None
2023-07-05 04:53:45,034 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:53:45,314 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 04:53:45,315 | DEBUG: Response: 200 (136 bytes)
2023-07-05 04:53:45,316 | INFO: 127.0.0.1 - - [05/Jul/2023 04:53:45] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 04:53:57,456 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:53:57,456 | DEBUG: Data: None
2023-07-05 04:53:57,456 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:53:57,805 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2527
2023-07-05 04:53:57,805 | DEBUG: Response: 200 (2527 bytes)
2023-07-05 04:53:57,806 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:53:57,806 | DEBUG: Data: None
2023-07-05 04:53:57,806 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:53:58,107 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3722
2023-07-05 04:53:58,108 | DEBUG: Response: 200 (3722 bytes)
2023-07-05 04:53:58,109 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:53:58,109 | DEBUG: Data: None
2023-07-05 04:53:58,109 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:53:58,468 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6351
2023-07-05 04:53:58,469 | DEBUG: Response: 200 (6351 bytes)
2023-07-05 04:53:58,470 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 04:53:58,470 | DEBUG: Data: None
2023-07-05 04:53:58,471 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:53:59,766 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34059
2023-07-05 04:53:59,968 | DEBUG: Response: 200 (34059 bytes)
2023-07-05 04:53:59,985 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 04:53:59,985 | DEBUG: Data: None
2023-07-05 04:53:59,985 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:54:00,390 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6133
2023-07-05 04:54:00,393 | DEBUG: Response: 200 (6133 bytes)
2023-07-05 04:54:00,395 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 04:54:00,395 | DEBUG: Data: None
2023-07-05 04:54:00,396 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:54:01,220 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14051
2023-07-05 04:54:01,223 | DEBUG: Response: 200 (14051 bytes)
2023-07-05 04:54:01,229 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 04:54:01,229 | DEBUG: Data: None
2023-07-05 04:54:01,229 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:54:01,567 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4288
2023-07-05 04:54:01,568 | DEBUG: Response: 200 (4288 bytes)
2023-07-05 04:54:01,569 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:54:01,569 | DEBUG: Data: None
2023-07-05 04:54:01,569 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:54:01,890 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3721
2023-07-05 04:54:01,891 | DEBUG: Response: 200 (3721 bytes)
2023-07-05 04:54:01,892 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:54:01,892 | DEBUG: Data: None
2023-07-05 04:54:01,892 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:54:02,222 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 04:54:02,222 | DEBUG: Response: 200 (136 bytes)
2023-07-05 04:54:02,223 | INFO: 127.0.0.1 - - [05/Jul/2023 04:54:02] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 04:54:47,686 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:54:47,686 | DEBUG: Data: None
2023-07-05 04:54:47,686 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:54:48,039 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2529
2023-07-05 04:54:48,040 | DEBUG: Response: 200 (2529 bytes)
2023-07-05 04:54:48,040 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:54:48,040 | DEBUG: Data: None
2023-07-05 04:54:48,040 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:54:48,358 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3721
2023-07-05 04:54:48,359 | DEBUG: Response: 200 (3721 bytes)
2023-07-05 04:54:48,360 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:54:48,360 | DEBUG: Data: None
2023-07-05 04:54:48,360 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:54:48,735 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6361
2023-07-05 04:54:48,736 | DEBUG: Response: 200 (6361 bytes)
2023-07-05 04:54:48,737 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 04:54:48,737 | DEBUG: Data: None
2023-07-05 04:54:48,737 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:54:50,065 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34041
2023-07-05 04:54:50,068 | DEBUG: Response: 200 (34041 bytes)
2023-07-05 04:54:50,089 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 04:54:50,089 | DEBUG: Data: None
2023-07-05 04:54:50,089 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:54:50,878 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14052
2023-07-05 04:54:50,879 | DEBUG: Response: 200 (14052 bytes)
2023-07-05 04:54:50,885 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 04:54:50,885 | DEBUG: Data: None
2023-07-05 04:54:50,885 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:54:51,287 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6133
2023-07-05 04:54:51,288 | DEBUG: Response: 200 (6133 bytes)
2023-07-05 04:54:51,290 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 04:54:51,290 | DEBUG: Data: None
2023-07-05 04:54:51,290 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:54:51,648 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4288
2023-07-05 04:54:51,650 | DEBUG: Response: 200 (4288 bytes)
2023-07-05 04:54:51,651 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:54:51,651 | DEBUG: Data: None
2023-07-05 04:54:51,651 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:54:52,003 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3715
2023-07-05 04:54:52,004 | DEBUG: Response: 200 (3715 bytes)
2023-07-05 04:54:52,005 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:54:52,005 | DEBUG: Data: None
2023-07-05 04:54:52,005 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:54:52,301 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 04:54:52,302 | DEBUG: Response: 200 (136 bytes)
2023-07-05 04:54:52,302 | INFO: 127.0.0.1 - - [05/Jul/2023 04:54:52] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 04:56:53,762 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:56:53,764 | DEBUG: Data: None
2023-07-05 04:56:53,764 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:56:54,085 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2528
2023-07-05 04:56:54,085 | DEBUG: Response: 200 (2528 bytes)
2023-07-05 04:56:54,086 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:56:54,086 | DEBUG: Data: None
2023-07-05 04:56:54,086 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:56:54,440 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3722
2023-07-05 04:56:54,442 | DEBUG: Response: 200 (3722 bytes)
2023-07-05 04:56:54,443 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:56:54,443 | DEBUG: Data: None
2023-07-05 04:56:54,443 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:56:54,812 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6377
2023-07-05 04:56:54,814 | DEBUG: Response: 200 (6377 bytes)
2023-07-05 04:56:54,815 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 04:56:54,816 | DEBUG: Data: None
2023-07-05 04:56:54,816 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:56:56,387 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34069
2023-07-05 04:56:56,587 | DEBUG: Response: 200 (34069 bytes)
2023-07-05 04:56:56,604 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 04:56:56,604 | DEBUG: Data: None
2023-07-05 04:56:56,604 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:56:57,038 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6133
2023-07-05 04:56:57,039 | DEBUG: Response: 200 (6133 bytes)
2023-07-05 04:56:57,041 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 04:56:57,041 | DEBUG: Data: None
2023-07-05 04:56:57,041 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:56:57,857 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14050
2023-07-05 04:56:57,859 | DEBUG: Response: 200 (14050 bytes)
2023-07-05 04:56:57,866 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 04:56:57,867 | DEBUG: Data: None
2023-07-05 04:56:57,867 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:56:58,232 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4281
2023-07-05 04:56:58,233 | DEBUG: Response: 200 (4281 bytes)
2023-07-05 04:56:58,234 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:56:58,234 | DEBUG: Data: None
2023-07-05 04:56:58,234 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:56:58,650 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3719
2023-07-05 04:56:58,650 | DEBUG: Response: 200 (3719 bytes)
2023-07-05 04:56:58,651 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:56:58,651 | DEBUG: Data: None
2023-07-05 04:56:58,651 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:56:58,998 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 04:56:58,998 | DEBUG: Response: 200 (136 bytes)
2023-07-05 04:56:58,999 | INFO: 127.0.0.1 - - [05/Jul/2023 04:56:58] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 04:57:05,068 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:57:05,068 | DEBUG: Data: None
2023-07-05 04:57:05,068 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:57:05,406 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2527
2023-07-05 04:57:05,407 | DEBUG: Response: 200 (2527 bytes)
2023-07-05 04:57:05,408 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:57:05,408 | DEBUG: Data: None
2023-07-05 04:57:05,408 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:57:05,726 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3721
2023-07-05 04:57:05,726 | DEBUG: Response: 200 (3721 bytes)
2023-07-05 04:57:05,727 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:57:05,727 | DEBUG: Data: None
2023-07-05 04:57:05,727 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:57:06,081 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6369
2023-07-05 04:57:06,082 | DEBUG: Response: 200 (6369 bytes)
2023-07-05 04:57:06,083 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 04:57:06,083 | DEBUG: Data: None
2023-07-05 04:57:06,083 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:57:07,349 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 33982
2023-07-05 04:57:07,353 | DEBUG: Response: 200 (33982 bytes)
2023-07-05 04:57:07,370 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 04:57:07,370 | DEBUG: Data: None
2023-07-05 04:57:07,370 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:57:07,841 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6133
2023-07-05 04:57:07,842 | DEBUG: Response: 200 (6133 bytes)
2023-07-05 04:57:07,844 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 04:57:07,844 | DEBUG: Data: None
2023-07-05 04:57:07,844 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:57:08,858 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14044
2023-07-05 04:57:08,860 | DEBUG: Response: 200 (14044 bytes)
2023-07-05 04:57:08,865 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 04:57:08,865 | DEBUG: Data: None
2023-07-05 04:57:08,865 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:57:09,219 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4277
2023-07-05 04:57:09,220 | DEBUG: Response: 200 (4277 bytes)
2023-07-05 04:57:09,221 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:57:09,221 | DEBUG: Data: None
2023-07-05 04:57:09,221 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:57:09,538 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3721
2023-07-05 04:57:09,539 | DEBUG: Response: 200 (3721 bytes)
2023-07-05 04:57:09,539 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:57:09,539 | DEBUG: Data: None
2023-07-05 04:57:09,540 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:57:09,823 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 04:57:09,823 | DEBUG: Response: 200 (136 bytes)
2023-07-05 04:57:09,824 | INFO: 127.0.0.1 - - [05/Jul/2023 04:57:09] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 04:57:17,293 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:57:17,293 | DEBUG: Data: None
2023-07-05 04:57:17,293 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:57:17,811 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2527
2023-07-05 04:57:17,812 | DEBUG: Response: 200 (2527 bytes)
2023-07-05 04:57:17,812 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:57:17,813 | DEBUG: Data: None
2023-07-05 04:57:17,813 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:57:18,132 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3721
2023-07-05 04:57:18,132 | DEBUG: Response: 200 (3721 bytes)
2023-07-05 04:57:18,133 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:57:18,133 | DEBUG: Data: None
2023-07-05 04:57:18,133 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:57:18,611 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6384
2023-07-05 04:57:18,612 | DEBUG: Response: 200 (6384 bytes)
2023-07-05 04:57:18,613 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 04:57:18,613 | DEBUG: Data: None
2023-07-05 04:57:18,613 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:57:20,584 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34022
2023-07-05 04:57:20,782 | DEBUG: Response: 200 (34022 bytes)
2023-07-05 04:57:20,797 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 04:57:20,797 | DEBUG: Data: None
2023-07-05 04:57:20,797 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:57:21,410 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14042
2023-07-05 04:57:21,412 | DEBUG: Response: 200 (14042 bytes)
2023-07-05 04:57:21,417 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 04:57:21,417 | DEBUG: Data: None
2023-07-05 04:57:21,417 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:57:21,826 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6133
2023-07-05 04:57:21,827 | DEBUG: Response: 200 (6133 bytes)
2023-07-05 04:57:21,829 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 04:57:21,829 | DEBUG: Data: None
2023-07-05 04:57:21,829 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:57:22,190 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4291
2023-07-05 04:57:22,191 | DEBUG: Response: 200 (4291 bytes)
2023-07-05 04:57:22,193 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:57:22,193 | DEBUG: Data: None
2023-07-05 04:57:22,193 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:57:22,529 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3720
2023-07-05 04:57:22,530 | DEBUG: Response: 200 (3720 bytes)
2023-07-05 04:57:22,531 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:57:22,531 | DEBUG: Data: None
2023-07-05 04:57:22,531 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:57:22,832 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 04:57:22,833 | DEBUG: Response: 200 (136 bytes)
2023-07-05 04:57:22,833 | INFO: 127.0.0.1 - - [05/Jul/2023 04:57:22] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 04:57:32,278 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:57:32,278 | DEBUG: Data: None
2023-07-05 04:57:32,278 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:57:32,582 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2529
2023-07-05 04:57:32,583 | DEBUG: Response: 200 (2529 bytes)
2023-07-05 04:57:32,583 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:57:32,583 | DEBUG: Data: None
2023-07-05 04:57:32,583 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:57:32,906 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3715
2023-07-05 04:57:32,907 | DEBUG: Response: 200 (3715 bytes)
2023-07-05 04:57:32,908 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:57:32,908 | DEBUG: Data: None
2023-07-05 04:57:32,908 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:57:33,272 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6357
2023-07-05 04:57:33,274 | DEBUG: Response: 200 (6357 bytes)
2023-07-05 04:57:33,275 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 04:57:33,275 | DEBUG: Data: None
2023-07-05 04:57:33,275 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:57:34,609 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 33988
2023-07-05 04:57:34,615 | DEBUG: Response: 200 (33988 bytes)
2023-07-05 04:57:34,631 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 04:57:34,631 | DEBUG: Data: None
2023-07-05 04:57:34,631 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:57:35,274 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14047
2023-07-05 04:57:35,275 | DEBUG: Response: 200 (14047 bytes)
2023-07-05 04:57:35,280 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 04:57:35,280 | DEBUG: Data: None
2023-07-05 04:57:35,280 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:57:35,683 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6133
2023-07-05 04:57:35,684 | DEBUG: Response: 200 (6133 bytes)
2023-07-05 04:57:35,686 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 04:57:35,687 | DEBUG: Data: None
2023-07-05 04:57:35,687 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:57:36,027 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4290
2023-07-05 04:57:36,028 | DEBUG: Response: 200 (4290 bytes)
2023-07-05 04:57:36,030 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:57:36,030 | DEBUG: Data: None
2023-07-05 04:57:36,030 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:57:36,391 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3716
2023-07-05 04:57:36,392 | DEBUG: Response: 200 (3716 bytes)
2023-07-05 04:57:36,394 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:57:36,394 | DEBUG: Data: None
2023-07-05 04:57:36,394 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:57:36,691 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 04:57:36,691 | DEBUG: Response: 200 (136 bytes)
2023-07-05 04:57:36,692 | INFO: 127.0.0.1 - - [05/Jul/2023 04:57:36] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 04:57:54,673 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:57:54,674 | DEBUG: Data: None
2023-07-05 04:57:54,674 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:57:55,018 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2528
2023-07-05 04:57:55,019 | DEBUG: Response: 200 (2528 bytes)
2023-07-05 04:57:55,019 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:57:55,019 | DEBUG: Data: None
2023-07-05 04:57:55,019 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:57:55,359 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3719
2023-07-05 04:57:55,360 | DEBUG: Response: 200 (3719 bytes)
2023-07-05 04:57:55,361 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:57:55,361 | DEBUG: Data: None
2023-07-05 04:57:55,361 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:57:55,774 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6382
2023-07-05 04:57:55,775 | DEBUG: Response: 200 (6382 bytes)
2023-07-05 04:57:55,776 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 04:57:55,776 | DEBUG: Data: None
2023-07-05 04:57:55,776 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:57:57,328 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34032
2023-07-05 04:57:57,529 | DEBUG: Response: 200 (34032 bytes)
2023-07-05 04:57:57,544 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 04:57:57,544 | DEBUG: Data: None
2023-07-05 04:57:57,544 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:57:57,942 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6134
2023-07-05 04:57:57,943 | DEBUG: Response: 200 (6134 bytes)
2023-07-05 04:57:57,945 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 04:57:57,945 | DEBUG: Data: None
2023-07-05 04:57:57,945 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:57:58,569 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14050
2023-07-05 04:57:58,572 | DEBUG: Response: 200 (14050 bytes)
2023-07-05 04:57:58,580 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 04:57:58,580 | DEBUG: Data: None
2023-07-05 04:57:58,580 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:57:58,918 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4288
2023-07-05 04:57:58,919 | DEBUG: Response: 200 (4288 bytes)
2023-07-05 04:57:58,921 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:57:58,921 | DEBUG: Data: None
2023-07-05 04:57:58,921 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:57:59,249 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3724
2023-07-05 04:57:59,251 | DEBUG: Response: 200 (3724 bytes)
2023-07-05 04:57:59,252 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:57:59,252 | DEBUG: Data: None
2023-07-05 04:57:59,252 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:57:59,556 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 04:57:59,557 | DEBUG: Response: 200 (136 bytes)
2023-07-05 04:57:59,557 | INFO: 127.0.0.1 - - [05/Jul/2023 04:57:59] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 04:58:54,425 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:58:54,425 | DEBUG: Data: None
2023-07-05 04:58:54,426 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:58:54,743 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2528
2023-07-05 04:58:54,744 | DEBUG: Response: 200 (2528 bytes)
2023-07-05 04:58:54,744 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:58:54,744 | DEBUG: Data: None
2023-07-05 04:58:54,744 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:58:55,071 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3722
2023-07-05 04:58:55,072 | DEBUG: Response: 200 (3722 bytes)
2023-07-05 04:58:55,074 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:58:55,074 | DEBUG: Data: None
2023-07-05 04:58:55,074 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:58:55,554 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6378
2023-07-05 04:58:55,554 | DEBUG: Response: 200 (6378 bytes)
2023-07-05 04:58:55,555 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 04:58:55,556 | DEBUG: Data: None
2023-07-05 04:58:55,556 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:58:57,075 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34017
2023-07-05 04:58:57,080 | DEBUG: Response: 200 (34017 bytes)
2023-07-05 04:58:57,096 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 04:58:57,096 | DEBUG: Data: None
2023-07-05 04:58:57,096 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:58:57,856 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14044
2023-07-05 04:58:57,858 | DEBUG: Response: 200 (14044 bytes)
2023-07-05 04:58:57,863 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 04:58:57,863 | DEBUG: Data: None
2023-07-05 04:58:57,863 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:58:58,269 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5852
2023-07-05 04:58:58,270 | DEBUG: Response: 200 (5852 bytes)
2023-07-05 04:58:58,272 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 04:58:58,272 | DEBUG: Data: None
2023-07-05 04:58:58,272 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:58:58,623 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4290
2023-07-05 04:58:58,624 | DEBUG: Response: 200 (4290 bytes)
2023-07-05 04:58:58,625 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:58:58,625 | DEBUG: Data: None
2023-07-05 04:58:58,625 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:58:58,964 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3718
2023-07-05 04:58:58,965 | DEBUG: Response: 200 (3718 bytes)
2023-07-05 04:58:58,966 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:58:58,966 | DEBUG: Data: None
2023-07-05 04:58:58,966 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:58:59,249 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 04:58:59,249 | DEBUG: Response: 200 (136 bytes)
2023-07-05 04:58:59,250 | INFO: 127.0.0.1 - - [05/Jul/2023 04:58:59] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 04:59:07,090 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:59:07,090 | DEBUG: Data: None
2023-07-05 04:59:07,090 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:59:07,435 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2528
2023-07-05 04:59:07,435 | DEBUG: Response: 200 (2528 bytes)
2023-07-05 04:59:07,436 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:59:07,436 | DEBUG: Data: None
2023-07-05 04:59:07,436 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:59:07,786 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3714
2023-07-05 04:59:07,786 | DEBUG: Response: 200 (3714 bytes)
2023-07-05 04:59:07,787 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:59:07,788 | DEBUG: Data: None
2023-07-05 04:59:07,788 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:59:08,171 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6377
2023-07-05 04:59:08,172 | DEBUG: Response: 200 (6377 bytes)
2023-07-05 04:59:08,173 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 04:59:08,173 | DEBUG: Data: None
2023-07-05 04:59:08,173 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:59:09,508 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34062
2023-07-05 04:59:09,512 | DEBUG: Response: 200 (34062 bytes)
2023-07-05 04:59:09,535 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 04:59:09,535 | DEBUG: Data: None
2023-07-05 04:59:09,535 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:59:10,058 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14056
2023-07-05 04:59:10,061 | DEBUG: Response: 200 (14056 bytes)
2023-07-05 04:59:10,066 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 04:59:10,067 | DEBUG: Data: None
2023-07-05 04:59:10,067 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:59:10,484 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5852
2023-07-05 04:59:10,486 | DEBUG: Response: 200 (5852 bytes)
2023-07-05 04:59:10,488 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 04:59:10,488 | DEBUG: Data: None
2023-07-05 04:59:10,488 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:59:10,833 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4291
2023-07-05 04:59:10,835 | DEBUG: Response: 200 (4291 bytes)
2023-07-05 04:59:10,837 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:59:10,837 | DEBUG: Data: None
2023-07-05 04:59:10,837 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:59:11,231 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3717
2023-07-05 04:59:11,233 | DEBUG: Response: 200 (3717 bytes)
2023-07-05 04:59:11,234 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:59:11,234 | DEBUG: Data: None
2023-07-05 04:59:11,234 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:59:11,583 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 04:59:11,583 | DEBUG: Response: 200 (136 bytes)
2023-07-05 04:59:11,585 | INFO: 127.0.0.1 - - [05/Jul/2023 04:59:11] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 04:59:24,965 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:59:24,965 | DEBUG: Data: None
2023-07-05 04:59:24,966 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:59:25,277 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2527
2023-07-05 04:59:25,279 | DEBUG: Response: 200 (2527 bytes)
2023-07-05 04:59:25,279 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:59:25,279 | DEBUG: Data: None
2023-07-05 04:59:25,279 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:59:25,597 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3719
2023-07-05 04:59:25,598 | DEBUG: Response: 200 (3719 bytes)
2023-07-05 04:59:25,599 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:59:25,599 | DEBUG: Data: None
2023-07-05 04:59:25,599 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:59:26,029 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6379
2023-07-05 04:59:26,031 | DEBUG: Response: 200 (6379 bytes)
2023-07-05 04:59:26,032 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 04:59:26,032 | DEBUG: Data: None
2023-07-05 04:59:26,032 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:59:27,366 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34038
2023-07-05 04:59:27,370 | DEBUG: Response: 200 (34038 bytes)
2023-07-05 04:59:27,387 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 04:59:27,387 | DEBUG: Data: None
2023-07-05 04:59:27,387 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:59:27,767 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5852
2023-07-05 04:59:27,768 | DEBUG: Response: 200 (5852 bytes)
2023-07-05 04:59:27,770 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 04:59:27,770 | DEBUG: Data: None
2023-07-05 04:59:27,770 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:59:28,436 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14056
2023-07-05 04:59:28,623 | DEBUG: Response: 200 (14056 bytes)
2023-07-05 04:59:28,628 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 04:59:28,628 | DEBUG: Data: None
2023-07-05 04:59:28,628 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:59:29,006 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4289
2023-07-05 04:59:29,007 | DEBUG: Response: 200 (4289 bytes)
2023-07-05 04:59:29,008 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:59:29,008 | DEBUG: Data: None
2023-07-05 04:59:29,008 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:59:29,542 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3722
2023-07-05 04:59:29,543 | DEBUG: Response: 200 (3722 bytes)
2023-07-05 04:59:29,543 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:59:29,543 | DEBUG: Data: None
2023-07-05 04:59:29,543 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:59:29,847 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 04:59:29,847 | DEBUG: Response: 200 (136 bytes)
2023-07-05 04:59:29,848 | INFO: 127.0.0.1 - - [05/Jul/2023 04:59:29] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 04:59:36,821 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:59:36,821 | DEBUG: Data: None
2023-07-05 04:59:36,821 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:59:37,120 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2528
2023-07-05 04:59:37,121 | DEBUG: Response: 200 (2528 bytes)
2023-07-05 04:59:37,122 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:59:37,122 | DEBUG: Data: None
2023-07-05 04:59:37,122 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:59:37,426 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3718
2023-07-05 04:59:37,427 | DEBUG: Response: 200 (3718 bytes)
2023-07-05 04:59:37,429 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:59:37,429 | DEBUG: Data: None
2023-07-05 04:59:37,429 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:59:37,796 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6368
2023-07-05 04:59:37,804 | DEBUG: Response: 200 (6368 bytes)
2023-07-05 04:59:37,805 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 04:59:37,805 | DEBUG: Data: None
2023-07-05 04:59:37,805 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:59:39,083 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 33984
2023-07-05 04:59:39,089 | DEBUG: Response: 200 (33984 bytes)
2023-07-05 04:59:39,107 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 04:59:39,107 | DEBUG: Data: None
2023-07-05 04:59:39,107 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:59:39,498 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5849
2023-07-05 04:59:39,499 | DEBUG: Response: 200 (5849 bytes)
2023-07-05 04:59:39,501 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 04:59:39,501 | DEBUG: Data: None
2023-07-05 04:59:39,501 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:59:40,365 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14048
2023-07-05 04:59:40,366 | DEBUG: Response: 200 (14048 bytes)
2023-07-05 04:59:40,371 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 04:59:40,371 | DEBUG: Data: None
2023-07-05 04:59:40,371 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:59:40,722 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4288
2023-07-05 04:59:40,723 | DEBUG: Response: 200 (4288 bytes)
2023-07-05 04:59:40,725 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 04:59:40,725 | DEBUG: Data: None
2023-07-05 04:59:40,725 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 04:59:41,088 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3716
2023-07-05 04:59:41,089 | DEBUG: Response: 200 (3716 bytes)
2023-07-05 04:59:41,089 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 04:59:41,089 | DEBUG: Data: None
2023-07-05 04:59:41,090 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 04:59:41,403 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 04:59:41,404 | DEBUG: Response: 200 (136 bytes)
2023-07-05 04:59:41,405 | INFO: 127.0.0.1 - - [05/Jul/2023 04:59:41] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:00:00,444 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:00:00,444 | DEBUG: Data: None
2023-07-05 05:00:00,444 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:00:00,771 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2527
2023-07-05 05:00:00,773 | DEBUG: Response: 200 (2527 bytes)
2023-07-05 05:00:00,774 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:00:00,774 | DEBUG: Data: None
2023-07-05 05:00:00,774 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:00:01,160 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3723
2023-07-05 05:00:01,162 | DEBUG: Response: 200 (3723 bytes)
2023-07-05 05:00:01,163 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:00:01,163 | DEBUG: Data: None
2023-07-05 05:00:01,163 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:00:01,163 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-05 05:00:02,080 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6368
2023-07-05 05:00:02,081 | DEBUG: Response: 200 (6368 bytes)
2023-07-05 05:00:02,082 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:00:02,082 | DEBUG: Data: None
2023-07-05 05:00:02,082 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:00:02,082 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-05 05:00:03,933 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 33984
2023-07-05 05:00:04,125 | DEBUG: Response: 200 (33984 bytes)
2023-07-05 05:00:04,140 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:00:04,140 | DEBUG: Data: None
2023-07-05 05:00:04,140 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:00:04,141 | DEBUG: Sleeping: 0.48 seconds prior to call
2023-07-05 05:00:05,010 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5841
2023-07-05 05:00:05,011 | DEBUG: Response: 200 (5841 bytes)
2023-07-05 05:00:05,012 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:00:05,012 | DEBUG: Data: None
2023-07-05 05:00:05,013 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:00:06,036 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14049
2023-07-05 05:00:06,038 | DEBUG: Response: 200 (14049 bytes)
2023-07-05 05:00:06,044 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:00:06,044 | DEBUG: Data: None
2023-07-05 05:00:06,044 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:00:06,044 | DEBUG: Sleeping: 0.49 seconds prior to call
2023-07-05 05:00:06,909 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4409
2023-07-05 05:00:06,910 | DEBUG: Response: 200 (4409 bytes)
2023-07-05 05:00:06,911 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:00:06,911 | DEBUG: Data: None
2023-07-05 05:00:06,911 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:00:07,340 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3724
2023-07-05 05:00:07,341 | DEBUG: Response: 200 (3724 bytes)
2023-07-05 05:00:07,342 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:00:07,342 | DEBUG: Data: None
2023-07-05 05:00:07,342 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:00:07,342 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-05 05:00:08,154 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:00:08,154 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:00:08,155 | INFO: 127.0.0.1 - - [05/Jul/2023 05:00:08] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:00:24,053 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:00:24,053 | DEBUG: Data: None
2023-07-05 05:00:24,053 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:00:24,751 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2529
2023-07-05 05:00:24,752 | DEBUG: Response: 200 (2529 bytes)
2023-07-05 05:00:24,753 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:00:24,753 | DEBUG: Data: None
2023-07-05 05:00:24,753 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:00:25,195 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3723
2023-07-05 05:00:25,196 | DEBUG: Response: 200 (3723 bytes)
2023-07-05 05:00:25,197 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:00:25,197 | DEBUG: Data: None
2023-07-05 05:00:25,197 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:00:25,550 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6389
2023-07-05 05:00:25,551 | DEBUG: Response: 200 (6389 bytes)
2023-07-05 05:00:25,552 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:00:25,552 | DEBUG: Data: None
2023-07-05 05:00:25,552 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:00:27,216 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34005
2023-07-05 05:00:27,220 | DEBUG: Response: 200 (34005 bytes)
2023-07-05 05:00:27,235 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:00:27,235 | DEBUG: Data: None
2023-07-05 05:00:27,235 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:00:27,643 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5842
2023-07-05 05:00:27,645 | DEBUG: Response: 200 (5842 bytes)
2023-07-05 05:00:27,647 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:00:27,647 | DEBUG: Data: None
2023-07-05 05:00:27,647 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:00:28,374 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14048
2023-07-05 05:00:28,564 | DEBUG: Response: 200 (14048 bytes)
2023-07-05 05:00:28,571 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:00:28,571 | DEBUG: Data: None
2023-07-05 05:00:28,571 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:00:28,925 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4406
2023-07-05 05:00:28,926 | DEBUG: Response: 200 (4406 bytes)
2023-07-05 05:00:28,927 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:00:28,927 | DEBUG: Data: None
2023-07-05 05:00:28,927 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:00:29,240 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3723
2023-07-05 05:00:29,241 | DEBUG: Response: 200 (3723 bytes)
2023-07-05 05:00:29,242 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:00:29,242 | DEBUG: Data: None
2023-07-05 05:00:29,242 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:00:29,659 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:00:29,660 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:00:29,661 | INFO: 127.0.0.1 - - [05/Jul/2023 05:00:29] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:00:58,251 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:00:58,251 | DEBUG: Data: None
2023-07-05 05:00:58,251 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:00:58,569 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2527
2023-07-05 05:00:58,570 | DEBUG: Response: 200 (2527 bytes)
2023-07-05 05:00:58,570 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:00:58,570 | DEBUG: Data: None
2023-07-05 05:00:58,570 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:00:58,936 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3722
2023-07-05 05:00:58,937 | DEBUG: Response: 200 (3722 bytes)
2023-07-05 05:00:58,938 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:00:58,938 | DEBUG: Data: None
2023-07-05 05:00:58,938 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:00:59,303 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6383
2023-07-05 05:00:59,304 | DEBUG: Response: 200 (6383 bytes)
2023-07-05 05:00:59,306 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:00:59,306 | DEBUG: Data: None
2023-07-05 05:00:59,306 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:01:00,699 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34047
2023-07-05 05:01:00,902 | DEBUG: Response: 200 (34047 bytes)
2023-07-05 05:01:00,925 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:01:00,925 | DEBUG: Data: None
2023-07-05 05:01:00,925 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:01:01,354 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5871
2023-07-05 05:01:01,355 | DEBUG: Response: 200 (5871 bytes)
2023-07-05 05:01:01,356 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:01:01,357 | DEBUG: Data: None
2023-07-05 05:01:01,357 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:01:02,153 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14045
2023-07-05 05:01:02,155 | DEBUG: Response: 200 (14045 bytes)
2023-07-05 05:01:02,160 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:01:02,160 | DEBUG: Data: None
2023-07-05 05:01:02,160 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:01:02,557 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4409
2023-07-05 05:01:02,557 | DEBUG: Response: 200 (4409 bytes)
2023-07-05 05:01:02,558 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:01:02,559 | DEBUG: Data: None
2023-07-05 05:01:02,559 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:01:02,881 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3721
2023-07-05 05:01:02,881 | DEBUG: Response: 200 (3721 bytes)
2023-07-05 05:01:02,882 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:01:02,882 | DEBUG: Data: None
2023-07-05 05:01:02,882 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:01:03,151 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:01:03,151 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:01:03,152 | INFO: 127.0.0.1 - - [05/Jul/2023 05:01:03] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:03:13,633 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:03:13,633 | DEBUG: Data: None
2023-07-05 05:03:13,633 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:03:13,988 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2528
2023-07-05 05:03:13,990 | DEBUG: Response: 200 (2528 bytes)
2023-07-05 05:03:13,991 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:03:13,991 | DEBUG: Data: None
2023-07-05 05:03:13,991 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:03:14,328 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3721
2023-07-05 05:03:14,329 | DEBUG: Response: 200 (3721 bytes)
2023-07-05 05:03:14,330 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:03:14,330 | DEBUG: Data: None
2023-07-05 05:03:14,330 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:03:14,695 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6383
2023-07-05 05:03:14,697 | DEBUG: Response: 200 (6383 bytes)
2023-07-05 05:03:14,698 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:03:14,698 | DEBUG: Data: None
2023-07-05 05:03:14,698 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:03:16,252 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34068
2023-07-05 05:03:16,255 | DEBUG: Response: 200 (34068 bytes)
2023-07-05 05:03:16,271 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:03:16,271 | DEBUG: Data: None
2023-07-05 05:03:16,271 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:03:16,649 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5879
2023-07-05 05:03:16,650 | DEBUG: Response: 200 (5879 bytes)
2023-07-05 05:03:16,652 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:03:16,652 | DEBUG: Data: None
2023-07-05 05:03:16,652 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:03:17,236 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14049
2023-07-05 05:03:17,434 | DEBUG: Response: 200 (14049 bytes)
2023-07-05 05:03:17,439 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:03:17,439 | DEBUG: Data: None
2023-07-05 05:03:17,439 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:03:17,793 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4412
2023-07-05 05:03:17,794 | DEBUG: Response: 200 (4412 bytes)
2023-07-05 05:03:17,797 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:03:17,797 | DEBUG: Data: None
2023-07-05 05:03:17,797 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:03:18,104 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3721
2023-07-05 05:03:18,105 | DEBUG: Response: 200 (3721 bytes)
2023-07-05 05:03:18,106 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:03:18,106 | DEBUG: Data: None
2023-07-05 05:03:18,106 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:03:18,397 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:03:18,397 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:03:18,397 | INFO: 127.0.0.1 - - [05/Jul/2023 05:03:18] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:03:55,689 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:03:55,689 | DEBUG: Data: None
2023-07-05 05:03:55,689 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:03:56,015 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2528
2023-07-05 05:03:56,016 | DEBUG: Response: 200 (2528 bytes)
2023-07-05 05:03:56,017 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:03:56,017 | DEBUG: Data: None
2023-07-05 05:03:56,017 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:03:56,364 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3718
2023-07-05 05:03:56,365 | DEBUG: Response: 200 (3718 bytes)
2023-07-05 05:03:56,366 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:03:56,366 | DEBUG: Data: None
2023-07-05 05:03:56,366 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:03:56,715 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6388
2023-07-05 05:03:56,717 | DEBUG: Response: 200 (6388 bytes)
2023-07-05 05:03:56,718 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:03:56,718 | DEBUG: Data: None
2023-07-05 05:03:56,718 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:03:57,984 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34154
2023-07-05 05:03:57,989 | DEBUG: Response: 200 (34154 bytes)
2023-07-05 05:03:58,006 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:03:58,007 | DEBUG: Data: None
2023-07-05 05:03:58,007 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:03:58,378 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5882
2023-07-05 05:03:58,379 | DEBUG: Response: 200 (5882 bytes)
2023-07-05 05:03:58,381 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:03:58,381 | DEBUG: Data: None
2023-07-05 05:03:58,381 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:03:58,976 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14053
2023-07-05 05:03:58,979 | DEBUG: Response: 200 (14053 bytes)
2023-07-05 05:03:58,984 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:03:58,984 | DEBUG: Data: None
2023-07-05 05:03:58,984 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:03:59,370 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4412
2023-07-05 05:03:59,371 | DEBUG: Response: 200 (4412 bytes)
2023-07-05 05:03:59,372 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:03:59,372 | DEBUG: Data: None
2023-07-05 05:03:59,372 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:03:59,713 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3720
2023-07-05 05:03:59,714 | DEBUG: Response: 200 (3720 bytes)
2023-07-05 05:03:59,715 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:03:59,715 | DEBUG: Data: None
2023-07-05 05:03:59,716 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:04:00,014 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:04:00,016 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:04:00,016 | INFO: 127.0.0.1 - - [05/Jul/2023 05:04:00] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:04:11,597 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:04:11,597 | DEBUG: Data: None
2023-07-05 05:04:11,597 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:04:11,917 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2528
2023-07-05 05:04:11,919 | DEBUG: Response: 200 (2528 bytes)
2023-07-05 05:04:11,920 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:04:11,920 | DEBUG: Data: None
2023-07-05 05:04:11,920 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:04:12,238 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3717
2023-07-05 05:04:12,239 | DEBUG: Response: 200 (3717 bytes)
2023-07-05 05:04:12,240 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:04:12,240 | DEBUG: Data: None
2023-07-05 05:04:12,240 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:04:12,602 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6368
2023-07-05 05:04:12,603 | DEBUG: Response: 200 (6368 bytes)
2023-07-05 05:04:12,604 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:04:12,604 | DEBUG: Data: None
2023-07-05 05:04:12,604 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:04:13,896 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34108
2023-07-05 05:04:13,899 | DEBUG: Response: 200 (34108 bytes)
2023-07-05 05:04:13,916 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:04:13,916 | DEBUG: Data: None
2023-07-05 05:04:13,916 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:04:14,290 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5882
2023-07-05 05:04:14,291 | DEBUG: Response: 200 (5882 bytes)
2023-07-05 05:04:14,294 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:04:14,294 | DEBUG: Data: None
2023-07-05 05:04:14,294 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:04:14,889 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14055
2023-07-05 05:04:14,893 | DEBUG: Response: 200 (14055 bytes)
2023-07-05 05:04:14,901 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:04:14,901 | DEBUG: Data: None
2023-07-05 05:04:14,901 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:04:15,281 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4410
2023-07-05 05:04:15,282 | DEBUG: Response: 200 (4410 bytes)
2023-07-05 05:04:15,284 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:04:15,284 | DEBUG: Data: None
2023-07-05 05:04:15,284 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:04:15,628 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3715
2023-07-05 05:04:15,629 | DEBUG: Response: 200 (3715 bytes)
2023-07-05 05:04:15,630 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:04:15,630 | DEBUG: Data: None
2023-07-05 05:04:15,630 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:04:15,926 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:04:15,926 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:04:15,927 | INFO: 127.0.0.1 - - [05/Jul/2023 05:04:15] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:04:25,495 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:04:25,495 | DEBUG: Data: None
2023-07-05 05:04:25,495 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:04:26,197 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2528
2023-07-05 05:04:26,198 | DEBUG: Response: 200 (2528 bytes)
2023-07-05 05:04:26,198 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:04:26,199 | DEBUG: Data: None
2023-07-05 05:04:26,199 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:04:26,532 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3721
2023-07-05 05:04:26,533 | DEBUG: Response: 200 (3721 bytes)
2023-07-05 05:04:26,534 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:04:26,534 | DEBUG: Data: None
2023-07-05 05:04:26,534 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:04:26,908 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6378
2023-07-05 05:04:26,908 | DEBUG: Response: 200 (6378 bytes)
2023-07-05 05:04:26,909 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:04:26,910 | DEBUG: Data: None
2023-07-05 05:04:26,910 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:04:28,341 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34115
2023-07-05 05:04:28,708 | DEBUG: Response: 200 (34115 bytes)
2023-07-05 05:04:28,725 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:04:28,726 | DEBUG: Data: None
2023-07-05 05:04:28,726 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:04:29,116 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5882
2023-07-05 05:04:29,117 | DEBUG: Response: 200 (5882 bytes)
2023-07-05 05:04:29,119 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:04:29,119 | DEBUG: Data: None
2023-07-05 05:04:29,119 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:04:29,736 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14057
2023-07-05 05:04:29,738 | DEBUG: Response: 200 (14057 bytes)
2023-07-05 05:04:29,743 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:04:29,743 | DEBUG: Data: None
2023-07-05 05:04:29,743 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:04:30,110 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4410
2023-07-05 05:04:30,111 | DEBUG: Response: 200 (4410 bytes)
2023-07-05 05:04:30,112 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:04:30,112 | DEBUG: Data: None
2023-07-05 05:04:30,112 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:04:30,520 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3717
2023-07-05 05:04:30,521 | DEBUG: Response: 200 (3717 bytes)
2023-07-05 05:04:30,522 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:04:30,522 | DEBUG: Data: None
2023-07-05 05:04:30,522 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:04:30,845 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:04:30,845 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:04:30,846 | INFO: 127.0.0.1 - - [05/Jul/2023 05:04:30] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:04:56,955 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:04:56,955 | DEBUG: Data: None
2023-07-05 05:04:56,955 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:04:57,369 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2528
2023-07-05 05:04:57,370 | DEBUG: Response: 200 (2528 bytes)
2023-07-05 05:04:57,370 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:04:57,370 | DEBUG: Data: None
2023-07-05 05:04:57,370 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:04:57,693 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3717
2023-07-05 05:04:57,694 | DEBUG: Response: 200 (3717 bytes)
2023-07-05 05:04:57,695 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:04:57,695 | DEBUG: Data: None
2023-07-05 05:04:57,695 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:04:58,060 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6381
2023-07-05 05:04:58,061 | DEBUG: Response: 200 (6381 bytes)
2023-07-05 05:04:58,062 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:04:58,062 | DEBUG: Data: None
2023-07-05 05:04:58,062 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:04:59,332 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34111
2023-07-05 05:04:59,336 | DEBUG: Response: 200 (34111 bytes)
2023-07-05 05:04:59,352 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:04:59,352 | DEBUG: Data: None
2023-07-05 05:04:59,353 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:04:59,772 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5882
2023-07-05 05:04:59,774 | DEBUG: Response: 200 (5882 bytes)
2023-07-05 05:04:59,775 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:04:59,775 | DEBUG: Data: None
2023-07-05 05:04:59,776 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:05:00,363 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14053
2023-07-05 05:05:00,556 | DEBUG: Response: 200 (14053 bytes)
2023-07-05 05:05:00,562 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:05:00,563 | DEBUG: Data: None
2023-07-05 05:05:00,563 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:05:00,902 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4409
2023-07-05 05:05:00,904 | DEBUG: Response: 200 (4409 bytes)
2023-07-05 05:05:00,905 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:05:00,905 | DEBUG: Data: None
2023-07-05 05:05:00,905 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:05:01,245 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3716
2023-07-05 05:05:01,246 | DEBUG: Response: 200 (3716 bytes)
2023-07-05 05:05:01,247 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:05:01,247 | DEBUG: Data: None
2023-07-05 05:05:01,247 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:05:01,695 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:05:01,696 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:05:01,696 | INFO: 127.0.0.1 - - [05/Jul/2023 05:05:01] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:14:18,620 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:14:18,621 | DEBUG: Data: None
2023-07-05 05:14:18,621 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:14:18,688 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:14:18,688 | DEBUG: Data: None
2023-07-05 05:14:18,688 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:14:18,691 | DEBUG: Resetting dropped connection: oauth.reddit.com
2023-07-05 05:14:18,897 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:14:18,898 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:14:18,899 | INFO: 127.0.0.1 - - [05/Jul/2023 05:14:18] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-05 05:14:19,110 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2525
2023-07-05 05:14:19,111 | DEBUG: Response: 200 (2525 bytes)
2023-07-05 05:14:19,112 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:14:19,112 | DEBUG: Data: None
2023-07-05 05:14:19,112 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:14:19,127 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:14:19,127 | DEBUG: Data: None
2023-07-05 05:14:19,127 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:14:19,433 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2526
2023-07-05 05:14:19,434 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3849
2023-07-05 05:14:19,439 | DEBUG: Response: 200 (2526 bytes)
2023-07-05 05:14:19,441 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:14:19,441 | DEBUG: Data: None
2023-07-05 05:14:19,441 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:14:19,442 | DEBUG: Response: 200 (3849 bytes)
2023-07-05 05:14:19,444 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:14:19,446 | DEBUG: Data: None
2023-07-05 05:14:19,446 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:14:19,789 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3848
2023-07-05 05:14:19,790 | DEBUG: Response: 200 (3848 bytes)
2023-07-05 05:14:19,792 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:14:19,792 | DEBUG: Data: None
2023-07-05 05:14:19,792 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:14:19,890 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6349
2023-07-05 05:14:19,890 | DEBUG: Response: 200 (6349 bytes)
2023-07-05 05:14:19,891 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:14:19,891 | DEBUG: Data: None
2023-07-05 05:14:19,892 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:14:20,147 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6347
2023-07-05 05:14:20,149 | DEBUG: Response: 200 (6347 bytes)
2023-07-05 05:14:20,151 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:14:20,152 | DEBUG: Data: None
2023-07-05 05:14:20,152 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:14:21,368 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34120
2023-07-05 05:14:21,372 | DEBUG: Response: 200 (34120 bytes)
2023-07-05 05:14:21,387 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:14:21,388 | DEBUG: Data: None
2023-07-05 05:14:21,388 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:14:21,528 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34148
2023-07-05 05:14:21,535 | DEBUG: Response: 200 (34148 bytes)
2023-07-05 05:14:21,550 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:14:21,550 | DEBUG: Data: None
2023-07-05 05:14:21,550 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:14:21,796 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5988
2023-07-05 05:14:21,797 | DEBUG: Response: 200 (5988 bytes)
2023-07-05 05:14:21,799 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:14:21,799 | DEBUG: Data: None
2023-07-05 05:14:21,799 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:14:21,945 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5986
2023-07-05 05:14:21,946 | DEBUG: Response: 200 (5986 bytes)
2023-07-05 05:14:21,948 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:14:21,948 | DEBUG: Data: None
2023-07-05 05:14:21,948 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:14:22,644 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14043
2023-07-05 05:14:22,647 | DEBUG: Response: 200 (14043 bytes)
2023-07-05 05:14:22,654 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:14:22,654 | DEBUG: Data: None
2023-07-05 05:14:22,654 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:14:22,786 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14043
2023-07-05 05:14:22,790 | DEBUG: Response: 200 (14043 bytes)
2023-07-05 05:14:22,795 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:14:22,795 | DEBUG: Data: None
2023-07-05 05:14:22,796 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:14:22,996 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4406
2023-07-05 05:14:22,997 | DEBUG: Response: 200 (4406 bytes)
2023-07-05 05:14:22,998 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:14:22,998 | DEBUG: Data: None
2023-07-05 05:14:22,998 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:14:23,140 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4406
2023-07-05 05:14:23,141 | DEBUG: Response: 200 (4406 bytes)
2023-07-05 05:14:23,143 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:14:23,143 | DEBUG: Data: None
2023-07-05 05:14:23,143 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:14:23,324 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3854
2023-07-05 05:14:23,325 | DEBUG: Response: 200 (3854 bytes)
2023-07-05 05:14:23,326 | INFO: 127.0.0.1 - - [05/Jul/2023 05:14:23] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-05 05:14:23,503 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3850
2023-07-05 05:14:23,504 | DEBUG: Response: 200 (3850 bytes)
2023-07-05 05:14:23,505 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:14:23,505 | DEBUG: Data: None
2023-07-05 05:14:23,505 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:14:23,877 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:14:23,878 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:14:23,878 | INFO: 127.0.0.1 - - [05/Jul/2023 05:14:23] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:15:06,085 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:15:06,085 | DEBUG: Data: None
2023-07-05 05:15:06,085 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:15:06,449 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2526
2023-07-05 05:15:06,450 | DEBUG: Response: 200 (2526 bytes)
2023-07-05 05:15:06,451 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:15:06,451 | DEBUG: Data: None
2023-07-05 05:15:06,451 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:15:06,800 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3852
2023-07-05 05:15:06,801 | DEBUG: Response: 200 (3852 bytes)
2023-07-05 05:15:06,802 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:15:06,802 | DEBUG: Data: None
2023-07-05 05:15:06,802 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:15:07,161 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6340
2023-07-05 05:15:07,162 | DEBUG: Response: 200 (6340 bytes)
2023-07-05 05:15:07,163 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:15:07,163 | DEBUG: Data: None
2023-07-05 05:15:07,163 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:15:08,606 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34150
2023-07-05 05:15:08,802 | DEBUG: Response: 200 (34150 bytes)
2023-07-05 05:15:08,816 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:15:08,817 | DEBUG: Data: None
2023-07-05 05:15:08,817 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:15:09,220 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5978
2023-07-05 05:15:09,221 | DEBUG: Response: 200 (5978 bytes)
2023-07-05 05:15:09,224 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:15:09,224 | DEBUG: Data: None
2023-07-05 05:15:09,224 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:15:09,824 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14050
2023-07-05 05:15:10,017 | DEBUG: Response: 200 (14050 bytes)
2023-07-05 05:15:10,023 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:15:10,023 | DEBUG: Data: None
2023-07-05 05:15:10,023 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:15:10,402 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4409
2023-07-05 05:15:10,403 | DEBUG: Response: 200 (4409 bytes)
2023-07-05 05:15:10,405 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:15:10,405 | DEBUG: Data: None
2023-07-05 05:15:10,405 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:15:10,727 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3853
2023-07-05 05:15:10,728 | DEBUG: Response: 200 (3853 bytes)
2023-07-05 05:15:10,729 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:15:10,729 | DEBUG: Data: None
2023-07-05 05:15:10,729 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:15:11,052 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:15:11,053 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:15:11,053 | INFO: 127.0.0.1 - - [05/Jul/2023 05:15:11] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:16:23,549 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:16:23,549 | DEBUG: Data: None
2023-07-05 05:16:23,549 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:16:23,868 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2529
2023-07-05 05:16:23,869 | DEBUG: Response: 200 (2529 bytes)
2023-07-05 05:16:23,870 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:16:23,870 | DEBUG: Data: None
2023-07-05 05:16:23,870 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:16:24,204 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3853
2023-07-05 05:16:24,205 | DEBUG: Response: 200 (3853 bytes)
2023-07-05 05:16:24,206 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:16:24,206 | DEBUG: Data: None
2023-07-05 05:16:24,206 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:16:24,560 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6357
2023-07-05 05:16:24,562 | DEBUG: Response: 200 (6357 bytes)
2023-07-05 05:16:24,563 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:16:24,563 | DEBUG: Data: None
2023-07-05 05:16:24,563 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:16:25,839 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34075
2023-07-05 05:16:25,843 | DEBUG: Response: 200 (34075 bytes)
2023-07-05 05:16:25,866 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:16:25,866 | DEBUG: Data: None
2023-07-05 05:16:25,866 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:16:26,285 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5977
2023-07-05 05:16:26,286 | DEBUG: Response: 200 (5977 bytes)
2023-07-05 05:16:26,288 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:16:26,288 | DEBUG: Data: None
2023-07-05 05:16:26,288 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:16:26,874 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14035
2023-07-05 05:16:27,065 | DEBUG: Response: 200 (14035 bytes)
2023-07-05 05:16:27,071 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:16:27,071 | DEBUG: Data: None
2023-07-05 05:16:27,071 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:16:27,414 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4403
2023-07-05 05:16:27,415 | DEBUG: Response: 200 (4403 bytes)
2023-07-05 05:16:27,416 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:16:27,416 | DEBUG: Data: None
2023-07-05 05:16:27,416 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:16:27,731 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3853
2023-07-05 05:16:27,734 | DEBUG: Response: 200 (3853 bytes)
2023-07-05 05:16:27,734 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:16:27,734 | DEBUG: Data: None
2023-07-05 05:16:27,734 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:16:28,023 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:16:28,024 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:16:28,025 | INFO: 127.0.0.1 - - [05/Jul/2023 05:16:28] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:16:49,424 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:16:49,424 | DEBUG: Data: None
2023-07-05 05:16:49,424 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:16:49,733 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2529
2023-07-05 05:16:49,734 | DEBUG: Response: 200 (2529 bytes)
2023-07-05 05:16:49,735 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:16:49,735 | DEBUG: Data: None
2023-07-05 05:16:49,735 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:16:50,082 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3994
2023-07-05 05:16:50,083 | DEBUG: Response: 200 (3994 bytes)
2023-07-05 05:16:50,084 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:16:50,084 | DEBUG: Data: None
2023-07-05 05:16:50,085 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:16:50,496 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6343
2023-07-05 05:16:50,497 | DEBUG: Response: 200 (6343 bytes)
2023-07-05 05:16:50,500 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:16:50,500 | DEBUG: Data: None
2023-07-05 05:16:50,500 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:16:51,827 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34065
2023-07-05 05:16:52,028 | DEBUG: Response: 200 (34065 bytes)
2023-07-05 05:16:52,043 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:16:52,043 | DEBUG: Data: None
2023-07-05 05:16:52,043 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:16:52,444 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5985
2023-07-05 05:16:52,445 | DEBUG: Response: 200 (5985 bytes)
2023-07-05 05:16:52,447 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:16:52,447 | DEBUG: Data: None
2023-07-05 05:16:52,447 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:16:53,017 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14029
2023-07-05 05:16:53,217 | DEBUG: Response: 200 (14029 bytes)
2023-07-05 05:16:53,222 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:16:53,223 | DEBUG: Data: None
2023-07-05 05:16:53,223 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:16:53,602 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4411
2023-07-05 05:16:53,603 | DEBUG: Response: 200 (4411 bytes)
2023-07-05 05:16:53,604 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:16:53,604 | DEBUG: Data: None
2023-07-05 05:16:53,605 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:16:54,026 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3997
2023-07-05 05:16:54,027 | DEBUG: Response: 200 (3997 bytes)
2023-07-05 05:16:54,029 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:16:54,030 | DEBUG: Data: None
2023-07-05 05:16:54,030 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:16:54,317 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:16:54,318 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:16:54,319 | INFO: 127.0.0.1 - - [05/Jul/2023 05:16:54] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:17:12,125 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:17:12,125 | DEBUG: Data: None
2023-07-05 05:17:12,125 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:17:12,474 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2527
2023-07-05 05:17:12,475 | DEBUG: Response: 200 (2527 bytes)
2023-07-05 05:17:12,475 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:17:12,475 | DEBUG: Data: None
2023-07-05 05:17:12,476 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:17:12,820 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3993
2023-07-05 05:17:12,821 | DEBUG: Response: 200 (3993 bytes)
2023-07-05 05:17:12,822 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:17:12,822 | DEBUG: Data: None
2023-07-05 05:17:12,822 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:17:13,194 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6351
2023-07-05 05:17:13,196 | DEBUG: Response: 200 (6351 bytes)
2023-07-05 05:17:13,198 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:17:13,198 | DEBUG: Data: None
2023-07-05 05:17:13,198 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:17:14,429 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34074
2023-07-05 05:17:14,633 | DEBUG: Response: 200 (34074 bytes)
2023-07-05 05:17:14,651 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:17:14,652 | DEBUG: Data: None
2023-07-05 05:17:14,652 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:17:15,085 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5976
2023-07-05 05:17:15,086 | DEBUG: Response: 200 (5976 bytes)
2023-07-05 05:17:15,087 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:17:15,087 | DEBUG: Data: None
2023-07-05 05:17:15,087 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:17:15,672 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14049
2023-07-05 05:17:15,675 | DEBUG: Response: 200 (14049 bytes)
2023-07-05 05:17:15,679 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:17:15,680 | DEBUG: Data: None
2023-07-05 05:17:15,680 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:17:16,035 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4407
2023-07-05 05:17:16,036 | DEBUG: Response: 200 (4407 bytes)
2023-07-05 05:17:16,038 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:17:16,038 | DEBUG: Data: None
2023-07-05 05:17:16,038 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:17:16,360 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3997
2023-07-05 05:17:16,361 | DEBUG: Response: 200 (3997 bytes)
2023-07-05 05:17:16,362 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:17:16,362 | DEBUG: Data: None
2023-07-05 05:17:16,362 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:17:16,663 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:17:16,663 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:17:16,664 | INFO: 127.0.0.1 - - [05/Jul/2023 05:17:16] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:17:52,116 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:17:52,116 | DEBUG: Data: None
2023-07-05 05:17:52,116 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:17:52,813 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2529
2023-07-05 05:17:52,814 | DEBUG: Response: 200 (2529 bytes)
2023-07-05 05:17:52,814 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:17:52,814 | DEBUG: Data: None
2023-07-05 05:17:52,814 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:17:53,133 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3997
2023-07-05 05:17:53,134 | DEBUG: Response: 200 (3997 bytes)
2023-07-05 05:17:53,135 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:17:53,135 | DEBUG: Data: None
2023-07-05 05:17:53,135 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:17:53,522 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6350
2023-07-05 05:17:53,523 | DEBUG: Response: 200 (6350 bytes)
2023-07-05 05:17:53,524 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:17:53,524 | DEBUG: Data: None
2023-07-05 05:17:53,524 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:17:55,062 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34115
2023-07-05 05:17:55,065 | DEBUG: Response: 200 (34115 bytes)
2023-07-05 05:17:55,082 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:17:55,082 | DEBUG: Data: None
2023-07-05 05:17:55,082 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:17:55,828 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5978
2023-07-05 05:17:55,829 | DEBUG: Response: 200 (5978 bytes)
2023-07-05 05:17:55,831 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:17:55,831 | DEBUG: Data: None
2023-07-05 05:17:55,831 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:17:56,591 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14038
2023-07-05 05:17:56,592 | DEBUG: Response: 200 (14038 bytes)
2023-07-05 05:17:56,597 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:17:56,598 | DEBUG: Data: None
2023-07-05 05:17:56,598 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:17:57,042 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4411
2023-07-05 05:17:57,043 | DEBUG: Response: 200 (4411 bytes)
2023-07-05 05:17:57,044 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:17:57,044 | DEBUG: Data: None
2023-07-05 05:17:57,044 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:17:57,370 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3997
2023-07-05 05:17:57,372 | DEBUG: Response: 200 (3997 bytes)
2023-07-05 05:17:57,374 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:17:57,374 | DEBUG: Data: None
2023-07-05 05:17:57,374 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:17:57,675 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:17:57,676 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:17:57,676 | INFO: 127.0.0.1 - - [05/Jul/2023 05:17:57] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:18:11,752 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:18:11,752 | DEBUG: Data: None
2023-07-05 05:18:11,752 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:18:12,077 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2529
2023-07-05 05:18:12,077 | DEBUG: Response: 200 (2529 bytes)
2023-07-05 05:18:12,078 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:18:12,078 | DEBUG: Data: None
2023-07-05 05:18:12,078 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:18:12,424 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3993
2023-07-05 05:18:12,425 | DEBUG: Response: 200 (3993 bytes)
2023-07-05 05:18:12,426 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:18:12,426 | DEBUG: Data: None
2023-07-05 05:18:12,427 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:18:12,813 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6352
2023-07-05 05:18:12,814 | DEBUG: Response: 200 (6352 bytes)
2023-07-05 05:18:12,815 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:18:12,815 | DEBUG: Data: None
2023-07-05 05:18:12,815 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:18:14,514 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34063
2023-07-05 05:18:14,518 | DEBUG: Response: 200 (34063 bytes)
2023-07-05 05:18:14,533 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:18:14,534 | DEBUG: Data: None
2023-07-05 05:18:14,534 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:18:15,140 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 5982
2023-07-05 05:18:15,141 | DEBUG: Response: 200 (5982 bytes)
2023-07-05 05:18:15,143 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:18:15,144 | DEBUG: Data: None
2023-07-05 05:18:15,144 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:18:15,927 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14060
2023-07-05 05:18:15,930 | DEBUG: Response: 200 (14060 bytes)
2023-07-05 05:18:15,935 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:18:15,935 | DEBUG: Data: None
2023-07-05 05:18:15,935 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:18:16,267 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4410
2023-07-05 05:18:16,268 | DEBUG: Response: 200 (4410 bytes)
2023-07-05 05:18:16,269 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:18:16,269 | DEBUG: Data: None
2023-07-05 05:18:16,269 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:18:16,625 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3997
2023-07-05 05:18:16,627 | DEBUG: Response: 200 (3997 bytes)
2023-07-05 05:18:16,629 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:18:16,629 | DEBUG: Data: None
2023-07-05 05:18:16,629 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:18:16,914 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:18:16,915 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:18:16,915 | INFO: 127.0.0.1 - - [05/Jul/2023 05:18:16] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:20:31,399 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:20:31,399 | DEBUG: Data: None
2023-07-05 05:20:31,400 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:20:31,721 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2528
2023-07-05 05:20:31,724 | DEBUG: Response: 200 (2528 bytes)
2023-07-05 05:20:31,724 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:20:31,724 | DEBUG: Data: None
2023-07-05 05:20:31,724 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:20:32,082 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3997
2023-07-05 05:20:32,083 | DEBUG: Response: 200 (3997 bytes)
2023-07-05 05:20:32,084 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:20:32,085 | DEBUG: Data: None
2023-07-05 05:20:32,085 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:20:32,424 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6358
2023-07-05 05:20:32,425 | DEBUG: Response: 200 (6358 bytes)
2023-07-05 05:20:32,426 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:20:32,426 | DEBUG: Data: None
2023-07-05 05:20:32,426 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:20:33,924 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34177
2023-07-05 05:20:33,931 | DEBUG: Response: 200 (34177 bytes)
2023-07-05 05:20:33,949 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:20:33,950 | DEBUG: Data: None
2023-07-05 05:20:33,950 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:20:34,363 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6014
2023-07-05 05:20:34,364 | DEBUG: Response: 200 (6014 bytes)
2023-07-05 05:20:34,366 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:20:34,366 | DEBUG: Data: None
2023-07-05 05:20:34,366 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:20:35,241 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14045
2023-07-05 05:20:35,244 | DEBUG: Response: 200 (14045 bytes)
2023-07-05 05:20:35,248 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:20:35,249 | DEBUG: Data: None
2023-07-05 05:20:35,249 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:20:35,592 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4409
2023-07-05 05:20:35,593 | DEBUG: Response: 200 (4409 bytes)
2023-07-05 05:20:35,594 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:20:35,594 | DEBUG: Data: None
2023-07-05 05:20:35,594 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:20:35,913 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3999
2023-07-05 05:20:35,914 | DEBUG: Response: 200 (3999 bytes)
2023-07-05 05:20:35,916 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:20:35,916 | DEBUG: Data: None
2023-07-05 05:20:35,916 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:20:36,206 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:20:36,207 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:20:36,207 | INFO: 127.0.0.1 - - [05/Jul/2023 05:20:36] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:20:52,284 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:20:52,284 | DEBUG: Data: None
2023-07-05 05:20:52,284 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:20:52,585 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2529
2023-07-05 05:20:52,585 | DEBUG: Response: 200 (2529 bytes)
2023-07-05 05:20:52,586 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:20:52,586 | DEBUG: Data: None
2023-07-05 05:20:52,586 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:20:52,921 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3996
2023-07-05 05:20:52,922 | DEBUG: Response: 200 (3996 bytes)
2023-07-05 05:20:52,924 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:20:52,924 | DEBUG: Data: None
2023-07-05 05:20:52,924 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:20:53,266 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6355
2023-07-05 05:20:53,267 | DEBUG: Response: 200 (6355 bytes)
2023-07-05 05:20:53,268 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:20:53,268 | DEBUG: Data: None
2023-07-05 05:20:53,268 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:20:54,718 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34190
2023-07-05 05:20:54,721 | DEBUG: Response: 200 (34190 bytes)
2023-07-05 05:20:54,737 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:20:54,737 | DEBUG: Data: None
2023-07-05 05:20:54,737 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:20:55,146 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6015
2023-07-05 05:20:55,147 | DEBUG: Response: 200 (6015 bytes)
2023-07-05 05:20:55,149 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:20:55,149 | DEBUG: Data: None
2023-07-05 05:20:55,149 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:20:56,122 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14042
2023-07-05 05:20:56,315 | DEBUG: Response: 200 (14042 bytes)
2023-07-05 05:20:56,321 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:20:56,321 | DEBUG: Data: None
2023-07-05 05:20:56,321 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:20:56,667 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4405
2023-07-05 05:20:56,668 | DEBUG: Response: 200 (4405 bytes)
2023-07-05 05:20:56,669 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:20:56,669 | DEBUG: Data: None
2023-07-05 05:20:56,669 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:20:57,009 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3992
2023-07-05 05:20:57,010 | DEBUG: Response: 200 (3992 bytes)
2023-07-05 05:20:57,011 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:20:57,011 | DEBUG: Data: None
2023-07-05 05:20:57,011 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:20:57,298 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:20:57,299 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:20:57,300 | INFO: 127.0.0.1 - - [05/Jul/2023 05:20:57] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:21:08,127 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:21:08,127 | DEBUG: Data: None
2023-07-05 05:21:08,127 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:21:08,423 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2528
2023-07-05 05:21:08,424 | DEBUG: Response: 200 (2528 bytes)
2023-07-05 05:21:08,425 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:21:08,425 | DEBUG: Data: None
2023-07-05 05:21:08,425 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:21:08,732 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3997
2023-07-05 05:21:08,733 | DEBUG: Response: 200 (3997 bytes)
2023-07-05 05:21:08,735 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:21:08,735 | DEBUG: Data: None
2023-07-05 05:21:08,735 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:21:09,066 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6358
2023-07-05 05:21:09,067 | DEBUG: Response: 200 (6358 bytes)
2023-07-05 05:21:09,068 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:21:09,068 | DEBUG: Data: None
2023-07-05 05:21:09,068 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:21:10,547 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34241
2023-07-05 05:21:10,750 | DEBUG: Response: 200 (34241 bytes)
2023-07-05 05:21:10,768 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:21:10,768 | DEBUG: Data: None
2023-07-05 05:21:10,768 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:21:11,145 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6014
2023-07-05 05:21:11,147 | DEBUG: Response: 200 (6014 bytes)
2023-07-05 05:21:11,150 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:21:11,150 | DEBUG: Data: None
2023-07-05 05:21:11,150 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:21:12,008 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14038
2023-07-05 05:21:12,200 | DEBUG: Response: 200 (14038 bytes)
2023-07-05 05:21:12,205 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:21:12,205 | DEBUG: Data: None
2023-07-05 05:21:12,205 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:21:12,569 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4404
2023-07-05 05:21:12,570 | DEBUG: Response: 200 (4404 bytes)
2023-07-05 05:21:12,571 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:21:12,572 | DEBUG: Data: None
2023-07-05 05:21:12,572 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:21:12,923 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3997
2023-07-05 05:21:12,923 | DEBUG: Response: 200 (3997 bytes)
2023-07-05 05:21:12,924 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:21:12,924 | DEBUG: Data: None
2023-07-05 05:21:12,924 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:21:13,210 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:21:13,211 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:21:13,211 | INFO: 127.0.0.1 - - [05/Jul/2023 05:21:13] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:21:34,339 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:21:34,339 | DEBUG: Data: None
2023-07-05 05:21:34,339 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:21:34,662 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2528
2023-07-05 05:21:34,665 | DEBUG: Response: 200 (2528 bytes)
2023-07-05 05:21:34,665 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:21:34,665 | DEBUG: Data: None
2023-07-05 05:21:34,665 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:21:34,989 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3996
2023-07-05 05:21:34,990 | DEBUG: Response: 200 (3996 bytes)
2023-07-05 05:21:34,991 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:21:34,991 | DEBUG: Data: None
2023-07-05 05:21:34,991 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:21:35,344 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6361
2023-07-05 05:21:35,346 | DEBUG: Response: 200 (6361 bytes)
2023-07-05 05:21:35,347 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:21:35,347 | DEBUG: Data: None
2023-07-05 05:21:35,347 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:21:37,022 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34189
2023-07-05 05:21:37,209 | DEBUG: Response: 200 (34189 bytes)
2023-07-05 05:21:37,225 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:21:37,225 | DEBUG: Data: None
2023-07-05 05:21:37,225 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:21:37,635 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6905
2023-07-05 05:21:37,636 | DEBUG: Response: 200 (6905 bytes)
2023-07-05 05:21:37,638 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:21:37,638 | DEBUG: Data: None
2023-07-05 05:21:37,638 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:21:38,663 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14027
2023-07-05 05:21:38,670 | DEBUG: Response: 200 (14027 bytes)
2023-07-05 05:21:38,676 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:21:38,676 | DEBUG: Data: None
2023-07-05 05:21:38,676 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:21:39,002 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4403
2023-07-05 05:21:39,003 | DEBUG: Response: 200 (4403 bytes)
2023-07-05 05:21:39,005 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:21:39,005 | DEBUG: Data: None
2023-07-05 05:21:39,005 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:21:39,323 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3997
2023-07-05 05:21:39,324 | DEBUG: Response: 200 (3997 bytes)
2023-07-05 05:21:39,325 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:21:39,325 | DEBUG: Data: None
2023-07-05 05:21:39,325 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:21:39,604 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:21:39,605 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:21:39,606 | INFO: 127.0.0.1 - - [05/Jul/2023 05:21:39] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:22:09,841 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:22:09,841 | DEBUG: Data: None
2023-07-05 05:22:09,841 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:22:10,189 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2528
2023-07-05 05:22:10,189 | DEBUG: Response: 200 (2528 bytes)
2023-07-05 05:22:10,190 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:22:10,190 | DEBUG: Data: None
2023-07-05 05:22:10,190 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:22:10,528 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3997
2023-07-05 05:22:10,529 | DEBUG: Response: 200 (3997 bytes)
2023-07-05 05:22:10,530 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:22:10,530 | DEBUG: Data: None
2023-07-05 05:22:10,530 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:22:10,896 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6358
2023-07-05 05:22:10,899 | DEBUG: Response: 200 (6358 bytes)
2023-07-05 05:22:10,900 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:22:10,900 | DEBUG: Data: None
2023-07-05 05:22:10,900 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:22:12,515 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34234
2023-07-05 05:22:12,526 | DEBUG: Response: 200 (34234 bytes)
2023-07-05 05:22:12,541 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:22:12,541 | DEBUG: Data: None
2023-07-05 05:22:12,541 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:22:13,000 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 6898
2023-07-05 05:22:13,002 | DEBUG: Response: 200 (6898 bytes)
2023-07-05 05:22:13,004 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:22:13,004 | DEBUG: Data: None
2023-07-05 05:22:13,004 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:22:13,730 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14045
2023-07-05 05:22:13,737 | DEBUG: Response: 200 (14045 bytes)
2023-07-05 05:22:13,742 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:22:13,742 | DEBUG: Data: None
2023-07-05 05:22:13,742 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:22:14,090 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4406
2023-07-05 05:22:14,091 | DEBUG: Response: 200 (4406 bytes)
2023-07-05 05:22:14,092 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:22:14,092 | DEBUG: Data: None
2023-07-05 05:22:14,092 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:22:14,429 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3998
2023-07-05 05:22:14,430 | DEBUG: Response: 200 (3998 bytes)
2023-07-05 05:22:14,431 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:22:14,431 | DEBUG: Data: None
2023-07-05 05:22:14,431 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:22:14,712 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:22:14,713 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:22:14,713 | INFO: 127.0.0.1 - - [05/Jul/2023 05:22:14] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:24:05,568 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:24:05,569 | DEBUG: Data: None
2023-07-05 05:24:05,569 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:24:05,934 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2527
2023-07-05 05:24:05,935 | DEBUG: Response: 200 (2527 bytes)
2023-07-05 05:24:05,936 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:24:05,936 | DEBUG: Data: None
2023-07-05 05:24:05,936 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:24:06,294 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3992
2023-07-05 05:24:06,295 | DEBUG: Response: 200 (3992 bytes)
2023-07-05 05:24:06,296 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:24:06,296 | DEBUG: Data: None
2023-07-05 05:24:06,296 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:24:06,654 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6351
2023-07-05 05:24:06,656 | DEBUG: Response: 200 (6351 bytes)
2023-07-05 05:24:06,657 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:24:06,657 | DEBUG: Data: None
2023-07-05 05:24:06,657 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:24:08,258 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34329
2023-07-05 05:24:08,273 | DEBUG: Response: 200 (34329 bytes)
2023-07-05 05:24:08,290 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:24:08,290 | DEBUG: Data: None
2023-07-05 05:24:08,291 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:24:08,688 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7056
2023-07-05 05:24:08,691 | DEBUG: Response: 200 (7056 bytes)
2023-07-05 05:24:08,694 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:24:08,694 | DEBUG: Data: None
2023-07-05 05:24:08,694 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:24:09,487 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14039
2023-07-05 05:24:09,581 | DEBUG: Response: 200 (14039 bytes)
2023-07-05 05:24:09,586 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:24:09,586 | DEBUG: Data: None
2023-07-05 05:24:09,586 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:24:09,971 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4404
2023-07-05 05:24:09,973 | DEBUG: Response: 200 (4404 bytes)
2023-07-05 05:24:09,974 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:24:09,974 | DEBUG: Data: None
2023-07-05 05:24:09,974 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:24:10,280 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3993
2023-07-05 05:24:10,280 | DEBUG: Response: 200 (3993 bytes)
2023-07-05 05:24:10,281 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:24:10,281 | DEBUG: Data: None
2023-07-05 05:24:10,281 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:24:10,574 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:24:10,575 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:24:10,577 | INFO: 127.0.0.1 - - [05/Jul/2023 05:24:10] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:24:36,545 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:24:36,545 | DEBUG: Data: None
2023-07-05 05:24:36,545 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:24:37,002 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2527
2023-07-05 05:24:37,003 | DEBUG: Response: 200 (2527 bytes)
2023-07-05 05:24:37,003 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:24:37,004 | DEBUG: Data: None
2023-07-05 05:24:37,004 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:24:37,356 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3999
2023-07-05 05:24:37,373 | DEBUG: Response: 200 (3999 bytes)
2023-07-05 05:24:37,374 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:24:37,374 | DEBUG: Data: None
2023-07-05 05:24:37,374 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:24:37,778 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6354
2023-07-05 05:24:37,780 | DEBUG: Response: 200 (6354 bytes)
2023-07-05 05:24:37,781 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:24:37,781 | DEBUG: Data: None
2023-07-05 05:24:37,781 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:24:39,099 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34361
2023-07-05 05:24:39,113 | DEBUG: Response: 200 (34361 bytes)
2023-07-05 05:24:39,130 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:24:39,130 | DEBUG: Data: None
2023-07-05 05:24:39,130 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:24:39,532 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7065
2023-07-05 05:24:39,533 | DEBUG: Response: 200 (7065 bytes)
2023-07-05 05:24:39,535 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:24:39,535 | DEBUG: Data: None
2023-07-05 05:24:39,535 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:24:40,087 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14042
2023-07-05 05:24:40,282 | DEBUG: Response: 200 (14042 bytes)
2023-07-05 05:24:40,288 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:24:40,288 | DEBUG: Data: None
2023-07-05 05:24:40,288 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:24:40,627 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4409
2023-07-05 05:24:40,630 | DEBUG: Response: 200 (4409 bytes)
2023-07-05 05:24:40,631 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:24:40,631 | DEBUG: Data: None
2023-07-05 05:24:40,631 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:24:40,970 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3992
2023-07-05 05:24:40,971 | DEBUG: Response: 200 (3992 bytes)
2023-07-05 05:24:40,972 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:24:40,972 | DEBUG: Data: None
2023-07-05 05:24:40,972 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:24:41,293 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:24:41,293 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:24:41,294 | INFO: 127.0.0.1 - - [05/Jul/2023 05:24:41] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:25:05,422 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:25:05,422 | DEBUG: Data: None
2023-07-05 05:25:05,422 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:25:06,120 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2527
2023-07-05 05:25:06,121 | DEBUG: Response: 200 (2527 bytes)
2023-07-05 05:25:06,122 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:25:06,122 | DEBUG: Data: None
2023-07-05 05:25:06,122 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:25:06,493 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3996
2023-07-05 05:25:06,494 | DEBUG: Response: 200 (3996 bytes)
2023-07-05 05:25:06,495 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:25:06,495 | DEBUG: Data: None
2023-07-05 05:25:06,495 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:25:06,935 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6347
2023-07-05 05:25:06,937 | DEBUG: Response: 200 (6347 bytes)
2023-07-05 05:25:06,938 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:25:06,938 | DEBUG: Data: None
2023-07-05 05:25:06,938 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:25:08,546 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34327
2023-07-05 05:25:08,989 | DEBUG: Response: 200 (34327 bytes)
2023-07-05 05:25:09,007 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:25:09,007 | DEBUG: Data: None
2023-07-05 05:25:09,007 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:25:09,430 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7064
2023-07-05 05:25:09,445 | DEBUG: Response: 200 (7064 bytes)
2023-07-05 05:25:09,447 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:25:09,447 | DEBUG: Data: None
2023-07-05 05:25:09,447 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:25:09,983 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14039
2023-07-05 05:25:10,190 | DEBUG: Response: 200 (14039 bytes)
2023-07-05 05:25:10,195 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:25:10,195 | DEBUG: Data: None
2023-07-05 05:25:10,195 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:25:10,545 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4405
2023-07-05 05:25:10,547 | DEBUG: Response: 200 (4405 bytes)
2023-07-05 05:25:10,549 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:25:10,549 | DEBUG: Data: None
2023-07-05 05:25:10,549 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:25:10,889 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3997
2023-07-05 05:25:10,890 | DEBUG: Response: 200 (3997 bytes)
2023-07-05 05:25:10,891 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:25:10,891 | DEBUG: Data: None
2023-07-05 05:25:10,891 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:25:11,209 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:25:11,210 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:25:11,210 | INFO: 127.0.0.1 - - [05/Jul/2023 05:25:11] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:25:17,887 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:25:17,887 | DEBUG: Data: None
2023-07-05 05:25:17,887 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:25:18,185 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2529
2023-07-05 05:25:18,188 | DEBUG: Response: 200 (2529 bytes)
2023-07-05 05:25:18,189 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:25:18,189 | DEBUG: Data: None
2023-07-05 05:25:18,189 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:25:18,517 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3992
2023-07-05 05:25:18,518 | DEBUG: Response: 200 (3992 bytes)
2023-07-05 05:25:18,519 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:25:18,520 | DEBUG: Data: None
2023-07-05 05:25:18,520 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:25:18,848 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6354
2023-07-05 05:25:18,851 | DEBUG: Response: 200 (6354 bytes)
2023-07-05 05:25:18,852 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:25:18,852 | DEBUG: Data: None
2023-07-05 05:25:18,852 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:25:20,363 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34297
2023-07-05 05:25:20,385 | DEBUG: Response: 200 (34297 bytes)
2023-07-05 05:25:20,400 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:25:20,400 | DEBUG: Data: None
2023-07-05 05:25:20,400 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:25:20,833 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7063
2023-07-05 05:25:20,837 | DEBUG: Response: 200 (7063 bytes)
2023-07-05 05:25:20,839 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:25:20,839 | DEBUG: Data: None
2023-07-05 05:25:20,839 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:25:21,595 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14036
2023-07-05 05:25:21,602 | DEBUG: Response: 200 (14036 bytes)
2023-07-05 05:25:21,607 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:25:21,607 | DEBUG: Data: None
2023-07-05 05:25:21,607 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:25:21,972 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4405
2023-07-05 05:25:21,973 | DEBUG: Response: 200 (4405 bytes)
2023-07-05 05:25:21,974 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:25:21,974 | DEBUG: Data: None
2023-07-05 05:25:21,974 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:25:22,308 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3996
2023-07-05 05:25:22,310 | DEBUG: Response: 200 (3996 bytes)
2023-07-05 05:25:22,311 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:25:22,311 | DEBUG: Data: None
2023-07-05 05:25:22,312 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:25:22,597 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:25:22,598 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:25:22,598 | INFO: 127.0.0.1 - - [05/Jul/2023 05:25:22] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:25:32,066 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:25:32,066 | DEBUG: Data: None
2023-07-05 05:25:32,066 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:25:32,370 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2527
2023-07-05 05:25:32,371 | DEBUG: Response: 200 (2527 bytes)
2023-07-05 05:25:32,371 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:25:32,371 | DEBUG: Data: None
2023-07-05 05:25:32,371 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:25:32,711 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3999
2023-07-05 05:25:32,712 | DEBUG: Response: 200 (3999 bytes)
2023-07-05 05:25:32,713 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:25:32,713 | DEBUG: Data: None
2023-07-05 05:25:32,713 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:25:33,110 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6349
2023-07-05 05:25:33,111 | DEBUG: Response: 200 (6349 bytes)
2023-07-05 05:25:33,112 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:25:33,112 | DEBUG: Data: None
2023-07-05 05:25:33,112 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:25:34,460 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34296
2023-07-05 05:25:34,650 | DEBUG: Response: 200 (34296 bytes)
2023-07-05 05:25:34,669 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:25:34,669 | DEBUG: Data: None
2023-07-05 05:25:34,669 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:25:35,080 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7056
2023-07-05 05:25:35,084 | DEBUG: Response: 200 (7056 bytes)
2023-07-05 05:25:35,086 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:25:35,086 | DEBUG: Data: None
2023-07-05 05:25:35,086 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:25:36,000 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14040
2023-07-05 05:25:36,005 | DEBUG: Response: 200 (14040 bytes)
2023-07-05 05:25:36,011 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:25:36,011 | DEBUG: Data: None
2023-07-05 05:25:36,011 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:25:36,364 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4408
2023-07-05 05:25:36,365 | DEBUG: Response: 200 (4408 bytes)
2023-07-05 05:25:36,366 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:25:36,366 | DEBUG: Data: None
2023-07-05 05:25:36,366 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:25:36,716 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3997
2023-07-05 05:25:36,717 | DEBUG: Response: 200 (3997 bytes)
2023-07-05 05:25:36,718 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:25:36,718 | DEBUG: Data: None
2023-07-05 05:25:36,718 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:25:37,008 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:25:37,008 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:25:37,009 | INFO: 127.0.0.1 - - [05/Jul/2023 05:25:37] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:25:57,481 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:25:57,481 | DEBUG: Data: None
2023-07-05 05:25:57,481 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:25:57,800 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2529
2023-07-05 05:25:57,801 | DEBUG: Response: 200 (2529 bytes)
2023-07-05 05:25:57,801 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:25:57,801 | DEBUG: Data: None
2023-07-05 05:25:57,801 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:25:58,199 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3991
2023-07-05 05:25:58,199 | DEBUG: Response: 200 (3991 bytes)
2023-07-05 05:25:58,200 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:25:58,201 | DEBUG: Data: None
2023-07-05 05:25:58,201 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:25:58,559 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6361
2023-07-05 05:25:58,561 | DEBUG: Response: 200 (6361 bytes)
2023-07-05 05:25:58,562 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:25:58,562 | DEBUG: Data: None
2023-07-05 05:25:58,562 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:26:00,173 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34360
2023-07-05 05:26:00,188 | DEBUG: Response: 200 (34360 bytes)
2023-07-05 05:26:00,204 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:26:00,204 | DEBUG: Data: None
2023-07-05 05:26:00,204 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:26:00,602 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7142
2023-07-05 05:26:00,605 | DEBUG: Response: 200 (7142 bytes)
2023-07-05 05:26:00,607 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:26:00,607 | DEBUG: Data: None
2023-07-05 05:26:00,607 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:26:01,263 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14035
2023-07-05 05:26:01,467 | DEBUG: Response: 200 (14035 bytes)
2023-07-05 05:26:01,472 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:26:01,472 | DEBUG: Data: None
2023-07-05 05:26:01,472 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:26:01,842 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4407
2023-07-05 05:26:01,843 | DEBUG: Response: 200 (4407 bytes)
2023-07-05 05:26:01,844 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:26:01,844 | DEBUG: Data: None
2023-07-05 05:26:01,844 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:26:02,175 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3990
2023-07-05 05:26:02,177 | DEBUG: Response: 200 (3990 bytes)
2023-07-05 05:26:02,178 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:26:02,178 | DEBUG: Data: None
2023-07-05 05:26:02,178 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:26:02,536 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:26:02,537 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:26:02,538 | INFO: 127.0.0.1 - - [05/Jul/2023 05:26:02] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:26:13,311 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:26:13,311 | DEBUG: Data: None
2023-07-05 05:26:13,311 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:26:13,635 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2528
2023-07-05 05:26:13,636 | DEBUG: Response: 200 (2528 bytes)
2023-07-05 05:26:13,636 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:26:13,636 | DEBUG: Data: None
2023-07-05 05:26:13,636 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:26:13,967 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3995
2023-07-05 05:26:13,969 | DEBUG: Response: 200 (3995 bytes)
2023-07-05 05:26:13,969 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:26:13,969 | DEBUG: Data: None
2023-07-05 05:26:13,970 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:26:14,317 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6357
2023-07-05 05:26:14,318 | DEBUG: Response: 200 (6357 bytes)
2023-07-05 05:26:14,319 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:26:14,319 | DEBUG: Data: None
2023-07-05 05:26:14,319 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:26:15,618 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34327
2023-07-05 05:26:15,881 | DEBUG: Response: 200 (34327 bytes)
2023-07-05 05:26:15,899 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:26:15,899 | DEBUG: Data: None
2023-07-05 05:26:15,899 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:26:16,315 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7152
2023-07-05 05:26:16,331 | DEBUG: Response: 200 (7152 bytes)
2023-07-05 05:26:16,334 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:26:16,334 | DEBUG: Data: None
2023-07-05 05:26:16,334 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:26:17,228 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14046
2023-07-05 05:26:17,245 | DEBUG: Response: 200 (14046 bytes)
2023-07-05 05:26:17,250 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:26:17,250 | DEBUG: Data: None
2023-07-05 05:26:17,250 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:26:17,624 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4403
2023-07-05 05:26:17,625 | DEBUG: Response: 200 (4403 bytes)
2023-07-05 05:26:17,626 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:26:17,626 | DEBUG: Data: None
2023-07-05 05:26:17,627 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:26:17,970 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3989
2023-07-05 05:26:17,973 | DEBUG: Response: 200 (3989 bytes)
2023-07-05 05:26:17,974 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:26:17,974 | DEBUG: Data: None
2023-07-05 05:26:17,974 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:26:18,264 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:26:18,265 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:26:18,266 | INFO: 127.0.0.1 - - [05/Jul/2023 05:26:18] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:26:30,309 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:26:30,309 | DEBUG: Data: None
2023-07-05 05:26:30,309 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:26:30,649 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2527
2023-07-05 05:26:30,649 | DEBUG: Response: 200 (2527 bytes)
2023-07-05 05:26:30,651 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:26:30,651 | DEBUG: Data: None
2023-07-05 05:26:30,651 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:26:30,999 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3990
2023-07-05 05:26:31,012 | DEBUG: Response: 200 (3990 bytes)
2023-07-05 05:26:31,013 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:26:31,014 | DEBUG: Data: None
2023-07-05 05:26:31,014 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:26:31,376 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6353
2023-07-05 05:26:31,378 | DEBUG: Response: 200 (6353 bytes)
2023-07-05 05:26:31,380 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:26:31,381 | DEBUG: Data: None
2023-07-05 05:26:31,381 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:26:32,891 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34307
2023-07-05 05:26:33,093 | DEBUG: Response: 200 (34307 bytes)
2023-07-05 05:26:33,111 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:26:33,111 | DEBUG: Data: None
2023-07-05 05:26:33,111 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:26:33,596 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7145
2023-07-05 05:26:33,597 | DEBUG: Response: 200 (7145 bytes)
2023-07-05 05:26:33,599 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:26:33,599 | DEBUG: Data: None
2023-07-05 05:26:33,599 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:26:34,408 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14048
2023-07-05 05:26:34,410 | DEBUG: Response: 200 (14048 bytes)
2023-07-05 05:26:34,415 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:26:34,415 | DEBUG: Data: None
2023-07-05 05:26:34,415 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:26:34,759 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4403
2023-07-05 05:26:34,759 | DEBUG: Response: 200 (4403 bytes)
2023-07-05 05:26:34,761 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:26:34,761 | DEBUG: Data: None
2023-07-05 05:26:34,761 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:26:35,076 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3995
2023-07-05 05:26:35,077 | DEBUG: Response: 200 (3995 bytes)
2023-07-05 05:26:35,078 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:26:35,078 | DEBUG: Data: None
2023-07-05 05:26:35,078 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:26:35,348 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:26:35,349 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:26:35,349 | INFO: 127.0.0.1 - - [05/Jul/2023 05:26:35] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:27:14,107 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:27:14,107 | DEBUG: Data: None
2023-07-05 05:27:14,107 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:27:14,414 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2527
2023-07-05 05:27:14,416 | DEBUG: Response: 200 (2527 bytes)
2023-07-05 05:27:14,417 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:27:14,417 | DEBUG: Data: None
2023-07-05 05:27:14,417 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:27:14,751 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3989
2023-07-05 05:27:14,753 | DEBUG: Response: 200 (3989 bytes)
2023-07-05 05:27:14,755 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:27:14,755 | DEBUG: Data: None
2023-07-05 05:27:14,755 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:27:15,121 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6361
2023-07-05 05:27:15,124 | DEBUG: Response: 200 (6361 bytes)
2023-07-05 05:27:15,126 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:27:15,126 | DEBUG: Data: None
2023-07-05 05:27:15,126 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:27:16,480 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34308
2023-07-05 05:27:16,499 | DEBUG: Response: 200 (34308 bytes)
2023-07-05 05:27:16,514 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:27:16,515 | DEBUG: Data: None
2023-07-05 05:27:16,515 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:27:16,931 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7155
2023-07-05 05:27:16,933 | DEBUG: Response: 200 (7155 bytes)
2023-07-05 05:27:16,935 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:27:16,935 | DEBUG: Data: None
2023-07-05 05:27:16,935 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:27:17,722 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14043
2023-07-05 05:27:17,726 | DEBUG: Response: 200 (14043 bytes)
2023-07-05 05:27:17,732 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:27:17,732 | DEBUG: Data: None
2023-07-05 05:27:17,733 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:27:18,092 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4405
2023-07-05 05:27:18,093 | DEBUG: Response: 200 (4405 bytes)
2023-07-05 05:27:18,095 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:27:18,095 | DEBUG: Data: None
2023-07-05 05:27:18,095 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:27:18,420 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3992
2023-07-05 05:27:18,421 | DEBUG: Response: 200 (3992 bytes)
2023-07-05 05:27:18,422 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:27:18,422 | DEBUG: Data: None
2023-07-05 05:27:18,422 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:27:18,701 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:27:18,702 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:27:18,702 | INFO: 127.0.0.1 - - [05/Jul/2023 05:27:18] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:27:53,670 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:27:53,670 | DEBUG: Data: None
2023-07-05 05:27:53,670 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:27:53,994 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2528
2023-07-05 05:27:53,996 | DEBUG: Response: 200 (2528 bytes)
2023-07-05 05:27:53,996 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:27:53,996 | DEBUG: Data: None
2023-07-05 05:27:53,996 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:27:54,315 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3991
2023-07-05 05:27:54,316 | DEBUG: Response: 200 (3991 bytes)
2023-07-05 05:27:54,317 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:27:54,317 | DEBUG: Data: None
2023-07-05 05:27:54,317 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:27:54,720 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6351
2023-07-05 05:27:54,721 | DEBUG: Response: 200 (6351 bytes)
2023-07-05 05:27:54,723 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:27:54,723 | DEBUG: Data: None
2023-07-05 05:27:54,723 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:27:56,059 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34295
2023-07-05 05:27:56,240 | DEBUG: Response: 200 (34295 bytes)
2023-07-05 05:27:56,257 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:27:56,257 | DEBUG: Data: None
2023-07-05 05:27:56,257 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:27:56,953 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7160
2023-07-05 05:27:56,954 | DEBUG: Response: 200 (7160 bytes)
2023-07-05 05:27:56,956 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:27:56,956 | DEBUG: Data: None
2023-07-05 05:27:56,956 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:27:57,791 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14037
2023-07-05 05:27:57,798 | DEBUG: Response: 200 (14037 bytes)
2023-07-05 05:27:57,803 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:27:57,803 | DEBUG: Data: None
2023-07-05 05:27:57,803 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:27:58,140 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4405
2023-07-05 05:27:58,142 | DEBUG: Response: 200 (4405 bytes)
2023-07-05 05:27:58,143 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:27:58,143 | DEBUG: Data: None
2023-07-05 05:27:58,143 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:27:58,720 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3993
2023-07-05 05:27:58,723 | DEBUG: Response: 200 (3993 bytes)
2023-07-05 05:27:58,724 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:27:58,724 | DEBUG: Data: None
2023-07-05 05:27:58,724 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:27:59,030 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:27:59,031 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:27:59,031 | INFO: 127.0.0.1 - - [05/Jul/2023 05:27:59] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:29:26,178 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:29:26,179 | DEBUG: Data: None
2023-07-05 05:29:26,179 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:29:26,519 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2527
2023-07-05 05:29:26,520 | DEBUG: Response: 200 (2527 bytes)
2023-07-05 05:29:26,520 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:29:26,520 | DEBUG: Data: None
2023-07-05 05:29:26,520 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:29:26,846 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3990
2023-07-05 05:29:26,847 | DEBUG: Response: 200 (3990 bytes)
2023-07-05 05:29:26,848 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:29:26,848 | DEBUG: Data: None
2023-07-05 05:29:26,848 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:29:27,193 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6359
2023-07-05 05:29:27,196 | DEBUG: Response: 200 (6359 bytes)
2023-07-05 05:29:27,197 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:29:27,197 | DEBUG: Data: None
2023-07-05 05:29:27,197 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:29:28,820 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34324
2023-07-05 05:29:29,078 | DEBUG: Response: 200 (34324 bytes)
2023-07-05 05:29:29,096 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:29:29,096 | DEBUG: Data: None
2023-07-05 05:29:29,096 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:29:29,640 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7407
2023-07-05 05:29:29,652 | DEBUG: Response: 200 (7407 bytes)
2023-07-05 05:29:29,654 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:29:29,654 | DEBUG: Data: None
2023-07-05 05:29:29,654 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:29:30,393 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14044
2023-07-05 05:29:30,403 | DEBUG: Response: 200 (14044 bytes)
2023-07-05 05:29:30,409 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:29:30,410 | DEBUG: Data: None
2023-07-05 05:29:30,410 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:29:30,755 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4409
2023-07-05 05:29:30,761 | DEBUG: Response: 200 (4409 bytes)
2023-07-05 05:29:30,763 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:29:30,763 | DEBUG: Data: None
2023-07-05 05:29:30,763 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:29:31,235 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3995
2023-07-05 05:29:31,236 | DEBUG: Response: 200 (3995 bytes)
2023-07-05 05:29:31,237 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:29:31,237 | DEBUG: Data: None
2023-07-05 05:29:31,237 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:29:31,521 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:29:31,522 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:29:31,523 | INFO: 127.0.0.1 - - [05/Jul/2023 05:29:31] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:30:09,853 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:30:09,854 | DEBUG: Data: None
2023-07-05 05:30:09,854 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:30:10,161 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2527
2023-07-05 05:30:10,162 | DEBUG: Response: 200 (2527 bytes)
2023-07-05 05:30:10,163 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:30:10,163 | DEBUG: Data: None
2023-07-05 05:30:10,163 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:30:10,482 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3994
2023-07-05 05:30:10,483 | DEBUG: Response: 200 (3994 bytes)
2023-07-05 05:30:10,484 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:30:10,484 | DEBUG: Data: None
2023-07-05 05:30:10,484 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:30:10,853 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 6346
2023-07-05 05:30:10,856 | DEBUG: Response: 200 (6346 bytes)
2023-07-05 05:30:10,857 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14pytdb/
2023-07-05 05:30:10,857 | DEBUG: Data: None
2023-07-05 05:30:10,857 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:30:12,427 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14pytdb/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 34293
2023-07-05 05:30:12,626 | DEBUG: Response: 200 (34293 bytes)
2023-07-05 05:30:12,644 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:30:12,644 | DEBUG: Data: None
2023-07-05 05:30:12,644 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:30:13,094 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 7414
2023-07-05 05:30:13,097 | DEBUG: Response: 200 (7414 bytes)
2023-07-05 05:30:13,100 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:30:13,100 | DEBUG: Data: None
2023-07-05 05:30:13,100 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:30:13,874 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14040
2023-07-05 05:30:13,881 | DEBUG: Response: 200 (14040 bytes)
2023-07-05 05:30:13,887 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:30:13,887 | DEBUG: Data: None
2023-07-05 05:30:13,887 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:30:14,242 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4403
2023-07-05 05:30:14,243 | DEBUG: Response: 200 (4403 bytes)
2023-07-05 05:30:14,244 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:30:14,244 | DEBUG: Data: None
2023-07-05 05:30:14,244 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:30:14,648 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3995
2023-07-05 05:30:14,649 | DEBUG: Response: 200 (3995 bytes)
2023-07-05 05:30:14,650 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:30:14,650 | DEBUG: Data: None
2023-07-05 05:30:14,650 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:30:14,970 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:30:14,971 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:30:14,972 | INFO: 127.0.0.1 - - [05/Jul/2023 05:30:14] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:36:34,586 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:36:34,586 | DEBUG: Data: None
2023-07-05 05:36:34,586 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:36:34,678 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:36:34,678 | DEBUG: Data: None
2023-07-05 05:36:34,678 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:36:34,682 | DEBUG: Resetting dropped connection: oauth.reddit.com
2023-07-05 05:36:34,856 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:36:34,857 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:36:34,858 | INFO: 127.0.0.1 - - [05/Jul/2023 05:36:34] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-05 05:36:35,078 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2528
2023-07-05 05:36:35,078 | DEBUG: Response: 200 (2528 bytes)
2023-07-05 05:36:35,079 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:36:35,079 | DEBUG: Data: None
2023-07-05 05:36:35,079 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:36:35,114 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:36:35,115 | DEBUG: Data: None
2023-07-05 05:36:35,115 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:36:35,413 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3988
2023-07-05 05:36:35,415 | DEBUG: Response: 200 (3988 bytes)
2023-07-05 05:36:35,418 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:36:35,420 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2528
2023-07-05 05:36:35,420 | DEBUG: Data: None
2023-07-05 05:36:35,421 | DEBUG: Response: 200 (2528 bytes)
2023-07-05 05:36:35,422 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:36:35,422 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:36:35,423 | DEBUG: Data: None
2023-07-05 05:36:35,423 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:36:35,780 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3994
2023-07-05 05:36:35,781 | DEBUG: Response: 200 (3994 bytes)
2023-07-05 05:36:35,782 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:36:35,782 | DEBUG: Data: None
2023-07-05 05:36:35,782 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:36:35,934 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5829
2023-07-05 05:36:35,938 | DEBUG: Response: 200 (5829 bytes)
2023-07-05 05:36:35,939 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:36:35,939 | DEBUG: Data: None
2023-07-05 05:36:35,939 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:36:36,139 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5829
2023-07-05 05:36:36,140 | DEBUG: Response: 200 (5829 bytes)
2023-07-05 05:36:36,141 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:36:36,141 | DEBUG: Data: None
2023-07-05 05:36:36,141 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:36:36,413 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8582
2023-07-05 05:36:36,418 | DEBUG: Response: 200 (8582 bytes)
2023-07-05 05:36:36,421 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:36:36,421 | DEBUG: Data: None
2023-07-05 05:36:36,421 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:36:36,590 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8578
2023-07-05 05:36:36,591 | DEBUG: Response: 200 (8578 bytes)
2023-07-05 05:36:36,593 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:36:36,593 | DEBUG: Data: None
2023-07-05 05:36:36,593 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:36:37,361 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14046
2023-07-05 05:36:37,364 | DEBUG: Response: 200 (14046 bytes)
2023-07-05 05:36:37,368 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:36:37,368 | DEBUG: Data: None
2023-07-05 05:36:37,368 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:36:37,534 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14038
2023-07-05 05:36:37,541 | DEBUG: Response: 200 (14038 bytes)
2023-07-05 05:36:37,548 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:36:37,548 | DEBUG: Data: None
2023-07-05 05:36:37,548 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:36:37,730 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4408
2023-07-05 05:36:37,731 | DEBUG: Response: 200 (4408 bytes)
2023-07-05 05:36:37,732 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:36:37,732 | DEBUG: Data: None
2023-07-05 05:36:37,732 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:36:37,886 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4404
2023-07-05 05:36:37,888 | DEBUG: Response: 200 (4404 bytes)
2023-07-05 05:36:37,889 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:36:37,889 | DEBUG: Data: None
2023-07-05 05:36:37,889 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:36:38,061 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3990
2023-07-05 05:36:38,062 | DEBUG: Response: 200 (3990 bytes)
2023-07-05 05:36:38,063 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:36:38,063 | DEBUG: Data: None
2023-07-05 05:36:38,063 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:36:38,213 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3993
2023-07-05 05:36:38,214 | DEBUG: Response: 200 (3993 bytes)
2023-07-05 05:36:38,215 | INFO: 127.0.0.1 - - [05/Jul/2023 05:36:38] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-05 05:36:38,456 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:36:38,456 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:36:38,457 | INFO: 127.0.0.1 - - [05/Jul/2023 05:36:38] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:38:34,328 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:38:34,328 | DEBUG: Data: None
2023-07-05 05:38:34,329 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:38:34,644 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2528
2023-07-05 05:38:34,645 | DEBUG: Response: 200 (2528 bytes)
2023-07-05 05:38:34,645 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:38:34,645 | DEBUG: Data: None
2023-07-05 05:38:34,645 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:38:34,987 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3988
2023-07-05 05:38:34,988 | DEBUG: Response: 200 (3988 bytes)
2023-07-05 05:38:34,989 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:38:34,989 | DEBUG: Data: None
2023-07-05 05:38:34,989 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:38:35,415 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5816
2023-07-05 05:38:35,416 | DEBUG: Response: 200 (5816 bytes)
2023-07-05 05:38:35,417 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:38:35,417 | DEBUG: Data: None
2023-07-05 05:38:35,417 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:38:35,874 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8807
2023-07-05 05:38:35,876 | DEBUG: Response: 200 (8807 bytes)
2023-07-05 05:38:35,879 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:38:35,879 | DEBUG: Data: None
2023-07-05 05:38:35,879 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:38:36,777 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14043
2023-07-05 05:38:36,778 | DEBUG: Response: 200 (14043 bytes)
2023-07-05 05:38:36,783 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:38:36,783 | DEBUG: Data: None
2023-07-05 05:38:36,783 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:38:37,149 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4404
2023-07-05 05:38:37,152 | DEBUG: Response: 200 (4404 bytes)
2023-07-05 05:38:37,153 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:38:37,153 | DEBUG: Data: None
2023-07-05 05:38:37,153 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:38:37,484 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3989
2023-07-05 05:38:37,485 | DEBUG: Response: 200 (3989 bytes)
2023-07-05 05:38:37,486 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:38:37,486 | DEBUG: Data: None
2023-07-05 05:38:37,486 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:38:37,763 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:38:37,763 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:38:37,764 | INFO: 127.0.0.1 - - [05/Jul/2023 05:38:37] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:38:44,946 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:38:44,947 | DEBUG: Data: None
2023-07-05 05:38:44,947 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:38:45,293 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2527
2023-07-05 05:38:45,294 | DEBUG: Response: 200 (2527 bytes)
2023-07-05 05:38:45,295 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:38:45,295 | DEBUG: Data: None
2023-07-05 05:38:45,295 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:38:45,625 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3994
2023-07-05 05:38:45,626 | DEBUG: Response: 200 (3994 bytes)
2023-07-05 05:38:45,627 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:38:45,627 | DEBUG: Data: None
2023-07-05 05:38:45,627 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:38:45,993 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5824
2023-07-05 05:38:45,994 | DEBUG: Response: 200 (5824 bytes)
2023-07-05 05:38:45,995 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:38:45,995 | DEBUG: Data: None
2023-07-05 05:38:45,995 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:38:46,465 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8824
2023-07-05 05:38:46,466 | DEBUG: Response: 200 (8824 bytes)
2023-07-05 05:38:46,469 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:38:46,469 | DEBUG: Data: None
2023-07-05 05:38:46,469 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:38:47,067 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14045
2023-07-05 05:38:47,072 | DEBUG: Response: 200 (14045 bytes)
2023-07-05 05:38:47,077 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:38:47,077 | DEBUG: Data: None
2023-07-05 05:38:47,077 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:38:47,418 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4409
2023-07-05 05:38:47,419 | DEBUG: Response: 200 (4409 bytes)
2023-07-05 05:38:47,420 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:38:47,421 | DEBUG: Data: None
2023-07-05 05:38:47,421 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:38:47,956 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3993
2023-07-05 05:38:47,957 | DEBUG: Response: 200 (3993 bytes)
2023-07-05 05:38:47,958 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:38:47,958 | DEBUG: Data: None
2023-07-05 05:38:47,958 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:38:48,233 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:38:48,234 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:38:48,235 | INFO: 127.0.0.1 - - [05/Jul/2023 05:38:48] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:38:54,498 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:38:54,498 | DEBUG: Data: None
2023-07-05 05:38:54,498 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:38:54,589 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:38:54,589 | DEBUG: Data: None
2023-07-05 05:38:54,589 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:38:54,773 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:38:54,773 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:38:54,774 | INFO: 127.0.0.1 - - [05/Jul/2023 05:38:54] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-05 05:38:54,800 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:38:54,800 | DEBUG: Data: None
2023-07-05 05:38:54,800 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:38:54,904 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2528
2023-07-05 05:38:54,905 | DEBUG: Response: 200 (2528 bytes)
2023-07-05 05:38:54,905 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:38:54,905 | DEBUG: Data: None
2023-07-05 05:38:54,905 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:38:55,092 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2527
2023-07-05 05:38:55,093 | DEBUG: Response: 200 (2527 bytes)
2023-07-05 05:38:55,094 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:38:55,094 | DEBUG: Data: None
2023-07-05 05:38:55,094 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:38:55,241 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3995
2023-07-05 05:38:55,244 | DEBUG: Response: 200 (3995 bytes)
2023-07-05 05:38:55,246 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:38:55,246 | DEBUG: Data: None
2023-07-05 05:38:55,246 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:38:55,417 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3995
2023-07-05 05:38:55,418 | DEBUG: Response: 200 (3995 bytes)
2023-07-05 05:38:55,419 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:38:55,420 | DEBUG: Data: None
2023-07-05 05:38:55,420 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:38:55,751 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5822
2023-07-05 05:38:55,752 | DEBUG: Response: 200 (5822 bytes)
2023-07-05 05:38:55,753 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:38:55,753 | DEBUG: Data: None
2023-07-05 05:38:55,753 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:38:56,001 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5828
2023-07-05 05:38:56,004 | DEBUG: Response: 200 (5828 bytes)
2023-07-05 05:38:56,005 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:38:56,005 | DEBUG: Data: None
2023-07-05 05:38:56,005 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:38:56,190 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8812
2023-07-05 05:38:56,192 | DEBUG: Response: 200 (8812 bytes)
2023-07-05 05:38:56,195 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:38:56,195 | DEBUG: Data: None
2023-07-05 05:38:56,195 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:38:56,467 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8814
2023-07-05 05:38:56,471 | DEBUG: Response: 200 (8814 bytes)
2023-07-05 05:38:56,474 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:38:56,474 | DEBUG: Data: None
2023-07-05 05:38:56,474 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:38:56,968 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14038
2023-07-05 05:38:56,972 | DEBUG: Response: 200 (14038 bytes)
2023-07-05 05:38:56,977 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:38:56,977 | DEBUG: Data: None
2023-07-05 05:38:56,977 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:38:57,028 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14038
2023-07-05 05:38:57,037 | DEBUG: Response: 200 (14038 bytes)
2023-07-05 05:38:57,042 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:38:57,042 | DEBUG: Data: None
2023-07-05 05:38:57,042 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:38:57,306 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4408
2023-07-05 05:38:57,307 | DEBUG: Response: 200 (4408 bytes)
2023-07-05 05:38:57,309 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:38:57,309 | DEBUG: Data: None
2023-07-05 05:38:57,309 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:38:57,386 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4408
2023-07-05 05:38:57,387 | DEBUG: Response: 200 (4408 bytes)
2023-07-05 05:38:57,389 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:38:57,389 | DEBUG: Data: None
2023-07-05 05:38:57,389 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:38:57,651 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3987
2023-07-05 05:38:57,652 | DEBUG: Response: 200 (3987 bytes)
2023-07-05 05:38:57,653 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:38:57,653 | DEBUG: Data: None
2023-07-05 05:38:57,653 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:38:57,776 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3994
2023-07-05 05:38:57,779 | DEBUG: Response: 200 (3994 bytes)
2023-07-05 05:38:57,780 | INFO: 127.0.0.1 - - [05/Jul/2023 05:38:57] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-05 05:38:58,002 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:38:58,002 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:38:58,003 | INFO: 127.0.0.1 - - [05/Jul/2023 05:38:58] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:39:08,717 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:39:08,717 | DEBUG: Data: None
2023-07-05 05:39:08,717 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:39:09,028 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2528
2023-07-05 05:39:09,029 | DEBUG: Response: 200 (2528 bytes)
2023-07-05 05:39:09,029 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:39:09,030 | DEBUG: Data: None
2023-07-05 05:39:09,030 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:39:09,362 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3993
2023-07-05 05:39:09,362 | DEBUG: Response: 200 (3993 bytes)
2023-07-05 05:39:09,364 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:39:09,364 | DEBUG: Data: None
2023-07-05 05:39:09,364 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:39:09,746 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5823
2023-07-05 05:39:09,748 | DEBUG: Response: 200 (5823 bytes)
2023-07-05 05:39:09,750 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:39:09,750 | DEBUG: Data: None
2023-07-05 05:39:09,750 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:39:10,216 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8813
2023-07-05 05:39:10,219 | DEBUG: Response: 200 (8813 bytes)
2023-07-05 05:39:10,222 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:39:10,222 | DEBUG: Data: None
2023-07-05 05:39:10,222 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:39:10,816 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14037
2023-07-05 05:39:11,010 | DEBUG: Response: 200 (14037 bytes)
2023-07-05 05:39:11,016 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:39:11,016 | DEBUG: Data: None
2023-07-05 05:39:11,016 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:39:11,347 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4410
2023-07-05 05:39:11,348 | DEBUG: Response: 200 (4410 bytes)
2023-07-05 05:39:11,349 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:39:11,349 | DEBUG: Data: None
2023-07-05 05:39:11,349 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:39:11,682 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3993
2023-07-05 05:39:11,683 | DEBUG: Response: 200 (3993 bytes)
2023-07-05 05:39:11,684 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:39:11,684 | DEBUG: Data: None
2023-07-05 05:39:11,684 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:39:11,960 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:39:11,961 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:39:11,961 | INFO: 127.0.0.1 - - [05/Jul/2023 05:39:11] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:39:21,834 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:39:21,835 | DEBUG: Data: None
2023-07-05 05:39:21,835 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:39:22,136 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2526
2023-07-05 05:39:22,137 | DEBUG: Response: 200 (2526 bytes)
2023-07-05 05:39:22,137 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:39:22,137 | DEBUG: Data: None
2023-07-05 05:39:22,138 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:39:22,452 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3986
2023-07-05 05:39:22,454 | DEBUG: Response: 200 (3986 bytes)
2023-07-05 05:39:22,455 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:39:22,455 | DEBUG: Data: None
2023-07-05 05:39:22,455 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:39:22,818 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5823
2023-07-05 05:39:22,819 | DEBUG: Response: 200 (5823 bytes)
2023-07-05 05:39:22,821 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:39:22,822 | DEBUG: Data: None
2023-07-05 05:39:22,822 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:39:23,313 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8828
2023-07-05 05:39:23,314 | DEBUG: Response: 200 (8828 bytes)
2023-07-05 05:39:23,317 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:39:23,317 | DEBUG: Data: None
2023-07-05 05:39:23,317 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:39:23,870 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14041
2023-07-05 05:39:24,095 | DEBUG: Response: 200 (14041 bytes)
2023-07-05 05:39:24,103 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:39:24,103 | DEBUG: Data: None
2023-07-05 05:39:24,103 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:39:24,453 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4410
2023-07-05 05:39:24,454 | DEBUG: Response: 200 (4410 bytes)
2023-07-05 05:39:24,455 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:39:24,455 | DEBUG: Data: None
2023-07-05 05:39:24,456 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:39:24,814 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3992
2023-07-05 05:39:24,815 | DEBUG: Response: 200 (3992 bytes)
2023-07-05 05:39:24,816 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:39:24,816 | DEBUG: Data: None
2023-07-05 05:39:24,816 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:39:25,102 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:39:25,102 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:39:25,103 | INFO: 127.0.0.1 - - [05/Jul/2023 05:39:25] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:39:45,063 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:39:45,063 | DEBUG: Data: None
2023-07-05 05:39:45,063 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:39:45,140 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:39:45,140 | DEBUG: Data: None
2023-07-05 05:39:45,140 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:39:45,290 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:39:45,290 | DEBUG: Data: None
2023-07-05 05:39:45,290 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:39:45,291 | DEBUG: Resetting dropped connection: oauth.reddit.com
2023-07-05 05:39:45,333 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:39:45,335 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:39:45,339 | INFO: 127.0.0.1 - - [05/Jul/2023 05:39:45] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-05 05:39:45,457 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2529
2023-07-05 05:39:45,473 | DEBUG: Response: 200 (2529 bytes)
2023-07-05 05:39:45,474 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:39:45,474 | DEBUG: Data: None
2023-07-05 05:39:45,474 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:39:45,694 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2529
2023-07-05 05:39:45,694 | DEBUG: Response: 200 (2529 bytes)
2023-07-05 05:39:45,695 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:39:45,695 | DEBUG: Data: None
2023-07-05 05:39:45,695 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:39:45,813 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3992
2023-07-05 05:39:45,821 | DEBUG: Response: 200 (3992 bytes)
2023-07-05 05:39:45,822 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:39:45,822 | DEBUG: Data: None
2023-07-05 05:39:45,822 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:39:46,045 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3984
2023-07-05 05:39:46,047 | DEBUG: Response: 200 (3984 bytes)
2023-07-05 05:39:46,048 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:39:46,048 | DEBUG: Data: None
2023-07-05 05:39:46,048 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:39:46,209 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5825
2023-07-05 05:39:46,217 | DEBUG: Response: 200 (5825 bytes)
2023-07-05 05:39:46,219 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:39:46,219 | DEBUG: Data: None
2023-07-05 05:39:46,219 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:39:46,414 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5820
2023-07-05 05:39:46,415 | DEBUG: Response: 200 (5820 bytes)
2023-07-05 05:39:46,416 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 05:39:46,416 | DEBUG: Data: None
2023-07-05 05:39:46,416 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:39:46,711 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8825
2023-07-05 05:39:46,720 | DEBUG: Response: 200 (8825 bytes)
2023-07-05 05:39:46,723 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:39:46,723 | DEBUG: Data: None
2023-07-05 05:39:46,723 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:39:46,850 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 8813
2023-07-05 05:39:46,852 | DEBUG: Response: 200 (8813 bytes)
2023-07-05 05:39:46,855 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 05:39:46,855 | DEBUG: Data: None
2023-07-05 05:39:46,855 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:39:47,404 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14044
2023-07-05 05:39:47,602 | DEBUG: Response: 200 (14044 bytes)
2023-07-05 05:39:47,608 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:39:47,608 | DEBUG: Data: None
2023-07-05 05:39:47,608 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:39:47,772 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14039
2023-07-05 05:39:47,785 | DEBUG: Response: 200 (14039 bytes)
2023-07-05 05:39:47,790 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 05:39:47,791 | DEBUG: Data: None
2023-07-05 05:39:47,791 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:39:47,962 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4405
2023-07-05 05:39:47,963 | DEBUG: Response: 200 (4405 bytes)
2023-07-05 05:39:47,964 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:39:47,965 | DEBUG: Data: None
2023-07-05 05:39:47,965 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:39:48,122 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4406
2023-07-05 05:39:48,125 | DEBUG: Response: 200 (4406 bytes)
2023-07-05 05:39:48,126 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 05:39:48,126 | DEBUG: Data: None
2023-07-05 05:39:48,126 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 05:39:48,313 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3992
2023-07-05 05:39:48,314 | DEBUG: Response: 200 (3992 bytes)
2023-07-05 05:39:48,315 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 05:39:48,315 | DEBUG: Data: None
2023-07-05 05:39:48,315 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 05:39:48,452 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 3993
2023-07-05 05:39:48,454 | DEBUG: Response: 200 (3993 bytes)
2023-07-05 05:39:48,455 | INFO: 127.0.0.1 - - [05/Jul/2023 05:39:48] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-05 05:39:48,606 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 05:39:48,606 | DEBUG: Response: 200 (136 bytes)
2023-07-05 05:39:48,607 | INFO: 127.0.0.1 - - [05/Jul/2023 05:39:48] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 05:49:03,084 | INFO: 127.0.0.1 - - [05/Jul/2023 05:49:03] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 05:49:03,390 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 05:49:03,586 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688516343&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 05:49:03,852 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 05:49:04,414 | DEBUG: TBB already found in load path
2023-07-05 05:49:04,721 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\x8ue8dgm.json
2023-07-05 05:49:07,465 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\5anao6jc.json
2023-07-05 05:49:07,467 | DEBUG: idx 0
2023-07-05 05:49:07,467 | DEBUG: running CmdStan, num_threads: None
2023-07-05 05:49:07,467 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=22766', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\x8ue8dgm.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\5anao6jc.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\prophet_modelugksm6r8\\prophet_model-20230705054907.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 05:49:07,467 | INFO: Chain [1] start processing
2023-07-05 05:49:25,029 | INFO: Chain [1] done processing
2023-07-05 05:49:26,344 | INFO: 127.0.0.1 - - [05/Jul/2023 05:49:26] "POST /forecast HTTP/1.1" 200 -
2023-07-05 06:02:09,022 | INFO: 127.0.0.1 - - [05/Jul/2023 06:02:09] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 06:02:09,232 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 06:02:09,591 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688517129&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 06:02:09,914 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 06:02:10,086 | DEBUG: TBB already found in load path
2023-07-05 06:02:10,330 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\q6rznid4.json
2023-07-05 06:02:14,422 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\1p76p9u7.json
2023-07-05 06:02:14,436 | DEBUG: idx 0
2023-07-05 06:02:14,437 | DEBUG: running CmdStan, num_threads: None
2023-07-05 06:02:14,437 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=90908', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\q6rznid4.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\1p76p9u7.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\prophet_modelfp51olle\\prophet_model-20230705060214.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 06:02:14,437 | INFO: Chain [1] start processing
2023-07-05 06:02:43,652 | INFO: Chain [1] done processing
2023-07-05 06:02:47,038 | INFO: 127.0.0.1 - - [05/Jul/2023 06:02:47] "POST /forecast HTTP/1.1" 200 -
2023-07-05 06:03:58,642 | INFO: 127.0.0.1 - - [05/Jul/2023 06:03:58] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 06:03:58,910 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 06:03:59,165 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688517238&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 06:03:59,392 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 06:03:59,483 | DEBUG: TBB already found in load path
2023-07-05 06:03:59,676 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\v8rtyfdo.json
2023-07-05 06:04:02,732 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\f9w4p_so.json
2023-07-05 06:04:02,734 | DEBUG: idx 0
2023-07-05 06:04:02,734 | DEBUG: running CmdStan, num_threads: None
2023-07-05 06:04:02,734 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=86902', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\v8rtyfdo.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\f9w4p_so.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\prophet_modelpvpjntsk\\prophet_model-20230705060402.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 06:04:02,734 | INFO: Chain [1] start processing
2023-07-05 06:04:32,065 | INFO: Chain [1] done processing
2023-07-05 06:04:34,395 | INFO: 127.0.0.1 - - [05/Jul/2023 06:04:34] "POST /forecast HTTP/1.1" 200 -
2023-07-05 06:09:17,428 | INFO: 127.0.0.1 - - [05/Jul/2023 06:09:17] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 06:09:17,682 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 06:09:18,000 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688517557&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 06:09:18,225 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 06:09:18,339 | DEBUG: TBB already found in load path
2023-07-05 06:09:18,525 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\1sjm4ng0.json
2023-07-05 06:09:21,570 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\xl18ds4o.json
2023-07-05 06:09:21,572 | DEBUG: idx 0
2023-07-05 06:09:21,572 | DEBUG: running CmdStan, num_threads: None
2023-07-05 06:09:21,572 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=76489', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\1sjm4ng0.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\xl18ds4o.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\prophet_modeladshp4ue\\prophet_model-20230705060921.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 06:09:21,572 | INFO: Chain [1] start processing
2023-07-05 06:09:55,210 | INFO: Chain [1] done processing
2023-07-05 06:09:56,760 | INFO: 127.0.0.1 - - [05/Jul/2023 06:09:56] "POST /forecast HTTP/1.1" 200 -
2023-07-05 06:10:07,127 | INFO: 127.0.0.1 - - [05/Jul/2023 06:10:07] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 06:10:07,453 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 06:10:07,612 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688517607&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 06:10:07,881 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 06:10:08,004 | DEBUG: TBB already found in load path
2023-07-05 06:10:08,244 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\8kv2d1ry.json
2023-07-05 06:10:11,556 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\kkpxz6z6.json
2023-07-05 06:10:11,558 | DEBUG: idx 0
2023-07-05 06:10:11,559 | DEBUG: running CmdStan, num_threads: None
2023-07-05 06:10:11,559 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=98542', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\8kv2d1ry.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\kkpxz6z6.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\prophet_modeli267hbr8\\prophet_model-20230705061011.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 06:10:11,559 | INFO: Chain [1] start processing
2023-07-05 06:10:38,893 | INFO: Chain [1] done processing
2023-07-05 06:10:40,943 | INFO: 127.0.0.1 - - [05/Jul/2023 06:10:40] "POST /forecast HTTP/1.1" 200 -
2023-07-05 06:11:59,469 | INFO: 127.0.0.1 - - [05/Jul/2023 06:11:59] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 06:11:59,739 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 06:12:00,244 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688517719&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 06:12:00,560 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 06:12:00,687 | DEBUG: TBB already found in load path
2023-07-05 06:12:00,865 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\ish9p14k.json
2023-07-05 06:12:04,001 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\n6s_7iz4.json
2023-07-05 06:12:04,003 | DEBUG: idx 0
2023-07-05 06:12:04,004 | DEBUG: running CmdStan, num_threads: None
2023-07-05 06:12:04,004 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=25211', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\ish9p14k.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\n6s_7iz4.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\prophet_modelzvirn17u\\prophet_model-20230705061204.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 06:12:04,004 | INFO: Chain [1] start processing
2023-07-05 06:12:29,140 | INFO: Chain [1] done processing
2023-07-05 06:12:30,747 | INFO: 127.0.0.1 - - [05/Jul/2023 06:12:30] "POST /forecast HTTP/1.1" 200 -
2023-07-05 06:13:24,232 | INFO: 127.0.0.1 - - [05/Jul/2023 06:13:24] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 06:13:24,500 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 06:13:24,705 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688517804&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 06:13:24,941 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 06:13:25,043 | DEBUG: TBB already found in load path
2023-07-05 06:13:25,221 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\lrmfhx64.json
2023-07-05 06:13:28,397 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\smu2rk87.json
2023-07-05 06:13:28,398 | DEBUG: idx 0
2023-07-05 06:13:28,398 | DEBUG: running CmdStan, num_threads: None
2023-07-05 06:13:28,399 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=9796', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\lrmfhx64.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\smu2rk87.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\prophet_modeli8n58xbq\\prophet_model-20230705061328.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 06:13:28,399 | INFO: Chain [1] start processing
2023-07-05 06:14:03,545 | INFO: Chain [1] done processing
2023-07-05 06:14:06,279 | INFO: 127.0.0.1 - - [05/Jul/2023 06:14:06] "POST /forecast HTTP/1.1" 200 -
2023-07-05 06:18:43,249 | INFO: 127.0.0.1 - - [05/Jul/2023 06:18:43] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 06:18:43,522 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 06:18:43,650 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TSLA?period1=-631159200&period2=1688518123&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 06:18:43,864 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 06:18:43,971 | DEBUG: TBB already found in load path
2023-07-05 06:18:44,157 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\_7_j5mwd.json
2023-07-05 06:18:46,036 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\8qyb0krg.json
2023-07-05 06:18:46,037 | DEBUG: idx 0
2023-07-05 06:18:46,037 | DEBUG: running CmdStan, num_threads: None
2023-07-05 06:18:46,037 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=23830', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\_7_j5mwd.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\8qyb0krg.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\prophet_modelbi9s86a6\\prophet_model-20230705061846.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 06:18:46,037 | INFO: Chain [1] start processing
2023-07-05 06:18:58,740 | INFO: Chain [1] done processing
2023-07-05 06:18:59,810 | INFO: 127.0.0.1 - - [05/Jul/2023 06:18:59] "POST /forecast HTTP/1.1" 200 -
2023-07-05 06:23:01,107 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 06:23:01,296 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688518381&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 06:23:01,542 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 06:23:01,669 | DEBUG: TBB already found in load path
2023-07-05 06:23:01,812 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\_dmiucq7.json
2023-07-05 06:23:02,872 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpxohex_0t\lsukvefz.json
2023-07-05 06:23:02,873 | DEBUG: idx 0
2023-07-05 06:23:02,873 | DEBUG: running CmdStan, num_threads: None
2023-07-05 06:23:02,873 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=59768', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\_dmiucq7.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\lsukvefz.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpxohex_0t\\prophet_modelw82scfxx\\prophet_model-20230705062302.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 06:23:02,873 | INFO: Chain [1] start processing
2023-07-05 06:23:11,977 | INFO: Chain [1] done processing
2023-07-05 06:23:15,302 | INFO: 127.0.0.1 - - [05/Jul/2023 06:23:15] "POST /forecast HTTP/1.1" 200 -
2023-07-05 06:23:33,449 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 06:23:33,455 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 06:23:33,456 | DEBUG: interactive is False
2023-07-05 06:23:33,456 | DEBUG: platform is win32
2023-07-05 06:23:33,456 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'shlex', 'netrc', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 06:23:33,553 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 06:23:33,557 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 06:23:34,121 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 06:23:34,121 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 06:23:34,152 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 06:23:34,152 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 06:23:36,014 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 06:23:36,174 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688518416&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 06:23:36,740 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 06:23:36,857 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 06:23:37,249 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpobcqhktw\fx4_3qu0.json
2023-07-05 06:23:38,315 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpobcqhktw\an2h1d4s.json
2023-07-05 06:23:38,318 | DEBUG: idx 0
2023-07-05 06:23:38,318 | DEBUG: running CmdStan, num_threads: None
2023-07-05 06:23:38,318 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=75681', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpobcqhktw\\fx4_3qu0.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpobcqhktw\\an2h1d4s.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpobcqhktw\\prophet_modelg1vh8712\\prophet_model-20230705062338.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 06:23:38,318 | INFO: Chain [1] start processing
2023-07-05 06:23:50,176 | INFO: Chain [1] done processing
2023-07-05 06:23:52,352 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 47, in getForecast
    data = pd.merge(forecast,data,on='ds',how='left')
UnboundLocalError: local variable 'data' referenced before assignment
2023-07-05 06:23:52,367 | INFO: 127.0.0.1 - - [05/Jul/2023 06:23:52] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 06:24:37,885 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 06:24:37,888 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 06:24:37,889 | DEBUG: interactive is False
2023-07-05 06:24:37,889 | DEBUG: platform is win32
2023-07-05 06:24:37,890 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 06:24:37,972 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 06:24:37,975 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 06:24:38,376 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 06:24:38,376 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 06:24:38,397 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 06:24:38,397 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 06:24:41,239 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 06:24:41,885 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688518481&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 06:24:42,264 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 06:24:42,362 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 06:24:42,599 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmprso5i0fp\vgh3c4bd.json
2023-07-05 06:24:43,673 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmprso5i0fp\34_v_671.json
2023-07-05 06:24:43,675 | DEBUG: idx 0
2023-07-05 06:24:43,675 | DEBUG: running CmdStan, num_threads: None
2023-07-05 06:24:43,675 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=71003', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmprso5i0fp\\vgh3c4bd.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmprso5i0fp\\34_v_671.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmprso5i0fp\\prophet_model5d2g3cga\\prophet_model-20230705062443.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 06:24:43,675 | INFO: Chain [1] start processing
2023-07-05 06:24:53,472 | INFO: Chain [1] done processing
2023-07-05 06:24:55,245 | ERROR: Exception on /forecast [POST]
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\flask\app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Python310\lib\site-packages\flask\app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 489, in wrapper
    resp = resource(*args, **kwargs)
  File "C:\Python310\lib\site-packages\flask\views.py", line 107, in view
    return current_app.ensure_sync(self.dispatch_request)(**kwargs)
  File "C:\Python310\lib\site-packages\flask_restful\__init__.py", line 604, in dispatch_request
    resp = meth(*args, **kwargs)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\app.py", line 90, in post
    return forecast.getForecast(tick,metric,CPS,DFO,HPS,MFO,QFO,SM,SPS,WFO,YFO)
  File "D:\Resume Projects 2023\stock-predictor\Backend\api\forecast.py", line 47, in getForecast
    data = pd.merge(forecast,df,on='ds',how='left')
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\reshape\merge.py", line 106, in merge
    op = _MergeOperation(
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\reshape\merge.py", line 703, in __init__
    self._maybe_coerce_merge_keys()
  File "C:\Users\Rhutik\AppData\Roaming\Python\Python310\site-packages\pandas\core\reshape\merge.py", line 1260, in _maybe_coerce_merge_keys
    raise ValueError(msg)
ValueError: You are trying to merge on datetime64[ns] and object columns. If you wish to proceed you should use pd.concat
2023-07-05 06:24:55,252 | INFO: 127.0.0.1 - - [05/Jul/2023 06:24:55] "[35m[1mPOST /forecast HTTP/1.1[0m" 500 -
2023-07-05 06:37:28,154 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 06:37:28,158 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 06:37:28,159 | DEBUG: interactive is False
2023-07-05 06:37:28,159 | DEBUG: platform is win32
2023-07-05 06:37:28,159 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 06:37:28,261 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 06:37:28,264 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 06:37:28,717 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 06:37:28,718 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 06:37:28,760 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 06:37:28,760 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 06:37:32,311 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 06:37:32,668 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688519252&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 06:37:33,063 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 06:37:33,176 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 06:37:33,455 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp94wh1sy9\qpn6phek.json
2023-07-05 06:37:34,520 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp94wh1sy9\3r54zjr2.json
2023-07-05 06:37:34,524 | DEBUG: idx 0
2023-07-05 06:37:34,525 | DEBUG: running CmdStan, num_threads: None
2023-07-05 06:37:34,525 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=27379', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp94wh1sy9\\qpn6phek.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp94wh1sy9\\3r54zjr2.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp94wh1sy9\\prophet_modelzna_rccz\\prophet_model-20230705063734.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 06:37:34,525 | INFO: Chain [1] start processing
2023-07-05 06:37:44,467 | INFO: Chain [1] done processing
2023-07-05 06:37:46,476 | INFO: 127.0.0.1 - - [05/Jul/2023 06:37:46] "POST /forecast HTTP/1.1" 200 -
2023-07-05 06:38:02,472 | INFO: 127.0.0.1 - - [05/Jul/2023 06:38:02] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 06:38:02,746 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 06:38:02,870 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688519282&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 06:38:03,099 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 06:38:03,199 | DEBUG: TBB already found in load path
2023-07-05 06:38:03,437 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp94wh1sy9\fp5sk2b6.json
2023-07-05 06:38:06,595 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmp94wh1sy9\k3knx_w2.json
2023-07-05 06:38:06,597 | DEBUG: idx 0
2023-07-05 06:38:06,598 | DEBUG: running CmdStan, num_threads: None
2023-07-05 06:38:06,598 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=10975', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp94wh1sy9\\fp5sk2b6.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp94wh1sy9\\k3knx_w2.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmp94wh1sy9\\prophet_modeloedpwqs5\\prophet_model-20230705063806.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 06:38:06,598 | INFO: Chain [1] start processing
2023-07-05 06:38:29,354 | INFO: Chain [1] done processing
2023-07-05 06:38:31,072 | INFO: 127.0.0.1 - - [05/Jul/2023 06:38:31] "POST /forecast HTTP/1.1" 200 -
2023-07-05 06:41:34,043 | DEBUG: matplotlib data path: C:\Python310\lib\site-packages\matplotlib\mpl-data
2023-07-05 06:41:34,046 | DEBUG: CONFIGDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 06:41:34,048 | DEBUG: interactive is False
2023-07-05 06:41:34,048 | DEBUG: platform is win32
2023-07-05 06:41:34,048 | DEBUG: loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib._abc', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'importlib.machinery', 'google', 'google.cloud', 'google.iam', 'ruamel', 'google.logging', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', '_locale', 'copyreg', 're', '_string', 'string', 'collections.abc', 'typing.io', 'typing.re', 'typing', 'markupsafe._speedups', 'markupsafe', '__future__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'posixpath', 'fnmatch', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'math', '_bisect', 'bisect', '_random', '_sha512', 'random', '_weakrefset', 'weakref', 'tempfile', '_hashlib', '_blake2', 'hashlib', 'jinja2.bccache', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'threading', 'urllib', 'urllib.parse', 'jinja2.utils', 'jinja2.nodes', 'jinja2.exceptions', 'jinja2.visitor', 'jinja2.idtracking', 'jinja2.optimizer', 'jinja2.compiler', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.filters', 'numbers', 'jinja2.tests', 'jinja2.defaults', 'jinja2._identifier', 'jinja2.lexer', 'jinja2.parser', 'jinja2.environment', 'jinja2.loaders', 'jinja2', '_contextvars', 'contextvars', '_socket', 'select', 'selectors', 'socket', 'socketserver', '_datetime', 'datetime', 'http', 'copy', 'email', 'locale', 'calendar', 'email._parseaddr', 'binascii', 'base64', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'html.entities', 'html', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', '_ssl', 'ssl', 'http.client', '_winapi', 'mimetypes', 'http.server', 'traceback', 'atexit', 'logging', 'werkzeug._internal', 'werkzeug.exceptions', 'werkzeug.urls', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'werkzeug.serving', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'werkzeug.sansio', 'werkzeug.sansio.http', 'werkzeug.http', 'werkzeug.datastructures', 'dataclasses', 'werkzeug.sansio.multipart', 'pkgutil', 'unicodedata', 'hmac', 'secrets', 'werkzeug.security', 'werkzeug.sansio.utils', 'werkzeug.wsgi', 'werkzeug.utils', 'werkzeug.formparser', 'werkzeug.user_agent', 'werkzeug.sansio.request', 'werkzeug.wrappers.request', 'werkzeug.sansio.response', 'werkzeug.wrappers.response', 'werkzeug.wrappers', 'werkzeug.test', 'werkzeug', 'werkzeug.local', 'flask.globals', '_decimal', 'decimal', '_uuid', 'uuid', 'flask.json.provider', 'flask.json', 'gettext', 'msvcrt', 'click._winconsole', 'click._compat', 'click.globals', 'click.utils', 'click.exceptions', 'click.types', 'click._unicodefun', 'click.parser', 'click.formatting', 'click.termui', 'click.core', 'click.decorators', 'click', 'werkzeug.routing.converters', '_heapq', 'heapq', 'difflib', 'werkzeug.routing.exceptions', 'pprint', 'werkzeug.routing.rules', 'werkzeug.routing.matcher', 'werkzeug.routing.map', 'werkzeug.routing', 'signal', 'subprocess', 'platform', 'blinker._saferef', 'blinker._utilities', 'blinker.base', 'blinker', 'flask.signals', 'flask.helpers', 'flask.cli', 'flask.typing', 'flask.config', 'flask.ctx', 'flask.logging', 'pathlib', 'flask.templating', 'flask.scaffold', 'itsdangerous.exc', 'itsdangerous.encoding', 'itsdangerous.signer', 'itsdangerous.serializer', 'itsdangerous.timed', 'itsdangerous._json', 'itsdangerous.url_safe', 'itsdangerous', 'flask.json.tag', 'flask.sessions', 'flask.wrappers', 'flask.app', 'flask.blueprints', 'flask', 'flask_cors.core', 'flask_cors.decorator', 'flask_cors.extension', 'flask_cors.version', 'flask_cors', 'flask.views', 'flask_restful.utils', 'flask_restful.representations', 'flask_restful.representations.json', 'flask_restful', 'six', 'flask_restful.reqparse', 'zipfile', 'xml', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'apscheduler', 'apscheduler.schedulers', 'pytz_deprecation_shim._common', 'zoneinfo._tzpath', 'zoneinfo._common', '_zoneinfo', 'zoneinfo', 'pytz_deprecation_shim._compat_py3', 'pytz_deprecation_shim._compat', 'pytz_deprecation_shim._exceptions', 'pytz_deprecation_shim._impl', 'pytz_deprecation_shim.helpers', 'pytz_deprecation_shim', 'tzlocal.windows_tz', 'tzlocal.utils', 'tzlocal.win32', 'tzlocal', 'apscheduler.executors', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'apscheduler.events', 'apscheduler.executors.base', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_queue', 'queue', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_multiprocessing', 'multiprocessing.util', 'multiprocessing.connection', 'multiprocessing.queues', 'concurrent.futures.process', 'apscheduler.executors.pool', 'apscheduler.jobstores', 'apscheduler.jobstores.base', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.mixins', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'apscheduler.util', 'apscheduler.jobstores.memory', 'apscheduler.triggers', 'apscheduler.triggers.base', 'apscheduler.job', 'apscheduler.schedulers.base', 'apscheduler.schedulers.blocking', 'apscheduler.schedulers.background', 'dotenv.parser', 'dotenv.variables', 'dotenv.main', 'dotenv', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'yahoo_finance.yql', 'yahoo_finance', 'praw.endpoints', 'praw.const', 'configparser', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib.abc', 'importlib._adapters', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'importlib.readers', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'prawcore.const', 'prawcore.exceptions', 'prawcore.auth', 'prawcore.requestor', 'prawcore.rate_limit', 'prawcore.util', 'prawcore.sessions', 'prawcore', 'praw.util.cache', 'praw.util.deprecate_args', 'praw.util.snake', 'praw.util', 'praw.exceptions', 'praw.models.base', 'praw.models.auth', 'praw.models.listing', 'praw.models.listing.listing', 'praw.models.listing.generator', 'praw.models.listing.mixins.base', 'praw.models.listing.mixins.gilded', 'praw.models.listing.mixins.redditor', 'praw.models.listing.mixins.rising', 'praw.models.listing.mixins.submission', 'praw.models.listing.mixins.subreddit', 'praw.models.listing.mixins', 'praw.models.front', 'praw.models.reddit', 'praw.models.reddit.base', '_csv', 'csv', 'xml.etree', 'xml.etree.ElementPath', 'array', 'websocket._exceptions', 'websocket._utils', 'websocket._abnf', 'websocket._logging', 'websocket._url', 'websocket._cookiejar', 'websocket._ssl_compat', 'websocket._socket', 'websocket._http', 'websocket._handshake', 'websocket._core', 'websocket._app', 'websocket', 'praw.models.util', 'praw.models.reddit.emoji', 'praw.models.reddit.mixins.editable', 'praw.models.reddit.mixins.fullname', 'praw.models.reddit.mixins.gildable', 'praw.models.reddit.mixins.inboxable', 'praw.models.reddit.mixins.inboxtoggleable', 'praw.models.reddit.mixins.messageable', 'praw.models.reddit.mixins.modnote', 'praw.models.reddit.mixins.replyable', 'praw.models.reddit.mixins.reportable', 'praw.models.reddit.mixins.savable', 'praw.models.reddit.mixins.votable', 'praw.models.reddit.mixins', 'praw.models.reddit.modmail', 'praw.models.reddit.removal_reasons', 'praw.models.reddit.rules', 'praw.models.list', 'praw.models.list.base', 'praw.models.reddit.widgets', 'praw.models.reddit.redditor', 'praw.models.reddit.wikipage', 'praw.models.reddit.subreddit', 'praw.models.reddit.user_subreddit', 'praw.models.reddit.draft', 'praw.models.list.redditor', 'praw.models.reddit.live', 'praw.models.reddit.multi', 'praw.models.helpers', 'praw.models.inbox', 'praw.models.list.draft', 'praw.models.list.moderated', 'praw.models.list.trophy', 'praw.models.listing.domain', 'praw.models.mod_action', 'praw.models.mod_note', 'praw.models.reddit.more', 'praw.models.comment_forest', 'praw.models.reddit.comment', 'praw.models.reddit.poll', 'praw.models.reddit.submission', 'praw.models.mod_notes', 'praw.models.preferences', 'praw.models.reddit.collections', 'praw.models.reddit.inline_media', 'praw.models.reddit.message', 'praw.models.redditors', 'praw.models.stylesheet', 'praw.models.subreddits', 'praw.models.trophy', 'praw.models.user', 'praw.models', 'praw.config', 'praw.objector', 'praw.util.token_manager', 'update_checker', 'praw.reddit', 'praw', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'glob', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'dateutil._version', 'dateutil', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'gc', 'pyarrow._generated_version', '_cython_0_29_26', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pydoc', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'redditbot', 'tzdata', 'tzdata.zoneinfo', 'tzdata.zoneinfo.Asia', 'stream', 'forecast', 'yfinance.version', 'ujson', 'yfinance.utils', 'yfinance.shared', 'yfinance.base', 'yfinance.ticker', 'multitasking', 'yfinance.multi', 'yfinance.tickers', 'yfinance', 'prophet', 'prophet.forecaster', 'numpy.typing._nbit', 'numpy.typing._char_codes', 'numpy.typing._scalars', 'numpy.typing._shape', 'numpy.typing._dtype_like', 'numpy.typing._array_like', 'numpy.typing._generic_alias', 'numpy.typing._add_docstring', 'numpy.typing', 'holidays.constants', 'holidays.helpers', 'holidays.holiday_base', 'holidays.registry', 'holidays.utils', 'holidays', 'prophet.make_holidays', 'importlib_resources._compat', 'importlib_resources.abc', 'importlib_resources._common', 'importlib_resources._legacy', 'importlib_resources', 'prophet.models', 'prophet.plot', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'prophet.diagnostics', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-07-05 06:41:34,134 | DEBUG: CACHEDIR=C:\Users\Rhutik\.matplotlib
2023-07-05 06:41:34,137 | DEBUG: Using fontManager instance from C:\Users\Rhutik\.matplotlib\fontlist-v330.json
2023-07-05 06:41:34,545 | DEBUG: Loaded backend qtagg version unknown.
2023-07-05 06:41:34,545 | DEBUG: Loaded backend QtAgg version unknown.
2023-07-05 06:41:34,571 | INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2023-07-05 06:41:34,571 | INFO: [33mPress CTRL+C to quit[0m
2023-07-05 06:42:01,895 | INFO: 127.0.0.1 - - [05/Jul/2023 06:42:01] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 06:42:02,167 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 06:42:02,570 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688519522&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 06:42:02,942 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 06:42:03,032 | DEBUG: Adding TBB (C:\Python310\lib\site-packages\prophet\stan_model\cmdstan-2.31.0\stan\lib\stan_math\lib\tbb) to PATH
2023-07-05 06:42:03,355 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpt42chos6\khq66gl9.json
2023-07-05 06:42:06,379 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpt42chos6\e11o78zu.json
2023-07-05 06:42:06,381 | DEBUG: idx 0
2023-07-05 06:42:06,381 | DEBUG: running CmdStan, num_threads: None
2023-07-05 06:42:06,382 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=79455', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpt42chos6\\khq66gl9.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpt42chos6\\e11o78zu.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpt42chos6\\prophet_modell1x7eauf\\prophet_model-20230705064206.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 06:42:06,382 | INFO: Chain [1] start processing
2023-07-05 06:42:24,909 | INFO: Chain [1] done processing
2023-07-05 06:42:26,936 | INFO: 127.0.0.1 - - [05/Jul/2023 06:42:26] "POST /forecast HTTP/1.1" 200 -
2023-07-05 06:45:33,372 | INFO: 127.0.0.1 - - [05/Jul/2023 06:45:33] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 06:45:33,650 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 06:45:33,946 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688519733&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 06:45:34,196 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 06:45:34,354 | DEBUG: TBB already found in load path
2023-07-05 06:45:34,627 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpt42chos6\hsbotgxo.json
2023-07-05 06:45:38,568 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpt42chos6\0wnef2er.json
2023-07-05 06:45:38,571 | DEBUG: idx 0
2023-07-05 06:45:38,571 | DEBUG: running CmdStan, num_threads: None
2023-07-05 06:45:38,571 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=11141', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpt42chos6\\hsbotgxo.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpt42chos6\\0wnef2er.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpt42chos6\\prophet_modellga9e_nz\\prophet_model-20230705064538.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 06:45:38,571 | INFO: Chain [1] start processing
2023-07-05 06:46:03,074 | INFO: Chain [1] done processing
2023-07-05 06:46:05,217 | INFO: 127.0.0.1 - - [05/Jul/2023 06:46:05] "POST /forecast HTTP/1.1" 200 -
2023-07-05 06:49:45,559 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:49:45,560 | DEBUG: Data: None
2023-07-05 06:49:45,560 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:49:45,562 | DEBUG: Starting new HTTPS connection (1): www.reddit.com:443
2023-07-05 06:49:45,738 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:49:45,738 | DEBUG: Data: None
2023-07-05 06:49:45,738 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:49:45,741 | DEBUG: Starting new HTTPS connection (2): www.reddit.com:443
2023-07-05 06:49:46,308 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:49:46,309 | DEBUG: Data: None
2023-07-05 06:49:46,309 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:49:46,312 | DEBUG: Starting new HTTPS connection (3): www.reddit.com:443
2023-07-05 06:49:46,516 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 669
2023-07-05 06:49:46,520 | DEBUG: Starting new HTTPS connection (1): oauth.reddit.com:443
2023-07-05 06:49:46,867 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 06:49:46,869 | DEBUG: Response: 200 (136 bytes)
2023-07-05 06:49:46,870 | INFO: 127.0.0.1 - - [05/Jul/2023 06:49:46] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-05 06:49:46,933 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 670
2023-07-05 06:49:47,126 | DEBUG: https://www.reddit.com:443 "POST /api/v1/access_token HTTP/1.1" 200 669
2023-07-05 06:49:47,129 | DEBUG: Starting new HTTPS connection (2): oauth.reddit.com:443
2023-07-05 06:49:47,370 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2532
2023-07-05 06:49:47,371 | DEBUG: Response: 200 (2532 bytes)
2023-07-05 06:49:47,372 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:49:47,372 | DEBUG: Data: None
2023-07-05 06:49:47,372 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:49:47,501 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2532
2023-07-05 06:49:47,502 | DEBUG: Response: 200 (2532 bytes)
2023-07-05 06:49:47,503 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:49:47,503 | DEBUG: Data: None
2023-07-05 06:49:47,503 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:49:47,715 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4846
2023-07-05 06:49:47,721 | DEBUG: Response: 200 (4846 bytes)
2023-07-05 06:49:47,722 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:49:47,722 | DEBUG: Data: None
2023-07-05 06:49:47,722 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:49:47,876 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4849
2023-07-05 06:49:47,877 | DEBUG: Response: 200 (4849 bytes)
2023-07-05 06:49:47,878 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:49:47,878 | DEBUG: Data: None
2023-07-05 06:49:47,878 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:49:48,119 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5829
2023-07-05 06:49:48,121 | DEBUG: Response: 200 (5829 bytes)
2023-07-05 06:49:48,122 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:49:48,122 | DEBUG: Data: None
2023-07-05 06:49:48,122 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:49:48,232 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5825
2023-07-05 06:49:48,234 | DEBUG: Response: 200 (5825 bytes)
2023-07-05 06:49:48,235 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:49:48,235 | DEBUG: Data: None
2023-07-05 06:49:48,235 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:49:48,690 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10867
2023-07-05 06:49:48,692 | DEBUG: Response: 200 (10867 bytes)
2023-07-05 06:49:48,698 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:49:48,698 | DEBUG: Data: None
2023-07-05 06:49:48,698 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:49:48,795 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10872
2023-07-05 06:49:48,799 | DEBUG: Response: 200 (10872 bytes)
2023-07-05 06:49:48,803 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:49:48,803 | DEBUG: Data: None
2023-07-05 06:49:48,803 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:49:49,275 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14041
2023-07-05 06:49:49,461 | DEBUG: Response: 200 (14041 bytes)
2023-07-05 06:49:49,468 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 06:49:49,468 | DEBUG: Data: None
2023-07-05 06:49:49,468 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:49:49,538 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14038
2023-07-05 06:49:49,541 | DEBUG: Response: 200 (14038 bytes)
2023-07-05 06:49:49,546 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 06:49:49,546 | DEBUG: Data: None
2023-07-05 06:49:49,547 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:49:49,797 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4410
2023-07-05 06:49:49,798 | DEBUG: Response: 200 (4410 bytes)
2023-07-05 06:49:49,800 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:49:49,800 | DEBUG: Data: None
2023-07-05 06:49:49,800 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:49:49,892 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4407
2023-07-05 06:49:49,894 | DEBUG: Response: 200 (4407 bytes)
2023-07-05 06:49:49,896 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:49:49,896 | DEBUG: Data: None
2023-07-05 06:49:49,896 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:49:50,147 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4847
2023-07-05 06:49:50,148 | DEBUG: Response: 200 (4847 bytes)
2023-07-05 06:49:50,150 | INFO: 127.0.0.1 - - [05/Jul/2023 06:49:50] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-05 06:49:50,265 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4847
2023-07-05 06:49:50,267 | DEBUG: Response: 200 (4847 bytes)
2023-07-05 06:49:50,268 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:49:50,268 | DEBUG: Data: None
2023-07-05 06:49:50,268 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:49:50,575 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 06:49:50,576 | DEBUG: Response: 200 (136 bytes)
2023-07-05 06:49:50,577 | INFO: 127.0.0.1 - - [05/Jul/2023 06:49:50] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 06:50:44,267 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:50:44,267 | DEBUG: Data: None
2023-07-05 06:50:44,267 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:50:44,596 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2532
2023-07-05 06:50:44,597 | DEBUG: Response: 200 (2532 bytes)
2023-07-05 06:50:44,599 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:50:44,599 | DEBUG: Data: None
2023-07-05 06:50:44,599 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:50:44,999 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4845
2023-07-05 06:50:45,001 | DEBUG: Response: 200 (4845 bytes)
2023-07-05 06:50:45,005 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:50:45,005 | DEBUG: Data: None
2023-07-05 06:50:45,005 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:50:45,359 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5821
2023-07-05 06:50:45,362 | DEBUG: Response: 200 (5821 bytes)
2023-07-05 06:50:45,364 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:50:45,364 | DEBUG: Data: None
2023-07-05 06:50:45,364 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:50:45,887 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10805
2023-07-05 06:50:45,889 | DEBUG: Response: 200 (10805 bytes)
2023-07-05 06:50:45,894 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:50:45,894 | DEBUG: Data: None
2023-07-05 06:50:45,894 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:50:46,730 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14039
2023-07-05 06:50:46,734 | DEBUG: Response: 200 (14039 bytes)
2023-07-05 06:50:46,741 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 06:50:46,741 | DEBUG: Data: None
2023-07-05 06:50:46,741 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:50:47,095 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4405
2023-07-05 06:50:47,096 | DEBUG: Response: 200 (4405 bytes)
2023-07-05 06:50:47,100 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:50:47,100 | DEBUG: Data: None
2023-07-05 06:50:47,100 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:50:47,482 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4845
2023-07-05 06:50:47,484 | DEBUG: Response: 200 (4845 bytes)
2023-07-05 06:50:47,488 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:50:47,488 | DEBUG: Data: None
2023-07-05 06:50:47,488 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:50:47,778 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 06:50:47,779 | DEBUG: Response: 200 (136 bytes)
2023-07-05 06:50:47,779 | INFO: 127.0.0.1 - - [05/Jul/2023 06:50:47] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 06:51:22,817 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:51:22,817 | DEBUG: Data: None
2023-07-05 06:51:22,818 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:51:22,936 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:51:22,937 | DEBUG: Data: None
2023-07-05 06:51:22,937 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:51:23,086 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 06:51:23,087 | DEBUG: Response: 200 (136 bytes)
2023-07-05 06:51:23,088 | INFO: 127.0.0.1 - - [05/Jul/2023 06:51:23] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-05 06:51:23,259 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2531
2023-07-05 06:51:23,261 | DEBUG: Response: 200 (2531 bytes)
2023-07-05 06:51:23,262 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:51:23,262 | DEBUG: Data: None
2023-07-05 06:51:23,262 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:51:23,279 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:51:23,279 | DEBUG: Data: None
2023-07-05 06:51:23,279 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:51:23,587 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2530
2023-07-05 06:51:23,589 | DEBUG: Response: 200 (2530 bytes)
2023-07-05 06:51:23,590 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:51:23,590 | DEBUG: Data: None
2023-07-05 06:51:23,590 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:51:23,615 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4844
2023-07-05 06:51:23,617 | DEBUG: Response: 200 (4844 bytes)
2023-07-05 06:51:23,621 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:51:23,621 | DEBUG: Data: None
2023-07-05 06:51:23,621 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:51:23,947 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4845
2023-07-05 06:51:23,948 | DEBUG: Response: 200 (4845 bytes)
2023-07-05 06:51:23,949 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:51:23,950 | DEBUG: Data: None
2023-07-05 06:51:23,950 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:51:23,964 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5818
2023-07-05 06:51:23,969 | DEBUG: Response: 200 (5818 bytes)
2023-07-05 06:51:23,971 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:51:23,971 | DEBUG: Data: None
2023-07-05 06:51:23,971 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:51:24,326 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5823
2023-07-05 06:51:24,327 | DEBUG: Response: 200 (5823 bytes)
2023-07-05 06:51:24,328 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:51:24,328 | DEBUG: Data: None
2023-07-05 06:51:24,328 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:51:24,508 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10810
2023-07-05 06:51:24,511 | DEBUG: Response: 200 (10810 bytes)
2023-07-05 06:51:24,515 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:51:24,515 | DEBUG: Data: None
2023-07-05 06:51:24,515 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:51:24,805 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10817
2023-07-05 06:51:24,807 | DEBUG: Response: 200 (10817 bytes)
2023-07-05 06:51:24,810 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:51:24,811 | DEBUG: Data: None
2023-07-05 06:51:24,811 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:51:25,278 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14041
2023-07-05 06:51:25,283 | DEBUG: Response: 200 (14041 bytes)
2023-07-05 06:51:25,291 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 06:51:25,291 | DEBUG: Data: None
2023-07-05 06:51:25,291 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:51:25,579 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14045
2023-07-05 06:51:25,582 | DEBUG: Response: 200 (14045 bytes)
2023-07-05 06:51:25,588 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 06:51:25,588 | DEBUG: Data: None
2023-07-05 06:51:25,588 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:51:25,677 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4410
2023-07-05 06:51:25,677 | DEBUG: Response: 200 (4410 bytes)
2023-07-05 06:51:25,679 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:51:25,679 | DEBUG: Data: None
2023-07-05 06:51:25,679 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:51:25,931 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4411
2023-07-05 06:51:25,932 | DEBUG: Response: 200 (4411 bytes)
2023-07-05 06:51:25,934 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:51:25,934 | DEBUG: Data: None
2023-07-05 06:51:25,934 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:51:26,025 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4847
2023-07-05 06:51:26,026 | DEBUG: Response: 200 (4847 bytes)
2023-07-05 06:51:26,028 | INFO: 127.0.0.1 - - [05/Jul/2023 06:51:26] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-05 06:51:26,291 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4846
2023-07-05 06:51:26,292 | DEBUG: Response: 200 (4846 bytes)
2023-07-05 06:51:26,294 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:51:26,294 | DEBUG: Data: None
2023-07-05 06:51:26,294 | DEBUG: Params: {'q': 'NFLX', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:51:26,585 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=NFLX&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 06:51:26,586 | DEBUG: Response: 200 (136 bytes)
2023-07-05 06:51:26,586 | INFO: 127.0.0.1 - - [05/Jul/2023 06:51:26] "GET /watchlist?ticks=AMZN,TSLA,NFLX HTTP/1.1" 200 -
2023-07-05 06:51:41,556 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:51:41,557 | DEBUG: Data: None
2023-07-05 06:51:41,557 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:51:41,748 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:51:41,752 | DEBUG: Data: None
2023-07-05 06:51:41,752 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:51:41,818 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 06:51:41,821 | DEBUG: Response: 200 (136 bytes)
2023-07-05 06:51:41,823 | INFO: 127.0.0.1 - - [05/Jul/2023 06:51:41] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-05 06:51:42,052 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:51:42,052 | DEBUG: Data: None
2023-07-05 06:51:42,052 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:51:42,237 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2532
2023-07-05 06:51:42,238 | DEBUG: Response: 200 (2532 bytes)
2023-07-05 06:51:42,238 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:51:42,238 | DEBUG: Data: None
2023-07-05 06:51:42,238 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:51:42,375 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2532
2023-07-05 06:51:42,376 | DEBUG: Response: 200 (2532 bytes)
2023-07-05 06:51:42,377 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:51:42,377 | DEBUG: Data: None
2023-07-05 06:51:42,377 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:51:42,632 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4846
2023-07-05 06:51:42,634 | DEBUG: Response: 200 (4846 bytes)
2023-07-05 06:51:42,636 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:51:42,637 | DEBUG: Data: None
2023-07-05 06:51:42,637 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:51:42,716 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4850
2023-07-05 06:51:42,717 | DEBUG: Response: 200 (4850 bytes)
2023-07-05 06:51:42,718 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:51:42,719 | DEBUG: Data: None
2023-07-05 06:51:42,719 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:51:42,989 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5819
2023-07-05 06:51:42,990 | DEBUG: Response: 200 (5819 bytes)
2023-07-05 06:51:42,991 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:51:42,991 | DEBUG: Data: None
2023-07-05 06:51:42,991 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:51:43,273 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5825
2023-07-05 06:51:43,274 | DEBUG: Response: 200 (5825 bytes)
2023-07-05 06:51:43,275 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:51:43,275 | DEBUG: Data: None
2023-07-05 06:51:43,275 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:51:43,497 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10812
2023-07-05 06:51:43,498 | DEBUG: Response: 200 (10812 bytes)
2023-07-05 06:51:43,504 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:51:43,504 | DEBUG: Data: None
2023-07-05 06:51:43,504 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:51:43,796 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10816
2023-07-05 06:51:43,798 | DEBUG: Response: 200 (10816 bytes)
2023-07-05 06:51:43,802 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:51:43,802 | DEBUG: Data: None
2023-07-05 06:51:43,802 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:51:44,162 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14038
2023-07-05 06:51:44,355 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14040
2023-07-05 06:51:44,357 | DEBUG: Response: 200 (14040 bytes)
2023-07-05 06:51:44,368 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 06:51:44,368 | DEBUG: Data: None
2023-07-05 06:51:44,369 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:51:44,371 | DEBUG: Response: 200 (14038 bytes)
2023-07-05 06:51:44,384 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 06:51:44,384 | DEBUG: Data: None
2023-07-05 06:51:44,385 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:51:44,729 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4400
2023-07-05 06:51:44,732 | DEBUG: Response: 200 (4400 bytes)
2023-07-05 06:51:44,736 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:51:44,736 | DEBUG: Data: None
2023-07-05 06:51:44,736 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:51:44,744 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4407
2023-07-05 06:51:44,747 | DEBUG: Response: 200 (4407 bytes)
2023-07-05 06:51:44,751 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:51:44,751 | DEBUG: Data: None
2023-07-05 06:51:44,751 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:51:45,078 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4842
2023-07-05 06:51:45,108 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4848
2023-07-05 06:51:45,185 | DEBUG: Response: 200 (4842 bytes)
2023-07-05 06:51:45,190 | DEBUG: Response: 200 (4848 bytes)
2023-07-05 06:51:45,197 | INFO: 127.0.0.1 - - [05/Jul/2023 06:51:45] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-05 06:51:45,202 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:51:45,211 | DEBUG: Data: None
2023-07-05 06:51:45,211 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:51:45,568 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2923
2023-07-05 06:51:45,569 | DEBUG: Response: 200 (2923 bytes)
2023-07-05 06:51:45,570 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:51:45,570 | DEBUG: Data: None
2023-07-05 06:51:45,570 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:51:46,106 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10813
2023-07-05 06:51:46,107 | DEBUG: Response: 200 (10813 bytes)
2023-07-05 06:51:46,112 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qo4d2/
2023-07-05 06:51:46,112 | DEBUG: Data: None
2023-07-05 06:51:46,112 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:51:46,821 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qo4d2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14128
2023-07-05 06:51:46,823 | DEBUG: Response: 200 (14128 bytes)
2023-07-05 06:51:46,829 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:51:46,829 | DEBUG: Data: None
2023-07-05 06:51:46,829 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:51:47,195 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2391
2023-07-05 06:51:47,196 | DEBUG: Response: 200 (2391 bytes)
2023-07-05 06:51:47,196 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:51:47,196 | DEBUG: Data: None
2023-07-05 06:51:47,196 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:51:48,000 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14047
2023-07-05 06:51:48,003 | DEBUG: Response: 200 (14047 bytes)
2023-07-05 06:51:48,010 | INFO: 127.0.0.1 - - [05/Jul/2023 06:51:48] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-05 06:51:57,470 | INFO: 127.0.0.1 - - [05/Jul/2023 06:51:57] "OPTIONS /forecast HTTP/1.1" 200 -
2023-07-05 06:51:57,731 | DEBUG: Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2023-07-05 06:51:58,157 | DEBUG: https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GME?period1=-631159200&period2=1688520117&interval=1d&includePrePost=False&events=div%2Csplits HTTP/1.1" 200 None
2023-07-05 06:51:58,435 | DEBUG: cmd: where.exe tbb.dll
cwd: None
2023-07-05 06:51:58,620 | DEBUG: TBB already found in load path
2023-07-05 06:51:58,857 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpt42chos6\uwv_l7fs.json
2023-07-05 06:52:03,037 | DEBUG: input tempfile: C:\Users\Rhutik\AppData\Local\Temp\tmpt42chos6\tlw0aqhy.json
2023-07-05 06:52:03,040 | DEBUG: idx 0
2023-07-05 06:52:03,040 | DEBUG: running CmdStan, num_threads: None
2023-07-05 06:52:03,040 | DEBUG: CmdStan args: ['C:\\Python310\\Lib\\site-packages\\prophet\\stan_model\\prophet_model.bin', 'random', 'seed=66043', 'data', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpt42chos6\\uwv_l7fs.json', 'init=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpt42chos6\\tlw0aqhy.json', 'output', 'file=C:\\Users\\Rhutik\\AppData\\Local\\Temp\\tmpt42chos6\\prophet_modelqpzr5yr2\\prophet_model-20230705065203.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']
2023-07-05 06:52:03,040 | INFO: Chain [1] start processing
2023-07-05 06:52:24,223 | INFO: Chain [1] done processing
2023-07-05 06:52:26,087 | INFO: 127.0.0.1 - - [05/Jul/2023 06:52:26] "POST /forecast HTTP/1.1" 200 -
2023-07-05 06:56:45,967 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:56:45,968 | DEBUG: Data: None
2023-07-05 06:56:45,968 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:56:46,108 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:56:46,109 | DEBUG: Data: None
2023-07-05 06:56:46,109 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:56:46,272 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 06:56:46,273 | DEBUG: Response: 200 (136 bytes)
2023-07-05 06:56:46,275 | INFO: 127.0.0.1 - - [05/Jul/2023 06:56:46] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-05 06:56:46,428 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2531
2023-07-05 06:56:46,429 | DEBUG: Response: 200 (2531 bytes)
2023-07-05 06:56:46,430 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:56:46,430 | DEBUG: Data: None
2023-07-05 06:56:46,430 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:56:46,528 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:56:46,528 | DEBUG: Data: None
2023-07-05 06:56:46,528 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:56:46,766 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4846
2023-07-05 06:56:46,769 | DEBUG: Response: 200 (4846 bytes)
2023-07-05 06:56:46,772 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:56:46,772 | DEBUG: Data: None
2023-07-05 06:56:46,772 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:56:46,855 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2530
2023-07-05 06:56:46,857 | DEBUG: Response: 200 (2530 bytes)
2023-07-05 06:56:46,858 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:56:46,858 | DEBUG: Data: None
2023-07-05 06:56:46,859 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:56:47,251 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4846
2023-07-05 06:56:47,253 | DEBUG: Response: 200 (4846 bytes)
2023-07-05 06:56:47,255 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:56:47,255 | DEBUG: Data: None
2023-07-05 06:56:47,255 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:56:47,362 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5817
2023-07-05 06:56:47,363 | DEBUG: Response: 200 (5817 bytes)
2023-07-05 06:56:47,364 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:56:47,364 | DEBUG: Data: None
2023-07-05 06:56:47,364 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:56:47,619 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5821
2023-07-05 06:56:47,620 | DEBUG: Response: 200 (5821 bytes)
2023-07-05 06:56:47,622 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:56:47,622 | DEBUG: Data: None
2023-07-05 06:56:47,622 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:56:47,882 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10809
2023-07-05 06:56:47,887 | DEBUG: Response: 200 (10809 bytes)
2023-07-05 06:56:47,891 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:56:47,891 | DEBUG: Data: None
2023-07-05 06:56:47,891 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:56:48,153 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10814
2023-07-05 06:56:48,154 | DEBUG: Response: 200 (10814 bytes)
2023-07-05 06:56:48,160 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:56:48,160 | DEBUG: Data: None
2023-07-05 06:56:48,160 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:56:48,699 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14043
2023-07-05 06:56:48,701 | DEBUG: Response: 200 (14043 bytes)
2023-07-05 06:56:48,706 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 06:56:48,706 | DEBUG: Data: None
2023-07-05 06:56:48,706 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:56:48,808 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14036
2023-07-05 06:56:49,013 | DEBUG: Response: 200 (14036 bytes)
2023-07-05 06:56:49,025 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 06:56:49,025 | DEBUG: Data: None
2023-07-05 06:56:49,025 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:56:49,094 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4412
2023-07-05 06:56:49,095 | DEBUG: Response: 200 (4412 bytes)
2023-07-05 06:56:49,096 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:56:49,096 | DEBUG: Data: None
2023-07-05 06:56:49,096 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:56:49,424 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4403
2023-07-05 06:56:49,426 | DEBUG: Response: 200 (4403 bytes)
2023-07-05 06:56:49,428 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:56:49,428 | DEBUG: Data: None
2023-07-05 06:56:49,428 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:56:49,457 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4848
2023-07-05 06:56:49,459 | DEBUG: Response: 200 (4848 bytes)
2023-07-05 06:56:49,462 | INFO: 127.0.0.1 - - [05/Jul/2023 06:56:49] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-05 06:56:49,795 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4844
2023-07-05 06:56:49,796 | DEBUG: Response: 200 (4844 bytes)
2023-07-05 06:56:49,797 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:56:49,797 | DEBUG: Data: None
2023-07-05 06:56:49,797 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:56:50,136 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2918
2023-07-05 06:56:50,140 | DEBUG: Response: 200 (2918 bytes)
2023-07-05 06:56:50,140 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:56:50,140 | DEBUG: Data: None
2023-07-05 06:56:50,140 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:56:50,662 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10809
2023-07-05 06:56:50,666 | DEBUG: Response: 200 (10809 bytes)
2023-07-05 06:56:50,674 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qo4d2/
2023-07-05 06:56:50,674 | DEBUG: Data: None
2023-07-05 06:56:50,674 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:56:51,284 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qo4d2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14298
2023-07-05 06:56:51,478 | DEBUG: Response: 200 (14298 bytes)
2023-07-05 06:56:51,488 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:56:51,488 | DEBUG: Data: None
2023-07-05 06:56:51,488 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:56:51,814 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2394
2023-07-05 06:56:51,816 | DEBUG: Response: 200 (2394 bytes)
2023-07-05 06:56:51,817 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:56:51,817 | DEBUG: Data: None
2023-07-05 06:56:51,817 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:56:52,633 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14042
2023-07-05 06:56:52,642 | DEBUG: Response: 200 (14042 bytes)
2023-07-05 06:56:52,651 | INFO: 127.0.0.1 - - [05/Jul/2023 06:56:52] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-05 06:56:52,657 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:56:52,657 | DEBUG: Data: None
2023-07-05 06:56:52,658 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:56:53,023 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2531
2023-07-05 06:56:53,024 | DEBUG: Response: 200 (2531 bytes)
2023-07-05 06:56:53,025 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:56:53,025 | DEBUG: Data: None
2023-07-05 06:56:53,025 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:56:53,391 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4848
2023-07-05 06:56:53,392 | DEBUG: Response: 200 (4848 bytes)
2023-07-05 06:56:53,394 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:56:53,394 | DEBUG: Data: None
2023-07-05 06:56:53,394 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:56:53,778 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5820
2023-07-05 06:56:53,780 | DEBUG: Response: 200 (5820 bytes)
2023-07-05 06:56:53,783 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:56:53,783 | DEBUG: Data: None
2023-07-05 06:56:53,783 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:56:54,333 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10805
2023-07-05 06:56:54,334 | DEBUG: Response: 200 (10805 bytes)
2023-07-05 06:56:54,338 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:56:54,339 | DEBUG: Data: None
2023-07-05 06:56:54,339 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:56:55,091 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14035
2023-07-05 06:56:55,110 | DEBUG: Response: 200 (14035 bytes)
2023-07-05 06:56:55,117 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 06:56:55,117 | DEBUG: Data: None
2023-07-05 06:56:55,117 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:56:55,472 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4403
2023-07-05 06:56:55,487 | DEBUG: Response: 200 (4403 bytes)
2023-07-05 06:56:55,488 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:56:55,488 | DEBUG: Data: None
2023-07-05 06:56:55,488 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:56:55,839 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4847
2023-07-05 06:56:55,840 | DEBUG: Response: 200 (4847 bytes)
2023-07-05 06:56:55,842 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:56:55,842 | DEBUG: Data: None
2023-07-05 06:56:55,842 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:56:56,154 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2923
2023-07-05 06:56:56,157 | DEBUG: Response: 200 (2923 bytes)
2023-07-05 06:56:56,158 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:56:56,158 | DEBUG: Data: None
2023-07-05 06:56:56,158 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:56:56,701 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10811
2023-07-05 06:56:56,707 | DEBUG: Response: 200 (10811 bytes)
2023-07-05 06:56:56,710 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qo4d2/
2023-07-05 06:56:56,711 | DEBUG: Data: None
2023-07-05 06:56:56,711 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:56:57,445 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qo4d2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14301
2023-07-05 06:56:57,450 | DEBUG: Response: 200 (14301 bytes)
2023-07-05 06:56:57,456 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:56:57,456 | DEBUG: Data: None
2023-07-05 06:56:57,456 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:56:57,799 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2394
2023-07-05 06:56:57,801 | DEBUG: Response: 200 (2394 bytes)
2023-07-05 06:56:57,801 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:56:57,801 | DEBUG: Data: None
2023-07-05 06:56:57,801 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:56:58,390 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14039
2023-07-05 06:56:58,579 | DEBUG: Response: 200 (14039 bytes)
2023-07-05 06:56:58,591 | INFO: 127.0.0.1 - - [05/Jul/2023 06:56:58] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-05 06:56:58,597 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:56:58,597 | DEBUG: Data: None
2023-07-05 06:56:58,598 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:56:58,950 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2531
2023-07-05 06:56:58,951 | DEBUG: Response: 200 (2531 bytes)
2023-07-05 06:56:58,951 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:56:58,951 | DEBUG: Data: None
2023-07-05 06:56:58,951 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:56:59,355 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4846
2023-07-05 06:56:59,357 | DEBUG: Response: 200 (4846 bytes)
2023-07-05 06:56:59,358 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:56:59,359 | DEBUG: Data: None
2023-07-05 06:56:59,359 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:56:59,709 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5819
2023-07-05 06:56:59,710 | DEBUG: Response: 200 (5819 bytes)
2023-07-05 06:56:59,711 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:56:59,711 | DEBUG: Data: None
2023-07-05 06:56:59,711 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:00,407 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10811
2023-07-05 06:57:00,411 | DEBUG: Response: 200 (10811 bytes)
2023-07-05 06:57:00,418 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:00,418 | DEBUG: Data: None
2023-07-05 06:57:00,418 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:01,059 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14041
2023-07-05 06:57:01,224 | DEBUG: Response: 200 (14041 bytes)
2023-07-05 06:57:01,229 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 06:57:01,229 | DEBUG: Data: None
2023-07-05 06:57:01,229 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:01,627 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4404
2023-07-05 06:57:01,628 | DEBUG: Response: 200 (4404 bytes)
2023-07-05 06:57:01,630 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:01,630 | DEBUG: Data: None
2023-07-05 06:57:01,630 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:02,001 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4848
2023-07-05 06:57:02,002 | DEBUG: Response: 200 (4848 bytes)
2023-07-05 06:57:02,004 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:02,004 | DEBUG: Data: None
2023-07-05 06:57:02,004 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:02,399 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2922
2023-07-05 06:57:02,400 | DEBUG: Response: 200 (2922 bytes)
2023-07-05 06:57:02,401 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:02,401 | DEBUG: Data: None
2023-07-05 06:57:02,401 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:02,912 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10803
2023-07-05 06:57:02,913 | DEBUG: Response: 200 (10803 bytes)
2023-07-05 06:57:02,919 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qo4d2/
2023-07-05 06:57:02,919 | DEBUG: Data: None
2023-07-05 06:57:02,919 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:03,731 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qo4d2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14287
2023-07-05 06:57:03,739 | DEBUG: Response: 200 (14287 bytes)
2023-07-05 06:57:03,744 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:03,744 | DEBUG: Data: None
2023-07-05 06:57:03,745 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:04,113 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2395
2023-07-05 06:57:04,113 | DEBUG: Response: 200 (2395 bytes)
2023-07-05 06:57:04,114 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:04,115 | DEBUG: Data: None
2023-07-05 06:57:04,115 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:04,907 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14037
2023-07-05 06:57:04,912 | DEBUG: Response: 200 (14037 bytes)
2023-07-05 06:57:04,919 | INFO: 127.0.0.1 - - [05/Jul/2023 06:57:04] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-05 06:57:04,925 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:04,925 | DEBUG: Data: None
2023-07-05 06:57:04,926 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:05,349 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2530
2023-07-05 06:57:05,350 | DEBUG: Response: 200 (2530 bytes)
2023-07-05 06:57:05,351 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:05,351 | DEBUG: Data: None
2023-07-05 06:57:05,351 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:05,720 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4846
2023-07-05 06:57:05,743 | DEBUG: Response: 200 (4846 bytes)
2023-07-05 06:57:05,745 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:05,745 | DEBUG: Data: None
2023-07-05 06:57:05,745 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:06,274 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5823
2023-07-05 06:57:06,274 | DEBUG: Response: 200 (5823 bytes)
2023-07-05 06:57:06,275 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:06,275 | DEBUG: Data: None
2023-07-05 06:57:06,276 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:06,829 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10812
2023-07-05 06:57:06,833 | DEBUG: Response: 200 (10812 bytes)
2023-07-05 06:57:06,837 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:06,837 | DEBUG: Data: None
2023-07-05 06:57:06,837 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:07,418 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14042
2023-07-05 06:57:07,619 | DEBUG: Response: 200 (14042 bytes)
2023-07-05 06:57:07,626 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 06:57:07,626 | DEBUG: Data: None
2023-07-05 06:57:07,626 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:07,995 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4410
2023-07-05 06:57:07,996 | DEBUG: Response: 200 (4410 bytes)
2023-07-05 06:57:07,999 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:07,999 | DEBUG: Data: None
2023-07-05 06:57:07,999 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:08,355 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4844
2023-07-05 06:57:08,356 | DEBUG: Response: 200 (4844 bytes)
2023-07-05 06:57:08,357 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:08,358 | DEBUG: Data: None
2023-07-05 06:57:08,358 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:08,691 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2922
2023-07-05 06:57:08,692 | DEBUG: Response: 200 (2922 bytes)
2023-07-05 06:57:08,693 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:08,693 | DEBUG: Data: None
2023-07-05 06:57:08,693 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:09,193 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10799
2023-07-05 06:57:09,195 | DEBUG: Response: 200 (10799 bytes)
2023-07-05 06:57:09,201 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qo4d2/
2023-07-05 06:57:09,201 | DEBUG: Data: None
2023-07-05 06:57:09,202 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:09,779 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qo4d2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14287
2023-07-05 06:57:09,981 | DEBUG: Response: 200 (14287 bytes)
2023-07-05 06:57:09,987 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:09,987 | DEBUG: Data: None
2023-07-05 06:57:09,987 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:10,343 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2393
2023-07-05 06:57:10,345 | DEBUG: Response: 200 (2393 bytes)
2023-07-05 06:57:10,346 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:10,346 | DEBUG: Data: None
2023-07-05 06:57:10,346 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:10,906 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14042
2023-07-05 06:57:11,094 | DEBUG: Response: 200 (14042 bytes)
2023-07-05 06:57:11,114 | INFO: 127.0.0.1 - - [05/Jul/2023 06:57:11] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-05 06:57:11,122 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:11,123 | DEBUG: Data: None
2023-07-05 06:57:11,123 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:11,451 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2530
2023-07-05 06:57:11,453 | DEBUG: Response: 200 (2530 bytes)
2023-07-05 06:57:11,453 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:11,454 | DEBUG: Data: None
2023-07-05 06:57:11,454 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:11,801 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4844
2023-07-05 06:57:11,802 | DEBUG: Response: 200 (4844 bytes)
2023-07-05 06:57:11,804 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:11,804 | DEBUG: Data: None
2023-07-05 06:57:11,804 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:12,448 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5815
2023-07-05 06:57:12,449 | DEBUG: Response: 200 (5815 bytes)
2023-07-05 06:57:12,450 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:12,450 | DEBUG: Data: None
2023-07-05 06:57:12,450 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:12,993 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10813
2023-07-05 06:57:12,997 | DEBUG: Response: 200 (10813 bytes)
2023-07-05 06:57:13,013 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:13,013 | DEBUG: Data: None
2023-07-05 06:57:13,013 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:13,632 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14044
2023-07-05 06:57:13,839 | DEBUG: Response: 200 (14044 bytes)
2023-07-05 06:57:13,846 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 06:57:13,847 | DEBUG: Data: None
2023-07-05 06:57:13,847 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:14,220 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4410
2023-07-05 06:57:14,222 | DEBUG: Response: 200 (4410 bytes)
2023-07-05 06:57:14,223 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:14,223 | DEBUG: Data: None
2023-07-05 06:57:14,223 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:14,592 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4842
2023-07-05 06:57:14,593 | DEBUG: Response: 200 (4842 bytes)
2023-07-05 06:57:14,594 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:14,594 | DEBUG: Data: None
2023-07-05 06:57:14,594 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:15,017 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2922
2023-07-05 06:57:15,020 | DEBUG: Response: 200 (2922 bytes)
2023-07-05 06:57:15,021 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:15,021 | DEBUG: Data: None
2023-07-05 06:57:15,021 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:15,613 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10819
2023-07-05 06:57:15,619 | DEBUG: Response: 200 (10819 bytes)
2023-07-05 06:57:15,623 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qo4d2/
2023-07-05 06:57:15,623 | DEBUG: Data: None
2023-07-05 06:57:15,623 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:16,438 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qo4d2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14307
2023-07-05 06:57:16,452 | DEBUG: Response: 200 (14307 bytes)
2023-07-05 06:57:16,457 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:16,457 | DEBUG: Data: None
2023-07-05 06:57:16,457 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:16,804 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2395
2023-07-05 06:57:16,806 | DEBUG: Response: 200 (2395 bytes)
2023-07-05 06:57:16,806 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:16,806 | DEBUG: Data: None
2023-07-05 06:57:16,806 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:17,581 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14044
2023-07-05 06:57:17,586 | DEBUG: Response: 200 (14044 bytes)
2023-07-05 06:57:17,604 | INFO: 127.0.0.1 - - [05/Jul/2023 06:57:17] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-05 06:57:17,610 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:17,611 | DEBUG: Data: None
2023-07-05 06:57:17,611 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:17,936 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2529
2023-07-05 06:57:17,937 | DEBUG: Response: 200 (2529 bytes)
2023-07-05 06:57:17,938 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:17,938 | DEBUG: Data: None
2023-07-05 06:57:17,938 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:18,281 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4846
2023-07-05 06:57:18,282 | DEBUG: Response: 200 (4846 bytes)
2023-07-05 06:57:18,284 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:18,284 | DEBUG: Data: None
2023-07-05 06:57:18,284 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:18,624 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:18,624 | DEBUG: Data: None
2023-07-05 06:57:18,624 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:18,661 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5829
2023-07-05 06:57:18,662 | DEBUG: Response: 200 (5829 bytes)
2023-07-05 06:57:18,664 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:18,664 | DEBUG: Data: None
2023-07-05 06:57:18,664 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:18,935 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2530
2023-07-05 06:57:18,936 | DEBUG: Response: 200 (2530 bytes)
2023-07-05 06:57:18,936 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:18,936 | DEBUG: Data: None
2023-07-05 06:57:18,937 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:19,186 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10800
2023-07-05 06:57:19,188 | DEBUG: Response: 200 (10800 bytes)
2023-07-05 06:57:19,191 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:19,191 | DEBUG: Data: None
2023-07-05 06:57:19,191 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:19,292 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4846
2023-07-05 06:57:19,293 | DEBUG: Response: 200 (4846 bytes)
2023-07-05 06:57:19,295 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:19,295 | DEBUG: Data: None
2023-07-05 06:57:19,295 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:19,645 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5826
2023-07-05 06:57:19,646 | DEBUG: Response: 200 (5826 bytes)
2023-07-05 06:57:19,649 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:19,649 | DEBUG: Data: None
2023-07-05 06:57:19,649 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:19,770 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14039
2023-07-05 06:57:19,957 | DEBUG: Response: 200 (14039 bytes)
2023-07-05 06:57:19,965 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 06:57:19,965 | DEBUG: Data: None
2023-07-05 06:57:19,966 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:20,139 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10808
2023-07-05 06:57:20,142 | DEBUG: Response: 200 (10808 bytes)
2023-07-05 06:57:20,149 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:20,149 | DEBUG: Data: None
2023-07-05 06:57:20,149 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:20,315 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4406
2023-07-05 06:57:20,316 | DEBUG: Response: 200 (4406 bytes)
2023-07-05 06:57:20,318 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:20,318 | DEBUG: Data: None
2023-07-05 06:57:20,318 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:20,664 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4846
2023-07-05 06:57:20,666 | DEBUG: Response: 200 (4846 bytes)
2023-07-05 06:57:20,668 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:20,668 | DEBUG: Data: None
2023-07-05 06:57:20,668 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:20,923 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14044
2023-07-05 06:57:20,927 | DEBUG: Response: 200 (14044 bytes)
2023-07-05 06:57:20,950 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 06:57:20,951 | DEBUG: Data: None
2023-07-05 06:57:20,951 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:21,053 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2923
2023-07-05 06:57:21,056 | DEBUG: Response: 200 (2923 bytes)
2023-07-05 06:57:21,057 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:21,057 | DEBUG: Data: None
2023-07-05 06:57:21,058 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:21,313 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4404
2023-07-05 06:57:21,315 | DEBUG: Response: 200 (4404 bytes)
2023-07-05 06:57:21,318 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:21,318 | DEBUG: Data: None
2023-07-05 06:57:21,318 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:21,676 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4846
2023-07-05 06:57:21,677 | DEBUG: Response: 200 (4846 bytes)
2023-07-05 06:57:21,679 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:21,679 | DEBUG: Data: None
2023-07-05 06:57:21,680 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:21,790 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10810
2023-07-05 06:57:21,792 | DEBUG: Response: 200 (10810 bytes)
2023-07-05 06:57:21,799 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qo4d2/
2023-07-05 06:57:21,799 | DEBUG: Data: None
2023-07-05 06:57:21,799 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:21,966 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2918
2023-07-05 06:57:21,967 | DEBUG: Response: 200 (2918 bytes)
2023-07-05 06:57:21,968 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:21,968 | DEBUG: Data: None
2023-07-05 06:57:21,968 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:22,491 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10806
2023-07-05 06:57:22,494 | DEBUG: Response: 200 (10806 bytes)
2023-07-05 06:57:22,499 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qo4d2/
2023-07-05 06:57:22,499 | DEBUG: Data: None
2023-07-05 06:57:22,499 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:22,557 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qo4d2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14297
2023-07-05 06:57:22,560 | DEBUG: Response: 200 (14297 bytes)
2023-07-05 06:57:22,566 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:22,566 | DEBUG: Data: None
2023-07-05 06:57:22,566 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:22,883 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2394
2023-07-05 06:57:22,884 | DEBUG: Response: 200 (2394 bytes)
2023-07-05 06:57:22,885 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:22,885 | DEBUG: Data: None
2023-07-05 06:57:22,885 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:23,061 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qo4d2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14288
2023-07-05 06:57:23,259 | DEBUG: Response: 200 (14288 bytes)
2023-07-05 06:57:23,265 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:23,265 | DEBUG: Data: None
2023-07-05 06:57:23,265 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:23,589 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2392
2023-07-05 06:57:23,590 | DEBUG: Response: 200 (2392 bytes)
2023-07-05 06:57:23,590 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:23,591 | DEBUG: Data: None
2023-07-05 06:57:23,591 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:23,645 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14033
2023-07-05 06:57:23,653 | DEBUG: Response: 200 (14033 bytes)
2023-07-05 06:57:23,661 | INFO: 127.0.0.1 - - [05/Jul/2023 06:57:23] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-05 06:57:23,669 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:23,669 | DEBUG: Data: None
2023-07-05 06:57:23,669 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:24,016 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2531
2023-07-05 06:57:24,017 | DEBUG: Response: 200 (2531 bytes)
2023-07-05 06:57:24,018 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:24,018 | DEBUG: Data: None
2023-07-05 06:57:24,018 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:24,422 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4847
2023-07-05 06:57:24,423 | DEBUG: Response: 200 (4847 bytes)
2023-07-05 06:57:24,425 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:24,425 | DEBUG: Data: None
2023-07-05 06:57:24,425 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:24,565 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14043
2023-07-05 06:57:24,568 | DEBUG: Response: 200 (14043 bytes)
2023-07-05 06:57:24,578 | INFO: 127.0.0.1 - - [05/Jul/2023 06:57:24] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-05 06:57:24,813 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5828
2023-07-05 06:57:24,816 | DEBUG: Response: 200 (5828 bytes)
2023-07-05 06:57:24,819 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:24,820 | DEBUG: Data: None
2023-07-05 06:57:24,820 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:24,965 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:24,965 | DEBUG: Data: None
2023-07-05 06:57:24,965 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:25,290 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2529
2023-07-05 06:57:25,291 | DEBUG: Response: 200 (2529 bytes)
2023-07-05 06:57:25,292 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:25,292 | DEBUG: Data: None
2023-07-05 06:57:25,292 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:25,362 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10807
2023-07-05 06:57:25,364 | DEBUG: Response: 200 (10807 bytes)
2023-07-05 06:57:25,371 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:25,371 | DEBUG: Data: None
2023-07-05 06:57:25,371 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:25,675 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4846
2023-07-05 06:57:25,676 | DEBUG: Response: 200 (4846 bytes)
2023-07-05 06:57:25,678 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:25,678 | DEBUG: Data: None
2023-07-05 06:57:25,678 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:26,015 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5816
2023-07-05 06:57:26,016 | DEBUG: Response: 200 (5816 bytes)
2023-07-05 06:57:26,017 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:26,017 | DEBUG: Data: None
2023-07-05 06:57:26,018 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:26,174 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14030
2023-07-05 06:57:26,178 | DEBUG: Response: 200 (14030 bytes)
2023-07-05 06:57:26,186 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 06:57:26,186 | DEBUG: Data: None
2023-07-05 06:57:26,186 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:26,550 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4401
2023-07-05 06:57:26,551 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10816
2023-07-05 06:57:26,552 | DEBUG: Response: 200 (4401 bytes)
2023-07-05 06:57:26,554 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:26,554 | DEBUG: Data: None
2023-07-05 06:57:26,554 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:26,555 | DEBUG: Response: 200 (10816 bytes)
2023-07-05 06:57:26,559 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:26,560 | DEBUG: Data: None
2023-07-05 06:57:26,560 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:27,300 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4848
2023-07-05 06:57:27,301 | DEBUG: Response: 200 (4848 bytes)
2023-07-05 06:57:27,303 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:27,303 | DEBUG: Data: None
2023-07-05 06:57:27,303 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:27,418 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14032
2023-07-05 06:57:27,420 | DEBUG: Response: 200 (14032 bytes)
2023-07-05 06:57:27,426 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 06:57:27,426 | DEBUG: Data: None
2023-07-05 06:57:27,426 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:27,627 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2918
2023-07-05 06:57:27,628 | DEBUG: Response: 200 (2918 bytes)
2023-07-05 06:57:27,630 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:27,631 | DEBUG: Data: None
2023-07-05 06:57:27,631 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:27,767 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4405
2023-07-05 06:57:27,769 | DEBUG: Response: 200 (4405 bytes)
2023-07-05 06:57:27,771 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:27,772 | DEBUG: Data: None
2023-07-05 06:57:27,772 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:28,148 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4848
2023-07-05 06:57:28,149 | DEBUG: Response: 200 (4848 bytes)
2023-07-05 06:57:28,152 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:28,152 | DEBUG: Data: None
2023-07-05 06:57:28,152 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:28,196 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10803
2023-07-05 06:57:28,199 | DEBUG: Response: 200 (10803 bytes)
2023-07-05 06:57:28,205 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qo4d2/
2023-07-05 06:57:28,205 | DEBUG: Data: None
2023-07-05 06:57:28,205 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:28,487 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2923
2023-07-05 06:57:28,488 | DEBUG: Response: 200 (2923 bytes)
2023-07-05 06:57:28,490 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:28,490 | DEBUG: Data: None
2023-07-05 06:57:28,490 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:28,988 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qo4d2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14297
2023-07-05 06:57:28,993 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10815
2023-07-05 06:57:28,995 | DEBUG: Response: 200 (14297 bytes)
2023-07-05 06:57:29,005 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:29,005 | DEBUG: Data: None
2023-07-05 06:57:29,006 | DEBUG: Response: 200 (10815 bytes)
2023-07-05 06:57:29,006 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:29,014 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qo4d2/
2023-07-05 06:57:29,017 | DEBUG: Data: None
2023-07-05 06:57:29,017 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:29,360 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2394
2023-07-05 06:57:29,361 | DEBUG: Response: 200 (2394 bytes)
2023-07-05 06:57:29,362 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:29,362 | DEBUG: Data: None
2023-07-05 06:57:29,362 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:29,592 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qo4d2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14303
2023-07-05 06:57:29,593 | DEBUG: Response: 200 (14303 bytes)
2023-07-05 06:57:29,602 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:29,602 | DEBUG: Data: None
2023-07-05 06:57:29,602 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:29,923 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2392
2023-07-05 06:57:29,924 | DEBUG: Response: 200 (2392 bytes)
2023-07-05 06:57:29,928 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:29,928 | DEBUG: Data: None
2023-07-05 06:57:29,928 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:29,970 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14033
2023-07-05 06:57:30,162 | DEBUG: Response: 200 (14033 bytes)
2023-07-05 06:57:30,171 | INFO: 127.0.0.1 - - [05/Jul/2023 06:57:30] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-05 06:57:30,177 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:30,177 | DEBUG: Data: None
2023-07-05 06:57:30,177 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:30,500 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2531
2023-07-05 06:57:30,502 | DEBUG: Response: 200 (2531 bytes)
2023-07-05 06:57:30,503 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:30,503 | DEBUG: Data: None
2023-07-05 06:57:30,503 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:30,514 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14041
2023-07-05 06:57:30,723 | DEBUG: Response: 200 (14041 bytes)
2023-07-05 06:57:30,733 | INFO: 127.0.0.1 - - [05/Jul/2023 06:57:30] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-05 06:57:30,849 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4846
2023-07-05 06:57:30,850 | DEBUG: Response: 200 (4846 bytes)
2023-07-05 06:57:30,853 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:30,854 | DEBUG: Data: None
2023-07-05 06:57:30,854 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:31,148 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:31,148 | DEBUG: Data: None
2023-07-05 06:57:31,148 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:31,213 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5827
2023-07-05 06:57:31,216 | DEBUG: Response: 200 (5827 bytes)
2023-07-05 06:57:31,218 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:31,218 | DEBUG: Data: None
2023-07-05 06:57:31,218 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:31,444 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2530
2023-07-05 06:57:31,448 | DEBUG: Response: 200 (2530 bytes)
2023-07-05 06:57:31,451 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:31,452 | DEBUG: Data: None
2023-07-05 06:57:31,452 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:31,752 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10808
2023-07-05 06:57:31,755 | DEBUG: Response: 200 (10808 bytes)
2023-07-05 06:57:31,773 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:31,774 | DEBUG: Data: None
2023-07-05 06:57:31,774 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:31,843 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4847
2023-07-05 06:57:31,845 | DEBUG: Response: 200 (4847 bytes)
2023-07-05 06:57:31,848 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:31,848 | DEBUG: Data: None
2023-07-05 06:57:31,849 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:32,206 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5825
2023-07-05 06:57:32,207 | DEBUG: Response: 200 (5825 bytes)
2023-07-05 06:57:32,208 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:32,208 | DEBUG: Data: None
2023-07-05 06:57:32,209 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:32,554 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14046
2023-07-05 06:57:32,756 | DEBUG: Response: 200 (14046 bytes)
2023-07-05 06:57:32,823 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 06:57:32,823 | DEBUG: Data: None
2023-07-05 06:57:32,823 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:32,922 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10807
2023-07-05 06:57:32,937 | DEBUG: Response: 200 (10807 bytes)
2023-07-05 06:57:32,941 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:32,941 | DEBUG: Data: None
2023-07-05 06:57:32,942 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:33,207 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4407
2023-07-05 06:57:33,211 | DEBUG: Response: 200 (4407 bytes)
2023-07-05 06:57:33,212 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:33,212 | DEBUG: Data: None
2023-07-05 06:57:33,212 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:33,596 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4847
2023-07-05 06:57:33,598 | DEBUG: Response: 200 (4847 bytes)
2023-07-05 06:57:33,601 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:33,601 | DEBUG: Data: None
2023-07-05 06:57:33,601 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:33,795 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14034
2023-07-05 06:57:33,797 | DEBUG: Response: 200 (14034 bytes)
2023-07-05 06:57:33,809 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 06:57:33,809 | DEBUG: Data: None
2023-07-05 06:57:33,809 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:33,940 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2918
2023-07-05 06:57:33,941 | DEBUG: Response: 200 (2918 bytes)
2023-07-05 06:57:33,941 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:33,941 | DEBUG: Data: None
2023-07-05 06:57:33,942 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:34,167 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4410
2023-07-05 06:57:34,169 | DEBUG: Response: 200 (4410 bytes)
2023-07-05 06:57:34,172 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:34,172 | DEBUG: Data: None
2023-07-05 06:57:34,172 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:34,458 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10818
2023-07-05 06:57:34,465 | DEBUG: Response: 200 (10818 bytes)
2023-07-05 06:57:34,470 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qo4d2/
2023-07-05 06:57:34,470 | DEBUG: Data: None
2023-07-05 06:57:34,470 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:34,528 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4845
2023-07-05 06:57:34,528 | DEBUG: Response: 200 (4845 bytes)
2023-07-05 06:57:34,530 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:34,530 | DEBUG: Data: None
2023-07-05 06:57:34,530 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:34,857 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2923
2023-07-05 06:57:34,858 | DEBUG: Response: 200 (2923 bytes)
2023-07-05 06:57:34,860 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:34,860 | DEBUG: Data: None
2023-07-05 06:57:34,860 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:35,121 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qo4d2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14308
2023-07-05 06:57:35,334 | DEBUG: Response: 200 (14308 bytes)
2023-07-05 06:57:35,345 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:35,345 | DEBUG: Data: None
2023-07-05 06:57:35,345 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:35,363 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10807
2023-07-05 06:57:35,376 | DEBUG: Response: 200 (10807 bytes)
2023-07-05 06:57:35,381 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qo4d2/
2023-07-05 06:57:35,381 | DEBUG: Data: None
2023-07-05 06:57:35,381 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:35,669 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2391
2023-07-05 06:57:35,669 | DEBUG: Response: 200 (2391 bytes)
2023-07-05 06:57:35,670 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:35,670 | DEBUG: Data: None
2023-07-05 06:57:35,671 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:36,109 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qo4d2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14295
2023-07-05 06:57:36,111 | DEBUG: Response: 200 (14295 bytes)
2023-07-05 06:57:36,117 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:36,117 | DEBUG: Data: None
2023-07-05 06:57:36,117 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:36,251 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14038
2023-07-05 06:57:36,439 | DEBUG: Response: 200 (14038 bytes)
2023-07-05 06:57:36,447 | INFO: 127.0.0.1 - - [05/Jul/2023 06:57:36] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-05 06:57:36,447 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2395
2023-07-05 06:57:36,449 | DEBUG: Response: 200 (2395 bytes)
2023-07-05 06:57:36,450 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:36,450 | DEBUG: Data: None
2023-07-05 06:57:36,451 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:36,457 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:36,457 | DEBUG: Data: None
2023-07-05 06:57:36,457 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:36,804 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2532
2023-07-05 06:57:36,805 | DEBUG: Response: 200 (2532 bytes)
2023-07-05 06:57:36,806 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:36,806 | DEBUG: Data: None
2023-07-05 06:57:36,806 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:37,045 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14031
2023-07-05 06:57:37,177 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4849
2023-07-05 06:57:37,178 | DEBUG: Response: 200 (4849 bytes)
2023-07-05 06:57:37,180 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:37,181 | DEBUG: Data: None
2023-07-05 06:57:37,181 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:37,245 | DEBUG: Response: 200 (14031 bytes)
2023-07-05 06:57:37,254 | INFO: 127.0.0.1 - - [05/Jul/2023 06:57:37] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-05 06:57:37,560 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5817
2023-07-05 06:57:37,562 | DEBUG: Response: 200 (5817 bytes)
2023-07-05 06:57:37,564 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:37,564 | DEBUG: Data: None
2023-07-05 06:57:37,564 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:37,639 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:37,639 | DEBUG: Data: None
2023-07-05 06:57:37,639 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:37,946 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2530
2023-07-05 06:57:37,948 | DEBUG: Response: 200 (2530 bytes)
2023-07-05 06:57:37,949 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:37,949 | DEBUG: Data: None
2023-07-05 06:57:37,949 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:38,191 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10802
2023-07-05 06:57:38,196 | DEBUG: Response: 200 (10802 bytes)
2023-07-05 06:57:38,203 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:38,203 | DEBUG: Data: None
2023-07-05 06:57:38,203 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:38,311 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4846
2023-07-05 06:57:38,312 | DEBUG: Response: 200 (4846 bytes)
2023-07-05 06:57:38,314 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:38,315 | DEBUG: Data: None
2023-07-05 06:57:38,315 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:38,671 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5820
2023-07-05 06:57:38,674 | DEBUG: Response: 200 (5820 bytes)
2023-07-05 06:57:38,676 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:38,676 | DEBUG: Data: None
2023-07-05 06:57:38,676 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:38,990 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14037
2023-07-05 06:57:38,993 | DEBUG: Response: 200 (14037 bytes)
2023-07-05 06:57:39,005 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 06:57:39,006 | DEBUG: Data: None
2023-07-05 06:57:39,006 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:39,271 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10810
2023-07-05 06:57:39,273 | DEBUG: Response: 200 (10810 bytes)
2023-07-05 06:57:39,281 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:39,281 | DEBUG: Data: None
2023-07-05 06:57:39,281 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:39,367 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4401
2023-07-05 06:57:39,369 | DEBUG: Response: 200 (4401 bytes)
2023-07-05 06:57:39,370 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:39,370 | DEBUG: Data: None
2023-07-05 06:57:39,370 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:39,731 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4848
2023-07-05 06:57:39,733 | DEBUG: Response: 200 (4848 bytes)
2023-07-05 06:57:39,736 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:39,736 | DEBUG: Data: None
2023-07-05 06:57:39,736 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:39,931 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14041
2023-07-05 06:57:40,078 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2922
2023-07-05 06:57:40,079 | DEBUG: Response: 200 (2922 bytes)
2023-07-05 06:57:40,080 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:40,080 | DEBUG: Data: None
2023-07-05 06:57:40,081 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:40,120 | DEBUG: Response: 200 (14041 bytes)
2023-07-05 06:57:40,132 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 06:57:40,132 | DEBUG: Data: None
2023-07-05 06:57:40,133 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:40,499 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4403
2023-07-05 06:57:40,501 | DEBUG: Response: 200 (4403 bytes)
2023-07-05 06:57:40,502 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:40,502 | DEBUG: Data: None
2023-07-05 06:57:40,502 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:40,578 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10811
2023-07-05 06:57:40,581 | DEBUG: Response: 200 (10811 bytes)
2023-07-05 06:57:40,585 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qo4d2/
2023-07-05 06:57:40,585 | DEBUG: Data: None
2023-07-05 06:57:40,585 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:40,848 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4846
2023-07-05 06:57:40,849 | DEBUG: Response: 200 (4846 bytes)
2023-07-05 06:57:40,850 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:40,850 | DEBUG: Data: None
2023-07-05 06:57:40,850 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:41,157 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2921
2023-07-05 06:57:41,158 | DEBUG: Response: 200 (2921 bytes)
2023-07-05 06:57:41,159 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:41,159 | DEBUG: Data: None
2023-07-05 06:57:41,159 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:41,379 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qo4d2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14298
2023-07-05 06:57:41,387 | DEBUG: Response: 200 (14298 bytes)
2023-07-05 06:57:41,393 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:41,393 | DEBUG: Data: None
2023-07-05 06:57:41,393 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:41,662 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10817
2023-07-05 06:57:41,663 | DEBUG: Response: 200 (10817 bytes)
2023-07-05 06:57:41,667 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qo4d2/
2023-07-05 06:57:41,667 | DEBUG: Data: None
2023-07-05 06:57:41,667 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:41,724 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2394
2023-07-05 06:57:41,724 | DEBUG: Response: 200 (2394 bytes)
2023-07-05 06:57:41,725 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:41,725 | DEBUG: Data: None
2023-07-05 06:57:41,725 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:42,331 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qo4d2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14305
2023-07-05 06:57:42,544 | DEBUG: Response: 200 (14305 bytes)
2023-07-05 06:57:42,551 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:42,551 | DEBUG: Data: None
2023-07-05 06:57:42,551 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:42,620 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14037
2023-07-05 06:57:42,622 | DEBUG: Response: 200 (14037 bytes)
2023-07-05 06:57:42,630 | INFO: 127.0.0.1 - - [05/Jul/2023 06:57:42] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-05 06:57:42,636 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:42,637 | DEBUG: Data: None
2023-07-05 06:57:42,637 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:42,867 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2395
2023-07-05 06:57:42,868 | DEBUG: Response: 200 (2395 bytes)
2023-07-05 06:57:42,868 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:42,868 | DEBUG: Data: None
2023-07-05 06:57:42,868 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:42,959 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2530
2023-07-05 06:57:42,960 | DEBUG: Response: 200 (2530 bytes)
2023-07-05 06:57:42,960 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:42,960 | DEBUG: Data: None
2023-07-05 06:57:42,960 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:43,349 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4845
2023-07-05 06:57:43,351 | DEBUG: Response: 200 (4845 bytes)
2023-07-05 06:57:43,352 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:43,352 | DEBUG: Data: None
2023-07-05 06:57:43,352 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:43,675 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14038
2023-07-05 06:57:43,676 | DEBUG: Response: 200 (14038 bytes)
2023-07-05 06:57:43,682 | INFO: 127.0.0.1 - - [05/Jul/2023 06:57:43] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-05 06:57:43,688 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:43,688 | DEBUG: Data: None
2023-07-05 06:57:43,688 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:43,720 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5816
2023-07-05 06:57:43,722 | DEBUG: Response: 200 (5816 bytes)
2023-07-05 06:57:43,724 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:43,724 | DEBUG: Data: None
2023-07-05 06:57:43,725 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:44,002 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2530
2023-07-05 06:57:44,003 | DEBUG: Response: 200 (2530 bytes)
2023-07-05 06:57:44,004 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:44,005 | DEBUG: Data: None
2023-07-05 06:57:44,005 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:44,327 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10813
2023-07-05 06:57:44,332 | DEBUG: Response: 200 (10813 bytes)
2023-07-05 06:57:44,336 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:44,336 | DEBUG: Data: None
2023-07-05 06:57:44,336 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:44,372 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4848
2023-07-05 06:57:44,373 | DEBUG: Response: 200 (4848 bytes)
2023-07-05 06:57:44,374 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:44,374 | DEBUG: Data: None
2023-07-05 06:57:44,374 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:44,594 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:44,594 | DEBUG: Data: None
2023-07-05 06:57:44,594 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:44,596 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:44,596 | DEBUG: Data: None
2023-07-05 06:57:44,596 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:44,600 | DEBUG: Starting new HTTPS connection (3): oauth.reddit.com:443
2023-07-05 06:57:44,600 | DEBUG: Starting new HTTPS connection (4): oauth.reddit.com:443
2023-07-05 06:57:44,726 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5819
2023-07-05 06:57:44,727 | DEBUG: Response: 200 (5819 bytes)
2023-07-05 06:57:44,729 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:44,729 | DEBUG: Data: None
2023-07-05 06:57:44,729 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:45,105 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2531
2023-07-05 06:57:45,105 | DEBUG: Response: 200 (2531 bytes)
2023-07-05 06:57:45,106 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:45,106 | DEBUG: Data: None
2023-07-05 06:57:45,106 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:45,112 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2532
2023-07-05 06:57:45,113 | DEBUG: Response: 200 (2532 bytes)
2023-07-05 06:57:45,113 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:45,113 | DEBUG: Data: None
2023-07-05 06:57:45,113 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:45,131 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14040
2023-07-05 06:57:45,136 | DEBUG: Response: 200 (14040 bytes)
2023-07-05 06:57:45,144 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 06:57:45,144 | DEBUG: Data: None
2023-07-05 06:57:45,144 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:45,273 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10805
2023-07-05 06:57:45,274 | DEBUG: Response: 200 (10805 bytes)
2023-07-05 06:57:45,278 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:45,278 | DEBUG: Data: None
2023-07-05 06:57:45,279 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:45,448 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4846
2023-07-05 06:57:45,449 | DEBUG: Response: 200 (4846 bytes)
2023-07-05 06:57:45,451 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:45,451 | DEBUG: Data: None
2023-07-05 06:57:45,451 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:45,461 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4849
2023-07-05 06:57:45,462 | DEBUG: Response: 200 (4849 bytes)
2023-07-05 06:57:45,463 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:45,463 | DEBUG: Data: None
2023-07-05 06:57:45,463 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:45,483 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4409
2023-07-05 06:57:45,484 | DEBUG: Response: 200 (4409 bytes)
2023-07-05 06:57:45,485 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:45,485 | DEBUG: Data: None
2023-07-05 06:57:45,485 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:45,778 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5829
2023-07-05 06:57:45,779 | DEBUG: Response: 200 (5829 bytes)
2023-07-05 06:57:45,780 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:45,780 | DEBUG: Data: None
2023-07-05 06:57:45,780 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:45,824 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5826
2023-07-05 06:57:45,825 | DEBUG: Response: 200 (5826 bytes)
2023-07-05 06:57:45,826 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:45,826 | DEBUG: Data: None
2023-07-05 06:57:45,826 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:45,846 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4845
2023-07-05 06:57:45,847 | DEBUG: Response: 200 (4845 bytes)
2023-07-05 06:57:45,848 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:45,848 | DEBUG: Data: None
2023-07-05 06:57:45,848 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:45,885 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14041
2023-07-05 06:57:46,096 | DEBUG: Response: 200 (14041 bytes)
2023-07-05 06:57:46,102 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 06:57:46,102 | DEBUG: Data: None
2023-07-05 06:57:46,102 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:46,182 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2922
2023-07-05 06:57:46,183 | DEBUG: Response: 200 (2922 bytes)
2023-07-05 06:57:46,184 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:46,184 | DEBUG: Data: None
2023-07-05 06:57:46,184 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:46,280 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10813
2023-07-05 06:57:46,281 | DEBUG: Response: 200 (10813 bytes)
2023-07-05 06:57:46,288 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:46,288 | DEBUG: Data: None
2023-07-05 06:57:46,288 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:46,340 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10808
2023-07-05 06:57:46,344 | DEBUG: Response: 200 (10808 bytes)
2023-07-05 06:57:46,350 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:46,350 | DEBUG: Data: None
2023-07-05 06:57:46,350 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:46,449 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4404
2023-07-05 06:57:46,450 | DEBUG: Response: 200 (4404 bytes)
2023-07-05 06:57:46,451 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:46,452 | DEBUG: Data: None
2023-07-05 06:57:46,452 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:46,689 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10806
2023-07-05 06:57:46,693 | DEBUG: Response: 200 (10806 bytes)
2023-07-05 06:57:46,697 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qo4d2/
2023-07-05 06:57:46,698 | DEBUG: Data: None
2023-07-05 06:57:46,698 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:46,805 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4843
2023-07-05 06:57:46,806 | DEBUG: Response: 200 (4843 bytes)
2023-07-05 06:57:46,808 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:46,808 | DEBUG: Data: None
2023-07-05 06:57:46,808 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:46,873 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14043
2023-07-05 06:57:47,061 | DEBUG: Response: 200 (14043 bytes)
2023-07-05 06:57:47,069 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 06:57:47,069 | DEBUG: Data: None
2023-07-05 06:57:47,069 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:47,124 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2921
2023-07-05 06:57:47,126 | DEBUG: Response: 200 (2921 bytes)
2023-07-05 06:57:47,126 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:47,126 | DEBUG: Data: None
2023-07-05 06:57:47,127 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:47,137 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14032
2023-07-05 06:57:47,144 | DEBUG: Response: 200 (14032 bytes)
2023-07-05 06:57:47,151 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 06:57:47,152 | DEBUG: Data: None
2023-07-05 06:57:47,152 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:47,416 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4407
2023-07-05 06:57:47,417 | DEBUG: Response: 200 (4407 bytes)
2023-07-05 06:57:47,419 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:47,419 | DEBUG: Data: None
2023-07-05 06:57:47,419 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:47,497 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4399
2023-07-05 06:57:47,498 | DEBUG: Response: 200 (4399 bytes)
2023-07-05 06:57:47,500 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:47,500 | DEBUG: Data: None
2023-07-05 06:57:47,500 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:47,565 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qo4d2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14292
2023-07-05 06:57:47,568 | DEBUG: Response: 200 (14292 bytes)
2023-07-05 06:57:47,574 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:47,574 | DEBUG: Data: None
2023-07-05 06:57:47,574 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:47,639 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10810
2023-07-05 06:57:47,642 | DEBUG: Response: 200 (10810 bytes)
2023-07-05 06:57:47,653 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qo4d2/
2023-07-05 06:57:47,653 | DEBUG: Data: None
2023-07-05 06:57:47,653 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:47,782 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4844
2023-07-05 06:57:47,783 | DEBUG: Response: 200 (4844 bytes)
2023-07-05 06:57:47,785 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:47,785 | DEBUG: Data: None
2023-07-05 06:57:47,785 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:47,978 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2394
2023-07-05 06:57:47,979 | DEBUG: Response: 200 (2394 bytes)
2023-07-05 06:57:47,980 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:47,980 | DEBUG: Data: None
2023-07-05 06:57:47,980 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:48,191 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qo4d2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14289
2023-07-05 06:57:48,192 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2922
2023-07-05 06:57:48,193 | DEBUG: Response: 200 (2922 bytes)
2023-07-05 06:57:48,195 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:48,195 | DEBUG: Data: None
2023-07-05 06:57:48,195 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:48,232 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4846
2023-07-05 06:57:48,233 | DEBUG: Response: 200 (4846 bytes)
2023-07-05 06:57:48,234 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:48,235 | DEBUG: Data: None
2023-07-05 06:57:48,235 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:48,375 | DEBUG: Response: 200 (14289 bytes)
2023-07-05 06:57:48,383 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:48,383 | DEBUG: Data: None
2023-07-05 06:57:48,383 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:48,552 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2919
2023-07-05 06:57:48,554 | DEBUG: Response: 200 (2919 bytes)
2023-07-05 06:57:48,556 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:48,556 | DEBUG: Data: None
2023-07-05 06:57:48,556 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:48,695 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10816
2023-07-05 06:57:48,697 | DEBUG: Response: 200 (10816 bytes)
2023-07-05 06:57:48,701 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qo4d2/
2023-07-05 06:57:48,701 | DEBUG: Data: None
2023-07-05 06:57:48,701 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:48,704 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2393
2023-07-05 06:57:48,704 | DEBUG: Response: 200 (2393 bytes)
2023-07-05 06:57:48,705 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:48,705 | DEBUG: Data: None
2023-07-05 06:57:48,705 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:48,794 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14041
2023-07-05 06:57:48,795 | DEBUG: Response: 200 (14041 bytes)
2023-07-05 06:57:48,802 | INFO: 127.0.0.1 - - [05/Jul/2023 06:57:48] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-05 06:57:48,807 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:48,807 | DEBUG: Data: None
2023-07-05 06:57:48,807 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:49,111 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2530
2023-07-05 06:57:49,111 | DEBUG: Response: 200 (2530 bytes)
2023-07-05 06:57:49,112 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:49,112 | DEBUG: Data: None
2023-07-05 06:57:49,112 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:49,126 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10808
2023-07-05 06:57:49,128 | DEBUG: Response: 200 (10808 bytes)
2023-07-05 06:57:49,134 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qo4d2/
2023-07-05 06:57:49,134 | DEBUG: Data: None
2023-07-05 06:57:49,134 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:49,430 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14040
2023-07-05 06:57:49,433 | DEBUG: Response: 200 (14040 bytes)
2023-07-05 06:57:49,439 | INFO: 127.0.0.1 - - [05/Jul/2023 06:57:49] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-05 06:57:49,478 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4845
2023-07-05 06:57:49,479 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qo4d2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14299
2023-07-05 06:57:49,480 | DEBUG: Response: 200 (4845 bytes)
2023-07-05 06:57:49,482 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:49,482 | DEBUG: Data: None
2023-07-05 06:57:49,482 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:49,485 | DEBUG: Response: 200 (14299 bytes)
2023-07-05 06:57:49,492 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:49,492 | DEBUG: Data: None
2023-07-05 06:57:49,492 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:49,810 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2393
2023-07-05 06:57:49,810 | DEBUG: Response: 200 (2393 bytes)
2023-07-05 06:57:49,811 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:49,811 | DEBUG: Data: None
2023-07-05 06:57:49,811 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:49,847 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5816
2023-07-05 06:57:49,848 | DEBUG: Response: 200 (5816 bytes)
2023-07-05 06:57:49,850 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:49,850 | DEBUG: Data: None
2023-07-05 06:57:49,850 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:49,878 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qo4d2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14302
2023-07-05 06:57:49,882 | DEBUG: Response: 200 (14302 bytes)
2023-07-05 06:57:49,887 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:49,887 | DEBUG: Data: None
2023-07-05 06:57:49,887 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:50,229 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2392
2023-07-05 06:57:50,230 | DEBUG: Response: 200 (2392 bytes)
2023-07-05 06:57:50,231 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:50,231 | DEBUG: Data: None
2023-07-05 06:57:50,231 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:50,434 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10815
2023-07-05 06:57:50,436 | DEBUG: Response: 200 (10815 bytes)
2023-07-05 06:57:50,440 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:50,440 | DEBUG: Data: None
2023-07-05 06:57:50,440 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:50,678 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14039
2023-07-05 06:57:50,681 | DEBUG: Response: 200 (14039 bytes)
2023-07-05 06:57:50,687 | INFO: 127.0.0.1 - - [05/Jul/2023 06:57:50] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-05 06:57:51,021 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14040
2023-07-05 06:57:51,025 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14041
2023-07-05 06:57:51,027 | DEBUG: Response: 200 (14041 bytes)
2023-07-05 06:57:51,032 | INFO: 127.0.0.1 - - [05/Jul/2023 06:57:51] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-05 06:57:51,216 | DEBUG: Response: 200 (14040 bytes)
2023-07-05 06:57:51,221 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 06:57:51,222 | DEBUG: Data: None
2023-07-05 06:57:51,222 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:51,550 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4408
2023-07-05 06:57:51,551 | DEBUG: Response: 200 (4408 bytes)
2023-07-05 06:57:51,553 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 06:57:51,553 | DEBUG: Data: None
2023-07-05 06:57:51,553 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:51,903 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4845
2023-07-05 06:57:51,904 | DEBUG: Response: 200 (4845 bytes)
2023-07-05 06:57:51,906 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:51,906 | DEBUG: Data: None
2023-07-05 06:57:51,906 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:52,252 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2922
2023-07-05 06:57:52,254 | DEBUG: Response: 200 (2922 bytes)
2023-07-05 06:57:52,255 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 06:57:52,256 | DEBUG: Data: None
2023-07-05 06:57:52,256 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:52,748 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10804
2023-07-05 06:57:52,750 | DEBUG: Response: 200 (10804 bytes)
2023-07-05 06:57:52,755 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qo4d2/
2023-07-05 06:57:52,755 | DEBUG: Data: None
2023-07-05 06:57:52,755 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:53,503 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qo4d2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14298
2023-07-05 06:57:53,517 | DEBUG: Response: 200 (14298 bytes)
2023-07-05 06:57:53,525 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 06:57:53,525 | DEBUG: Data: None
2023-07-05 06:57:53,525 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 06:57:53,945 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2393
2023-07-05 06:57:53,946 | DEBUG: Response: 200 (2393 bytes)
2023-07-05 06:57:53,946 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 06:57:53,946 | DEBUG: Data: None
2023-07-05 06:57:53,946 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 06:57:54,660 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14036
2023-07-05 06:57:54,662 | DEBUG: Response: 200 (14036 bytes)
2023-07-05 06:57:54,668 | INFO: 127.0.0.1 - - [05/Jul/2023 06:57:54] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-05 07:00:02,184 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:00:02,184 | DEBUG: Data: None
2023-07-05 07:00:02,184 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:00:02,549 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2528
2023-07-05 07:00:02,551 | DEBUG: Response: 200 (2528 bytes)
2023-07-05 07:00:02,553 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:00:02,553 | DEBUG: Data: None
2023-07-05 07:00:02,553 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:00:02,954 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4848
2023-07-05 07:00:02,957 | DEBUG: Response: 200 (4848 bytes)
2023-07-05 07:00:02,958 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:00:02,958 | DEBUG: Data: None
2023-07-05 07:00:02,958 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:00:03,317 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5820
2023-07-05 07:00:03,318 | DEBUG: Response: 200 (5820 bytes)
2023-07-05 07:00:03,319 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 07:00:03,319 | DEBUG: Data: None
2023-07-05 07:00:03,320 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:00:03,862 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10818
2023-07-05 07:00:03,864 | DEBUG: Response: 200 (10818 bytes)
2023-07-05 07:00:03,869 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 07:00:03,869 | DEBUG: Data: None
2023-07-05 07:00:03,869 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:00:04,488 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14032
2023-07-05 07:00:04,684 | DEBUG: Response: 200 (14032 bytes)
2023-07-05 07:00:04,695 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 07:00:04,695 | DEBUG: Data: None
2023-07-05 07:00:04,695 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:00:04,695 | DEBUG: Sleeping: 0.49 seconds prior to call
2023-07-05 07:00:05,530 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4409
2023-07-05 07:00:05,532 | DEBUG: Response: 200 (4409 bytes)
2023-07-05 07:00:05,534 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:00:05,534 | DEBUG: Data: None
2023-07-05 07:00:05,534 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:00:05,534 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-05 07:00:06,439 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4847
2023-07-05 07:00:06,440 | DEBUG: Response: 200 (4847 bytes)
2023-07-05 07:00:06,442 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:00:06,442 | DEBUG: Data: None
2023-07-05 07:00:06,442 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:00:06,442 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-05 07:00:07,276 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2922
2023-07-05 07:00:07,277 | DEBUG: Response: 200 (2922 bytes)
2023-07-05 07:00:07,278 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 07:00:07,278 | DEBUG: Data: None
2023-07-05 07:00:07,278 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:00:07,278 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-05 07:00:08,338 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10809
2023-07-05 07:00:08,340 | DEBUG: Response: 200 (10809 bytes)
2023-07-05 07:00:08,344 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qo4d2/
2023-07-05 07:00:08,344 | DEBUG: Data: None
2023-07-05 07:00:08,344 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:00:08,344 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-05 07:00:09,407 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qo4d2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14308
2023-07-05 07:00:09,410 | DEBUG: Response: 200 (14308 bytes)
2023-07-05 07:00:09,418 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:00:09,418 | DEBUG: Data: None
2023-07-05 07:00:09,418 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:00:09,418 | DEBUG: Sleeping: 0.49 seconds prior to call
2023-07-05 07:00:10,259 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2395
2023-07-05 07:00:10,260 | DEBUG: Response: 200 (2395 bytes)
2023-07-05 07:00:10,261 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 07:00:10,261 | DEBUG: Data: None
2023-07-05 07:00:10,261 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:00:10,261 | DEBUG: Sleeping: 0.50 seconds prior to call
2023-07-05 07:00:11,445 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14034
2023-07-05 07:00:11,638 | DEBUG: Response: 200 (14034 bytes)
2023-07-05 07:00:11,645 | INFO: 127.0.0.1 - - [05/Jul/2023 07:00:11] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-05 07:00:42,371 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:00:42,371 | DEBUG: Data: None
2023-07-05 07:00:42,371 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:00:42,677 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2529
2023-07-05 07:00:42,679 | DEBUG: Response: 200 (2529 bytes)
2023-07-05 07:00:42,681 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:00:42,681 | DEBUG: Data: None
2023-07-05 07:00:42,682 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:00:43,042 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4846
2023-07-05 07:00:43,043 | DEBUG: Response: 200 (4846 bytes)
2023-07-05 07:00:43,046 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:00:43,046 | DEBUG: Data: None
2023-07-05 07:00:43,046 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:00:43,415 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5814
2023-07-05 07:00:43,416 | DEBUG: Response: 200 (5814 bytes)
2023-07-05 07:00:43,418 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 07:00:43,418 | DEBUG: Data: None
2023-07-05 07:00:43,418 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:00:43,925 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10817
2023-07-05 07:00:43,927 | DEBUG: Response: 200 (10817 bytes)
2023-07-05 07:00:43,931 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 07:00:43,931 | DEBUG: Data: None
2023-07-05 07:00:43,931 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:00:44,804 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14044
2023-07-05 07:00:45,006 | DEBUG: Response: 200 (14044 bytes)
2023-07-05 07:00:45,012 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 07:00:45,012 | DEBUG: Data: None
2023-07-05 07:00:45,012 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:00:45,569 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4409
2023-07-05 07:00:45,570 | DEBUG: Response: 200 (4409 bytes)
2023-07-05 07:00:45,572 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:00:45,572 | DEBUG: Data: None
2023-07-05 07:00:45,572 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:00:45,937 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4848
2023-07-05 07:00:45,938 | DEBUG: Response: 200 (4848 bytes)
2023-07-05 07:00:45,939 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:00:45,939 | DEBUG: Data: None
2023-07-05 07:00:45,939 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:00:46,270 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2920
2023-07-05 07:00:46,271 | DEBUG: Response: 200 (2920 bytes)
2023-07-05 07:00:46,272 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 07:00:46,272 | DEBUG: Data: None
2023-07-05 07:00:46,272 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:00:46,762 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 10812
2023-07-05 07:00:46,764 | DEBUG: Response: 200 (10812 bytes)
2023-07-05 07:00:46,776 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qo4d2/
2023-07-05 07:00:46,777 | DEBUG: Data: None
2023-07-05 07:00:46,777 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:00:47,563 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qo4d2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14308
2023-07-05 07:00:47,761 | DEBUG: Response: 200 (14308 bytes)
2023-07-05 07:00:47,767 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:00:47,767 | DEBUG: Data: None
2023-07-05 07:00:47,767 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:00:48,107 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2395
2023-07-05 07:00:48,108 | DEBUG: Response: 200 (2395 bytes)
2023-07-05 07:00:48,108 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 07:00:48,108 | DEBUG: Data: None
2023-07-05 07:00:48,108 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:00:48,919 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14044
2023-07-05 07:00:49,116 | DEBUG: Response: 200 (14044 bytes)
2023-07-05 07:00:49,122 | INFO: 127.0.0.1 - - [05/Jul/2023 07:00:49] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-05 07:02:26,537 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:02:26,538 | DEBUG: Data: None
2023-07-05 07:02:26,538 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:02:26,659 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:02:26,660 | DEBUG: Data: None
2023-07-05 07:02:26,660 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:02:26,812 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 07:02:26,813 | DEBUG: Response: 200 (136 bytes)
2023-07-05 07:02:26,814 | INFO: 127.0.0.1 - - [05/Jul/2023 07:02:26] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-05 07:02:26,984 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2528
2023-07-05 07:02:26,985 | DEBUG: Response: 200 (2528 bytes)
2023-07-05 07:02:26,986 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:02:26,986 | DEBUG: Data: None
2023-07-05 07:02:26,987 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:02:26,993 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:02:26,993 | DEBUG: Data: None
2023-07-05 07:02:26,993 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:02:27,308 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2527
2023-07-05 07:02:27,310 | DEBUG: Response: 200 (2527 bytes)
2023-07-05 07:02:27,311 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:02:27,311 | DEBUG: Data: None
2023-07-05 07:02:27,311 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:02:27,528 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4848
2023-07-05 07:02:27,530 | DEBUG: Response: 200 (4848 bytes)
2023-07-05 07:02:27,531 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:02:27,531 | DEBUG: Data: None
2023-07-05 07:02:27,531 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:02:27,674 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4847
2023-07-05 07:02:27,677 | DEBUG: Response: 200 (4847 bytes)
2023-07-05 07:02:27,681 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:02:27,681 | DEBUG: Data: None
2023-07-05 07:02:27,681 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:02:27,920 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5817
2023-07-05 07:02:27,921 | DEBUG: Response: 200 (5817 bytes)
2023-07-05 07:02:27,924 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 07:02:27,924 | DEBUG: Data: None
2023-07-05 07:02:27,925 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:02:28,005 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5824
2023-07-05 07:02:28,007 | DEBUG: Response: 200 (5824 bytes)
2023-07-05 07:02:28,009 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 07:02:28,010 | DEBUG: Data: None
2023-07-05 07:02:28,010 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:02:28,463 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 11025
2023-07-05 07:02:28,465 | DEBUG: Response: 200 (11025 bytes)
2023-07-05 07:02:28,470 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 07:02:28,470 | DEBUG: Data: None
2023-07-05 07:02:28,470 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:02:28,506 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 11022
2023-07-05 07:02:28,508 | DEBUG: Response: 200 (11022 bytes)
2023-07-05 07:02:28,512 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 07:02:28,512 | DEBUG: Data: None
2023-07-05 07:02:28,512 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:02:29,153 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14032
2023-07-05 07:02:29,340 | DEBUG: Response: 200 (14032 bytes)
2023-07-05 07:02:29,346 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 07:02:29,346 | DEBUG: Data: None
2023-07-05 07:02:29,346 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:02:29,712 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4399
2023-07-05 07:02:29,713 | DEBUG: Response: 200 (4399 bytes)
2023-07-05 07:02:29,714 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:02:29,714 | DEBUG: Data: None
2023-07-05 07:02:29,714 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:02:29,924 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14036
2023-07-05 07:02:29,926 | DEBUG: Response: 200 (14036 bytes)
2023-07-05 07:02:29,932 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 07:02:29,932 | DEBUG: Data: None
2023-07-05 07:02:29,933 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:02:30,074 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4848
2023-07-05 07:02:30,075 | DEBUG: Response: 200 (4848 bytes)
2023-07-05 07:02:30,076 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:02:30,076 | DEBUG: Data: None
2023-07-05 07:02:30,076 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:02:30,281 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4402
2023-07-05 07:02:30,282 | DEBUG: Response: 200 (4402 bytes)
2023-07-05 07:02:30,283 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:02:30,283 | DEBUG: Data: None
2023-07-05 07:02:30,283 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:02:30,406 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2923
2023-07-05 07:02:30,408 | DEBUG: Response: 200 (2923 bytes)
2023-07-05 07:02:30,410 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 07:02:30,410 | DEBUG: Data: None
2023-07-05 07:02:30,410 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:02:30,637 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4847
2023-07-05 07:02:30,638 | DEBUG: Response: 200 (4847 bytes)
2023-07-05 07:02:30,643 | INFO: 127.0.0.1 - - [05/Jul/2023 07:02:30] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-05 07:02:30,903 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 11029
2023-07-05 07:02:30,908 | DEBUG: Response: 200 (11029 bytes)
2023-07-05 07:02:30,912 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qo4d2/
2023-07-05 07:02:30,913 | DEBUG: Data: None
2023-07-05 07:02:30,913 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:02:31,474 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qo4d2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14308
2023-07-05 07:02:31,667 | DEBUG: Response: 200 (14308 bytes)
2023-07-05 07:02:31,674 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:02:31,674 | DEBUG: Data: None
2023-07-05 07:02:31,674 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:02:32,014 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2392
2023-07-05 07:02:32,015 | DEBUG: Response: 200 (2392 bytes)
2023-07-05 07:02:32,015 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 07:02:32,015 | DEBUG: Data: None
2023-07-05 07:02:32,015 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:02:32,612 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14040
2023-07-05 07:02:32,812 | DEBUG: Response: 200 (14040 bytes)
2023-07-05 07:02:32,820 | INFO: 127.0.0.1 - - [05/Jul/2023 07:02:32] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-05 07:02:38,320 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:02:38,320 | DEBUG: Data: None
2023-07-05 07:02:38,320 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:02:38,405 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:02:38,405 | DEBUG: Data: None
2023-07-05 07:02:38,406 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:02:38,593 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 07:02:38,594 | DEBUG: Response: 200 (136 bytes)
2023-07-05 07:02:38,596 | INFO: 127.0.0.1 - - [05/Jul/2023 07:02:38] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-05 07:02:38,690 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:02:38,691 | DEBUG: Data: None
2023-07-05 07:02:38,691 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:02:38,768 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2528
2023-07-05 07:02:38,770 | DEBUG: Response: 200 (2528 bytes)
2023-07-05 07:02:38,771 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:02:38,771 | DEBUG: Data: None
2023-07-05 07:02:38,771 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:02:39,004 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2528
2023-07-05 07:02:39,005 | DEBUG: Response: 200 (2528 bytes)
2023-07-05 07:02:39,006 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:02:39,006 | DEBUG: Data: None
2023-07-05 07:02:39,006 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:02:39,131 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4848
2023-07-05 07:02:39,132 | DEBUG: Response: 200 (4848 bytes)
2023-07-05 07:02:39,134 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:02:39,134 | DEBUG: Data: None
2023-07-05 07:02:39,134 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:02:39,360 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4845
2023-07-05 07:02:39,362 | DEBUG: Response: 200 (4845 bytes)
2023-07-05 07:02:39,364 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:02:39,364 | DEBUG: Data: None
2023-07-05 07:02:39,364 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:02:39,510 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5825
2023-07-05 07:02:39,512 | DEBUG: Response: 200 (5825 bytes)
2023-07-05 07:02:39,514 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 07:02:39,514 | DEBUG: Data: None
2023-07-05 07:02:39,514 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:02:39,718 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5817
2023-07-05 07:02:39,719 | DEBUG: Response: 200 (5817 bytes)
2023-07-05 07:02:39,720 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 07:02:39,720 | DEBUG: Data: None
2023-07-05 07:02:39,720 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:02:40,078 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 11036
2023-07-05 07:02:40,081 | DEBUG: Response: 200 (11036 bytes)
2023-07-05 07:02:40,085 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 07:02:40,085 | DEBUG: Data: None
2023-07-05 07:02:40,085 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:02:40,311 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 11032
2023-07-05 07:02:40,313 | DEBUG: Response: 200 (11032 bytes)
2023-07-05 07:02:40,318 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 07:02:40,318 | DEBUG: Data: None
2023-07-05 07:02:40,319 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:02:40,675 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14034
2023-07-05 07:02:40,860 | DEBUG: Response: 200 (14034 bytes)
2023-07-05 07:02:40,866 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 07:02:40,866 | DEBUG: Data: None
2023-07-05 07:02:40,866 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:02:40,904 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14036
2023-07-05 07:02:40,907 | DEBUG: Response: 200 (14036 bytes)
2023-07-05 07:02:40,914 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 07:02:40,914 | DEBUG: Data: None
2023-07-05 07:02:40,914 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:02:41,225 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4402
2023-07-05 07:02:41,227 | DEBUG: Response: 200 (4402 bytes)
2023-07-05 07:02:41,229 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:02:41,229 | DEBUG: Data: None
2023-07-05 07:02:41,229 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:02:41,319 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4408
2023-07-05 07:02:41,320 | DEBUG: Response: 200 (4408 bytes)
2023-07-05 07:02:41,321 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:02:41,321 | DEBUG: Data: None
2023-07-05 07:02:41,321 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:02:41,572 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4848
2023-07-05 07:02:41,574 | DEBUG: Response: 200 (4848 bytes)
2023-07-05 07:02:41,576 | INFO: 127.0.0.1 - - [05/Jul/2023 07:02:41] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-05 07:02:41,713 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4847
2023-07-05 07:02:41,714 | DEBUG: Response: 200 (4847 bytes)
2023-07-05 07:02:41,716 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:02:41,716 | DEBUG: Data: None
2023-07-05 07:02:41,716 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:02:42,062 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2922
2023-07-05 07:02:42,063 | DEBUG: Response: 200 (2922 bytes)
2023-07-05 07:02:42,064 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 07:02:42,064 | DEBUG: Data: None
2023-07-05 07:02:42,064 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:02:42,593 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 11025
2023-07-05 07:02:42,595 | DEBUG: Response: 200 (11025 bytes)
2023-07-05 07:02:42,598 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qo4d2/
2023-07-05 07:02:42,598 | DEBUG: Data: None
2023-07-05 07:02:42,599 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:02:43,196 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qo4d2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14308
2023-07-05 07:02:43,384 | DEBUG: Response: 200 (14308 bytes)
2023-07-05 07:02:43,391 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:02:43,391 | DEBUG: Data: None
2023-07-05 07:02:43,391 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:02:43,920 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2395
2023-07-05 07:02:43,921 | DEBUG: Response: 200 (2395 bytes)
2023-07-05 07:02:43,921 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 07:02:43,922 | DEBUG: Data: None
2023-07-05 07:02:43,922 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:02:45,221 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14039
2023-07-05 07:02:45,223 | DEBUG: Response: 200 (14039 bytes)
2023-07-05 07:02:45,231 | INFO: 127.0.0.1 - - [05/Jul/2023 07:02:45] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-05 07:03:32,002 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:03:32,002 | DEBUG: Data: None
2023-07-05 07:03:32,002 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:03:32,172 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:03:32,172 | DEBUG: Data: None
2023-07-05 07:03:32,172 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:03:32,267 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 07:03:32,268 | DEBUG: Response: 200 (136 bytes)
2023-07-05 07:03:32,269 | INFO: 127.0.0.1 - - [05/Jul/2023 07:03:32] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-05 07:03:32,478 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:03:32,479 | DEBUG: Data: None
2023-07-05 07:03:32,479 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:03:32,504 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2530
2023-07-05 07:03:32,507 | DEBUG: Response: 200 (2530 bytes)
2023-07-05 07:03:32,509 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:03:32,509 | DEBUG: Data: None
2023-07-05 07:03:32,510 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:03:32,883 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4846
2023-07-05 07:03:32,884 | DEBUG: Response: 200 (4846 bytes)
2023-07-05 07:03:32,887 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:03:32,887 | DEBUG: Data: None
2023-07-05 07:03:32,887 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:03:32,903 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2530
2023-07-05 07:03:32,905 | DEBUG: Response: 200 (2530 bytes)
2023-07-05 07:03:32,906 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:03:32,906 | DEBUG: Data: None
2023-07-05 07:03:32,906 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:03:33,253 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5819
2023-07-05 07:03:33,255 | DEBUG: Response: 200 (5819 bytes)
2023-07-05 07:03:33,257 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 07:03:33,257 | DEBUG: Data: None
2023-07-05 07:03:33,257 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:03:33,282 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4845
2023-07-05 07:03:33,283 | DEBUG: Response: 200 (4845 bytes)
2023-07-05 07:03:33,291 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:03:33,291 | DEBUG: Data: None
2023-07-05 07:03:33,291 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:03:33,662 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5811
2023-07-05 07:03:33,665 | DEBUG: Response: 200 (5811 bytes)
2023-07-05 07:03:33,667 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 07:03:33,667 | DEBUG: Data: None
2023-07-05 07:03:33,668 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:03:34,059 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 11170
2023-07-05 07:03:34,061 | DEBUG: Response: 200 (11170 bytes)
2023-07-05 07:03:34,068 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 07:03:34,068 | DEBUG: Data: None
2023-07-05 07:03:34,069 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:03:34,265 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 11166
2023-07-05 07:03:34,269 | DEBUG: Response: 200 (11166 bytes)
2023-07-05 07:03:34,273 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 07:03:34,273 | DEBUG: Data: None
2023-07-05 07:03:34,273 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:03:34,840 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14047
2023-07-05 07:03:34,844 | DEBUG: Response: 200 (14047 bytes)
2023-07-05 07:03:34,851 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 07:03:34,851 | DEBUG: Data: None
2023-07-05 07:03:34,851 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:03:35,123 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14043
2023-07-05 07:03:35,125 | DEBUG: Response: 200 (14043 bytes)
2023-07-05 07:03:35,133 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 07:03:35,133 | DEBUG: Data: None
2023-07-05 07:03:35,133 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:03:35,288 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4408
2023-07-05 07:03:35,289 | DEBUG: Response: 200 (4408 bytes)
2023-07-05 07:03:35,291 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:03:35,291 | DEBUG: Data: None
2023-07-05 07:03:35,291 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:03:35,603 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4410
2023-07-05 07:03:35,604 | DEBUG: Response: 200 (4410 bytes)
2023-07-05 07:03:35,606 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:03:35,606 | DEBUG: Data: None
2023-07-05 07:03:35,606 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:03:35,663 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4845
2023-07-05 07:03:35,664 | DEBUG: Response: 200 (4845 bytes)
2023-07-05 07:03:35,666 | INFO: 127.0.0.1 - - [05/Jul/2023 07:03:35] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-05 07:03:36,051 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4845
2023-07-05 07:03:36,052 | DEBUG: Response: 200 (4845 bytes)
2023-07-05 07:03:36,055 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:03:36,055 | DEBUG: Data: None
2023-07-05 07:03:36,055 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:03:36,404 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2924
2023-07-05 07:03:36,405 | DEBUG: Response: 200 (2924 bytes)
2023-07-05 07:03:36,406 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 07:03:36,406 | DEBUG: Data: None
2023-07-05 07:03:36,406 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:03:36,931 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 11167
2023-07-05 07:03:36,933 | DEBUG: Response: 200 (11167 bytes)
2023-07-05 07:03:36,937 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qo4d2/
2023-07-05 07:03:36,937 | DEBUG: Data: None
2023-07-05 07:03:36,937 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:03:37,855 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qo4d2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14307
2023-07-05 07:03:37,856 | DEBUG: Response: 200 (14307 bytes)
2023-07-05 07:03:37,862 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:03:37,862 | DEBUG: Data: None
2023-07-05 07:03:37,862 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:03:38,197 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2395
2023-07-05 07:03:38,197 | DEBUG: Response: 200 (2395 bytes)
2023-07-05 07:03:38,198 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 07:03:38,198 | DEBUG: Data: None
2023-07-05 07:03:38,198 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:03:38,984 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14039
2023-07-05 07:03:38,987 | DEBUG: Response: 200 (14039 bytes)
2023-07-05 07:03:38,993 | INFO: 127.0.0.1 - - [05/Jul/2023 07:03:38] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-05 07:04:10,572 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:04:10,572 | DEBUG: Data: None
2023-07-05 07:04:10,572 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:04:10,729 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:04:10,729 | DEBUG: Data: None
2023-07-05 07:04:10,729 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:04:10,843 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 07:04:10,844 | DEBUG: Response: 200 (136 bytes)
2023-07-05 07:04:10,845 | INFO: 127.0.0.1 - - [05/Jul/2023 07:04:10] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-05 07:04:11,056 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2531
2023-07-05 07:04:11,058 | DEBUG: Response: 200 (2531 bytes)
2023-07-05 07:04:11,060 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:04:11,061 | DEBUG: Data: None
2023-07-05 07:04:11,061 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:04:11,097 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:04:11,098 | DEBUG: Data: None
2023-07-05 07:04:11,098 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:04:11,413 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2530
2023-07-05 07:04:11,414 | DEBUG: Response: 200 (2530 bytes)
2023-07-05 07:04:11,416 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:04:11,416 | DEBUG: Data: None
2023-07-05 07:04:11,416 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:04:11,430 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4847
2023-07-05 07:04:11,432 | DEBUG: Response: 200 (4847 bytes)
2023-07-05 07:04:11,434 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:04:11,434 | DEBUG: Data: None
2023-07-05 07:04:11,434 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:04:11,766 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4845
2023-07-05 07:04:11,767 | DEBUG: Response: 200 (4845 bytes)
2023-07-05 07:04:11,768 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:04:11,768 | DEBUG: Data: None
2023-07-05 07:04:11,768 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:04:11,796 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5816
2023-07-05 07:04:11,799 | DEBUG: Response: 200 (5816 bytes)
2023-07-05 07:04:11,801 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 07:04:11,801 | DEBUG: Data: None
2023-07-05 07:04:11,801 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:04:12,104 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5819
2023-07-05 07:04:12,105 | DEBUG: Response: 200 (5819 bytes)
2023-07-05 07:04:12,106 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 07:04:12,106 | DEBUG: Data: None
2023-07-05 07:04:12,106 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:04:12,353 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 11165
2023-07-05 07:04:12,354 | DEBUG: Response: 200 (11165 bytes)
2023-07-05 07:04:12,358 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 07:04:12,358 | DEBUG: Data: None
2023-07-05 07:04:12,358 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:04:12,706 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 11162
2023-07-05 07:04:12,707 | DEBUG: Response: 200 (11162 bytes)
2023-07-05 07:04:12,715 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 07:04:12,715 | DEBUG: Data: None
2023-07-05 07:04:12,715 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:04:12,948 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14051
2023-07-05 07:04:13,135 | DEBUG: Response: 200 (14051 bytes)
2023-07-05 07:04:13,142 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 07:04:13,142 | DEBUG: Data: None
2023-07-05 07:04:13,142 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:04:13,562 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4408
2023-07-05 07:04:13,563 | DEBUG: Response: 200 (4408 bytes)
2023-07-05 07:04:13,565 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:04:13,565 | DEBUG: Data: None
2023-07-05 07:04:13,565 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:04:13,637 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14052
2023-07-05 07:04:13,640 | DEBUG: Response: 200 (14052 bytes)
2023-07-05 07:04:13,649 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 07:04:13,649 | DEBUG: Data: None
2023-07-05 07:04:13,649 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:04:13,988 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4845
2023-07-05 07:04:13,989 | DEBUG: Response: 200 (4845 bytes)
2023-07-05 07:04:13,992 | INFO: 127.0.0.1 - - [05/Jul/2023 07:04:13] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-05 07:04:14,000 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4401
2023-07-05 07:04:14,001 | DEBUG: Response: 200 (4401 bytes)
2023-07-05 07:04:14,003 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:04:14,003 | DEBUG: Data: None
2023-07-05 07:04:14,003 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:04:14,367 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4848
2023-07-05 07:04:14,368 | DEBUG: Response: 200 (4848 bytes)
2023-07-05 07:04:14,370 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:04:14,370 | DEBUG: Data: None
2023-07-05 07:04:14,370 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:04:14,685 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2922
2023-07-05 07:04:14,687 | DEBUG: Response: 200 (2922 bytes)
2023-07-05 07:04:14,688 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 07:04:14,688 | DEBUG: Data: None
2023-07-05 07:04:14,689 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:04:15,207 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 11184
2023-07-05 07:04:15,209 | DEBUG: Response: 200 (11184 bytes)
2023-07-05 07:04:15,219 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qo4d2/
2023-07-05 07:04:15,219 | DEBUG: Data: None
2023-07-05 07:04:15,219 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:04:15,966 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qo4d2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14308
2023-07-05 07:04:15,969 | DEBUG: Response: 200 (14308 bytes)
2023-07-05 07:04:15,980 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:04:15,981 | DEBUG: Data: None
2023-07-05 07:04:15,981 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:04:16,367 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2395
2023-07-05 07:04:16,370 | DEBUG: Response: 200 (2395 bytes)
2023-07-05 07:04:16,372 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 07:04:16,372 | DEBUG: Data: None
2023-07-05 07:04:16,372 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:04:17,126 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14044
2023-07-05 07:04:17,131 | DEBUG: Response: 200 (14044 bytes)
2023-07-05 07:04:17,150 | INFO: 127.0.0.1 - - [05/Jul/2023 07:04:17] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-05 07:11:28,806 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:11:28,806 | DEBUG: Data: None
2023-07-05 07:11:28,806 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:11:28,935 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:11:28,935 | DEBUG: Data: None
2023-07-05 07:11:28,935 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:11:29,065 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 07:11:29,067 | DEBUG: Response: 200 (136 bytes)
2023-07-05 07:11:29,069 | INFO: 127.0.0.1 - - [05/Jul/2023 07:11:29] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-05 07:11:29,279 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:11:29,280 | DEBUG: Data: None
2023-07-05 07:11:29,280 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:11:29,283 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2531
2023-07-05 07:11:29,286 | DEBUG: Response: 200 (2531 bytes)
2023-07-05 07:11:29,288 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:11:29,289 | DEBUG: Data: None
2023-07-05 07:11:29,289 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:11:29,621 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2531
2023-07-05 07:11:29,623 | DEBUG: Response: 200 (2531 bytes)
2023-07-05 07:11:29,625 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:11:29,625 | DEBUG: Data: None
2023-07-05 07:11:29,626 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:11:29,643 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4942
2023-07-05 07:11:29,645 | DEBUG: Response: 200 (4942 bytes)
2023-07-05 07:11:29,649 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:11:29,649 | DEBUG: Data: None
2023-07-05 07:11:29,649 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:11:29,991 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4944
2023-07-05 07:11:29,992 | DEBUG: Response: 200 (4944 bytes)
2023-07-05 07:11:29,994 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:11:29,994 | DEBUG: Data: None
2023-07-05 07:11:29,994 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:11:30,008 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5822
2023-07-05 07:11:30,011 | DEBUG: Response: 200 (5822 bytes)
2023-07-05 07:11:30,012 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 07:11:30,012 | DEBUG: Data: None
2023-07-05 07:11:30,012 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:11:30,357 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5827
2023-07-05 07:11:30,358 | DEBUG: Response: 200 (5827 bytes)
2023-07-05 07:11:30,360 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 07:11:30,360 | DEBUG: Data: None
2023-07-05 07:11:30,360 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:11:30,512 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 11171
2023-07-05 07:11:30,514 | DEBUG: Response: 200 (11171 bytes)
2023-07-05 07:11:30,519 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 07:11:30,519 | DEBUG: Data: None
2023-07-05 07:11:30,519 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:11:30,917 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 11186
2023-07-05 07:11:30,922 | DEBUG: Response: 200 (11186 bytes)
2023-07-05 07:11:30,926 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 07:11:30,926 | DEBUG: Data: None
2023-07-05 07:11:30,926 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:11:31,500 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14035
2023-07-05 07:11:31,700 | DEBUG: Response: 200 (14035 bytes)
2023-07-05 07:11:31,708 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 07:11:31,708 | DEBUG: Data: None
2023-07-05 07:11:31,708 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:11:31,718 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14033
2023-07-05 07:11:31,720 | DEBUG: Response: 200 (14033 bytes)
2023-07-05 07:11:31,734 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 07:11:31,734 | DEBUG: Data: None
2023-07-05 07:11:31,734 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:11:32,081 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4407
2023-07-05 07:11:32,083 | DEBUG: Response: 200 (4407 bytes)
2023-07-05 07:11:32,085 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:11:32,085 | DEBUG: Data: None
2023-07-05 07:11:32,086 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:11:32,198 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4400
2023-07-05 07:11:32,200 | DEBUG: Response: 200 (4400 bytes)
2023-07-05 07:11:32,204 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:11:32,204 | DEBUG: Data: None
2023-07-05 07:11:32,205 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:11:32,437 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4949
2023-07-05 07:11:32,438 | DEBUG: Response: 200 (4949 bytes)
2023-07-05 07:11:32,440 | INFO: 127.0.0.1 - - [05/Jul/2023 07:11:32] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-05 07:11:32,568 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4947
2023-07-05 07:11:32,569 | DEBUG: Response: 200 (4947 bytes)
2023-07-05 07:11:32,571 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:11:32,571 | DEBUG: Data: None
2023-07-05 07:11:32,571 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:11:33,063 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2921
2023-07-05 07:11:33,064 | DEBUG: Response: 200 (2921 bytes)
2023-07-05 07:11:33,065 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 07:11:33,065 | DEBUG: Data: None
2023-07-05 07:11:33,065 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:11:33,560 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 11177
2023-07-05 07:11:33,561 | DEBUG: Response: 200 (11177 bytes)
2023-07-05 07:11:33,565 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qo4d2/
2023-07-05 07:11:33,565 | DEBUG: Data: None
2023-07-05 07:11:33,565 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:11:34,352 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qo4d2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14417
2023-07-05 07:11:34,553 | DEBUG: Response: 200 (14417 bytes)
2023-07-05 07:11:34,565 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:11:34,565 | DEBUG: Data: None
2023-07-05 07:11:34,566 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:11:34,914 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2395
2023-07-05 07:11:34,915 | DEBUG: Response: 200 (2395 bytes)
2023-07-05 07:11:34,916 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 07:11:34,916 | DEBUG: Data: None
2023-07-05 07:11:34,916 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:11:35,670 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14039
2023-07-05 07:11:35,676 | DEBUG: Response: 200 (14039 bytes)
2023-07-05 07:11:35,686 | INFO: 127.0.0.1 - - [05/Jul/2023 07:11:35] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-05 07:17:17,784 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:17:17,784 | DEBUG: Data: None
2023-07-05 07:17:17,784 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:17:17,932 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:17:17,932 | DEBUG: Data: None
2023-07-05 07:17:17,932 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:17:18,060 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 07:17:18,062 | DEBUG: Response: 200 (136 bytes)
2023-07-05 07:17:18,062 | INFO: 127.0.0.1 - - [05/Jul/2023 07:17:18] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-05 07:17:18,241 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2531
2023-07-05 07:17:18,242 | DEBUG: Response: 200 (2531 bytes)
2023-07-05 07:17:18,243 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:17:18,243 | DEBUG: Data: None
2023-07-05 07:17:18,244 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:18,261 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:17:18,261 | DEBUG: Data: None
2023-07-05 07:17:18,261 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:17:18,594 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4947
2023-07-05 07:17:18,595 | DEBUG: Response: 200 (4947 bytes)
2023-07-05 07:17:18,597 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:17:18,597 | DEBUG: Data: None
2023-07-05 07:17:18,597 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:17:18,598 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2531
2023-07-05 07:17:18,598 | DEBUG: Response: 200 (2531 bytes)
2023-07-05 07:17:18,599 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:17:18,599 | DEBUG: Data: None
2023-07-05 07:17:18,599 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:18,964 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4948
2023-07-05 07:17:18,966 | DEBUG: Response: 200 (4948 bytes)
2023-07-05 07:17:18,969 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:17:18,970 | DEBUG: Data: None
2023-07-05 07:17:18,970 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:17:19,075 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5819
2023-07-05 07:17:19,077 | DEBUG: Response: 200 (5819 bytes)
2023-07-05 07:17:19,078 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 07:17:19,078 | DEBUG: Data: None
2023-07-05 07:17:19,078 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:19,371 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5828
2023-07-05 07:17:19,373 | DEBUG: Response: 200 (5828 bytes)
2023-07-05 07:17:19,374 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 07:17:19,374 | DEBUG: Data: None
2023-07-05 07:17:19,374 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:19,591 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 11338
2023-07-05 07:17:19,593 | DEBUG: Response: 200 (11338 bytes)
2023-07-05 07:17:19,600 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 07:17:19,600 | DEBUG: Data: None
2023-07-05 07:17:19,600 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:20,085 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 11181
2023-07-05 07:17:20,088 | DEBUG: Response: 200 (11181 bytes)
2023-07-05 07:17:20,095 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 07:17:20,096 | DEBUG: Data: None
2023-07-05 07:17:20,096 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:20,187 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14038
2023-07-05 07:17:20,387 | DEBUG: Response: 200 (14038 bytes)
2023-07-05 07:17:20,400 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 07:17:20,400 | DEBUG: Data: None
2023-07-05 07:17:20,400 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:20,744 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14039
2023-07-05 07:17:20,766 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4400
2023-07-05 07:17:20,767 | DEBUG: Response: 200 (4400 bytes)
2023-07-05 07:17:20,771 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:17:20,771 | DEBUG: Data: None
2023-07-05 07:17:20,772 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:20,940 | DEBUG: Response: 200 (14039 bytes)
2023-07-05 07:17:20,950 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 07:17:20,950 | DEBUG: Data: None
2023-07-05 07:17:20,950 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:21,116 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4949
2023-07-05 07:17:21,118 | DEBUG: Response: 200 (4949 bytes)
2023-07-05 07:17:21,124 | INFO: 127.0.0.1 - - [05/Jul/2023 07:17:21] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-05 07:17:21,328 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4402
2023-07-05 07:17:21,329 | DEBUG: Response: 200 (4402 bytes)
2023-07-05 07:17:21,331 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:17:21,331 | DEBUG: Data: None
2023-07-05 07:17:21,331 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:21,502 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:17:21,502 | DEBUG: Data: None
2023-07-05 07:17:21,502 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:17:21,660 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:17:21,660 | DEBUG: Data: None
2023-07-05 07:17:21,661 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:17:21,663 | DEBUG: Resetting dropped connection: oauth.reddit.com
2023-07-05 07:17:21,700 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4948
2023-07-05 07:17:21,701 | DEBUG: Response: 200 (4948 bytes)
2023-07-05 07:17:21,704 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:17:21,705 | DEBUG: Data: None
2023-07-05 07:17:21,705 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:17:21,774 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 07:17:21,775 | DEBUG: Response: 200 (136 bytes)
2023-07-05 07:17:21,776 | INFO: 127.0.0.1 - - [05/Jul/2023 07:17:21] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-05 07:17:22,025 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:17:22,025 | DEBUG: Data: None
2023-07-05 07:17:22,025 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:17:22,068 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2927
2023-07-05 07:17:22,070 | DEBUG: Response: 200 (2927 bytes)
2023-07-05 07:17:22,072 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 07:17:22,072 | DEBUG: Data: None
2023-07-05 07:17:22,072 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:22,080 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2528
2023-07-05 07:17:22,082 | DEBUG: Response: 200 (2528 bytes)
2023-07-05 07:17:22,083 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:17:22,084 | DEBUG: Data: None
2023-07-05 07:17:22,084 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:22,344 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2531
2023-07-05 07:17:22,344 | DEBUG: Response: 200 (2531 bytes)
2023-07-05 07:17:22,345 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:17:22,345 | DEBUG: Data: None
2023-07-05 07:17:22,345 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:22,454 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4941
2023-07-05 07:17:22,456 | DEBUG: Response: 200 (4941 bytes)
2023-07-05 07:17:22,458 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:17:22,458 | DEBUG: Data: None
2023-07-05 07:17:22,458 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:17:22,577 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 11344
2023-07-05 07:17:22,581 | DEBUG: Response: 200 (11344 bytes)
2023-07-05 07:17:22,588 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qo4d2/
2023-07-05 07:17:22,590 | DEBUG: Data: None
2023-07-05 07:17:22,590 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:22,717 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4947
2023-07-05 07:17:22,717 | DEBUG: Response: 200 (4947 bytes)
2023-07-05 07:17:22,719 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:17:22,720 | DEBUG: Data: None
2023-07-05 07:17:22,720 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:17:23,123 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5828
2023-07-05 07:17:23,125 | DEBUG: Response: 200 (5828 bytes)
2023-07-05 07:17:23,126 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 07:17:23,126 | DEBUG: Data: None
2023-07-05 07:17:23,126 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:23,159 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5817
2023-07-05 07:17:23,162 | DEBUG: Response: 200 (5817 bytes)
2023-07-05 07:17:23,163 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 07:17:23,163 | DEBUG: Data: None
2023-07-05 07:17:23,163 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:23,199 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qo4d2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14582
2023-07-05 07:17:23,399 | DEBUG: Response: 200 (14582 bytes)
2023-07-05 07:17:23,408 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:17:23,409 | DEBUG: Data: None
2023-07-05 07:17:23,409 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:17:23,647 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 11186
2023-07-05 07:17:23,649 | DEBUG: Response: 200 (11186 bytes)
2023-07-05 07:17:23,655 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 07:17:23,655 | DEBUG: Data: None
2023-07-05 07:17:23,656 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:23,757 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2395
2023-07-05 07:17:23,759 | DEBUG: Response: 200 (2395 bytes)
2023-07-05 07:17:23,760 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 07:17:23,761 | DEBUG: Data: None
2023-07-05 07:17:23,761 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:23,863 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 11179
2023-07-05 07:17:23,866 | DEBUG: Response: 200 (11179 bytes)
2023-07-05 07:17:23,873 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 07:17:23,873 | DEBUG: Data: None
2023-07-05 07:17:23,873 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:24,425 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14048
2023-07-05 07:17:24,426 | DEBUG: Response: 200 (14048 bytes)
2023-07-05 07:17:24,431 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 07:17:24,431 | DEBUG: Data: None
2023-07-05 07:17:24,431 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:24,476 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14037
2023-07-05 07:17:24,498 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14049
2023-07-05 07:17:24,500 | DEBUG: Response: 200 (14049 bytes)
2023-07-05 07:17:24,510 | INFO: 127.0.0.1 - - [05/Jul/2023 07:17:24] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-05 07:17:24,538 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:17:24,539 | DEBUG: Data: None
2023-07-05 07:17:24,539 | DEBUG: Params: {'q': '', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:17:24,646 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:17:24,647 | DEBUG: Data: None
2023-07-05 07:17:24,647 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:17:24,650 | DEBUG: Resetting dropped connection: oauth.reddit.com
2023-07-05 07:17:24,656 | DEBUG: Response: 200 (14037 bytes)
2023-07-05 07:17:24,668 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 07:17:24,669 | DEBUG: Data: None
2023-07-05 07:17:24,669 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:24,773 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4406
2023-07-05 07:17:24,779 | DEBUG: Response: 200 (4406 bytes)
2023-07-05 07:17:24,784 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:17:24,784 | DEBUG: Data: None
2023-07-05 07:17:24,784 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:24,800 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 136
2023-07-05 07:17:24,801 | DEBUG: Response: 200 (136 bytes)
2023-07-05 07:17:24,802 | INFO: 127.0.0.1 - - [05/Jul/2023 07:17:24] "GET /watchlist?ticks= HTTP/1.1" 200 -
2023-07-05 07:17:24,879 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:17:24,879 | DEBUG: Data: None
2023-07-05 07:17:24,879 | DEBUG: Params: {'q': 'AMZN', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:17:25,045 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2531
2023-07-05 07:17:25,047 | DEBUG: Response: 200 (2531 bytes)
2023-07-05 07:17:25,048 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:17:25,048 | DEBUG: Data: None
2023-07-05 07:17:25,048 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:25,171 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4940
2023-07-05 07:17:25,173 | DEBUG: Response: 200 (4940 bytes)
2023-07-05 07:17:25,176 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:17:25,176 | DEBUG: Data: None
2023-07-05 07:17:25,176 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:17:25,198 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4409
2023-07-05 07:17:25,199 | DEBUG: Response: 200 (4409 bytes)
2023-07-05 07:17:25,201 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:17:25,201 | DEBUG: Data: None
2023-07-05 07:17:25,201 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:25,202 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMZN&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2531
2023-07-05 07:17:25,203 | DEBUG: Response: 200 (2531 bytes)
2023-07-05 07:17:25,207 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:17:25,207 | DEBUG: Data: None
2023-07-05 07:17:25,207 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:25,433 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4948
2023-07-05 07:17:25,434 | DEBUG: Response: 200 (4948 bytes)
2023-07-05 07:17:25,435 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:17:25,436 | DEBUG: Data: None
2023-07-05 07:17:25,436 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:17:25,513 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2929
2023-07-05 07:17:25,514 | DEBUG: Response: 200 (2929 bytes)
2023-07-05 07:17:25,515 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 07:17:25,516 | DEBUG: Data: None
2023-07-05 07:17:25,516 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:25,551 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4949
2023-07-05 07:17:25,552 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4948
2023-07-05 07:17:25,555 | DEBUG: Response: 200 (4949 bytes)
2023-07-05 07:17:25,559 | INFO: 127.0.0.1 - - [05/Jul/2023 07:17:25] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-05 07:17:25,560 | DEBUG: Response: 200 (4948 bytes)
2023-07-05 07:17:25,562 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:17:25,562 | DEBUG: Data: None
2023-07-05 07:17:25,563 | DEBUG: Params: {'q': 'TSLA', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:17:25,852 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5825
2023-07-05 07:17:25,854 | DEBUG: Response: 200 (5825 bytes)
2023-07-05 07:17:25,856 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 07:17:25,856 | DEBUG: Data: None
2023-07-05 07:17:25,856 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:25,908 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=TSLA&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 5824
2023-07-05 07:17:25,910 | DEBUG: Response: 200 (5824 bytes)
2023-07-05 07:17:25,911 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 07:17:25,911 | DEBUG: Data: None
2023-07-05 07:17:25,911 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:26,072 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 11183
2023-07-05 07:17:26,073 | DEBUG: Response: 200 (11183 bytes)
2023-07-05 07:17:26,079 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qo4d2/
2023-07-05 07:17:26,079 | DEBUG: Data: None
2023-07-05 07:17:26,079 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:26,405 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 11180
2023-07-05 07:17:26,405 | DEBUG: Response: 200 (11180 bytes)
2023-07-05 07:17:26,410 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 07:17:26,410 | DEBUG: Data: None
2023-07-05 07:17:26,410 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:26,844 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 11339
2023-07-05 07:17:26,847 | DEBUG: Response: 200 (11339 bytes)
2023-07-05 07:17:26,851 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 07:17:26,851 | DEBUG: Data: None
2023-07-05 07:17:26,851 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:26,882 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qo4d2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14589
2023-07-05 07:17:26,883 | DEBUG: Response: 200 (14589 bytes)
2023-07-05 07:17:26,889 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:17:26,889 | DEBUG: Data: None
2023-07-05 07:17:26,889 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:17:27,004 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14039
2023-07-05 07:17:27,180 | DEBUG: Response: 200 (14039 bytes)
2023-07-05 07:17:27,189 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 07:17:27,189 | DEBUG: Data: None
2023-07-05 07:17:27,189 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:27,196 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2394
2023-07-05 07:17:27,197 | DEBUG: Response: 200 (2394 bytes)
2023-07-05 07:17:27,198 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 07:17:27,198 | DEBUG: Data: None
2023-07-05 07:17:27,198 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:27,547 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4403
2023-07-05 07:17:27,548 | DEBUG: Response: 200 (4403 bytes)
2023-07-05 07:17:27,549 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:17:27,549 | DEBUG: Data: None
2023-07-05 07:17:27,549 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:27,625 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14042
2023-07-05 07:17:27,628 | DEBUG: Response: 200 (14042 bytes)
2023-07-05 07:17:27,633 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qa5qn/
2023-07-05 07:17:27,633 | DEBUG: Data: None
2023-07-05 07:17:27,633 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:27,779 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14043
2023-07-05 07:17:27,781 | DEBUG: Response: 200 (14043 bytes)
2023-07-05 07:17:27,789 | INFO: 127.0.0.1 - - [05/Jul/2023 07:17:27] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
2023-07-05 07:17:27,920 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4947
2023-07-05 07:17:27,921 | DEBUG: Response: 200 (4947 bytes)
2023-07-05 07:17:27,922 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:17:27,922 | DEBUG: Data: None
2023-07-05 07:17:27,923 | DEBUG: Params: {'q': 'AMD', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:17:27,992 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qa5qn/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4405
2023-07-05 07:17:27,993 | DEBUG: Response: 200 (4405 bytes)
2023-07-05 07:17:27,994 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qnqfd/
2023-07-05 07:17:27,994 | DEBUG: Data: None
2023-07-05 07:17:27,994 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:28,360 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qnqfd/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 4943
2023-07-05 07:17:28,360 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=AMD&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2927
2023-07-05 07:17:28,362 | DEBUG: Response: 200 (2927 bytes)
2023-07-05 07:17:28,363 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qskum/
2023-07-05 07:17:28,363 | DEBUG: Response: 200 (4943 bytes)
2023-07-05 07:17:28,363 | DEBUG: Data: None
2023-07-05 07:17:28,365 | INFO: 127.0.0.1 - - [05/Jul/2023 07:17:28] "GET /watchlist?ticks=AMZN,TSLA HTTP/1.1" 200 -
2023-07-05 07:17:28,365 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:28,891 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qskum/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 11335
2023-07-05 07:17:28,893 | DEBUG: Response: 200 (11335 bytes)
2023-07-05 07:17:28,898 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14qo4d2/
2023-07-05 07:17:28,898 | DEBUG: Data: None
2023-07-05 07:17:28,898 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:29,448 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14qo4d2/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14577
2023-07-05 07:17:29,450 | DEBUG: Response: 200 (14577 bytes)
2023-07-05 07:17:29,456 | DEBUG: Fetching: GET https://oauth.reddit.com/r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/
2023-07-05 07:17:29,456 | DEBUG: Data: None
2023-07-05 07:17:29,456 | DEBUG: Params: {'q': 'FB', 'restrict_sr': True, 'sort': 'top', 'syntax': 'lucene', 't': 'day', 'limit': 5, 'raw_json': 1}
2023-07-05 07:17:29,799 | DEBUG: https://oauth.reddit.com:443 "GET /r/wallstreetbets+stocks+personalfinance+trading+stockmarket+investing+stocktrader+smallstreetbets+pennystocks+Wallstreetbetsnew+RichTogether/search/?q=FB&restrict_sr=True&sort=top&syntax=lucene&t=day&limit=5&raw_json=1 HTTP/1.1" 200 2394
2023-07-05 07:17:29,800 | DEBUG: Response: 200 (2394 bytes)
2023-07-05 07:17:29,801 | DEBUG: Fetching: GET https://oauth.reddit.com/comments/14q25op/
2023-07-05 07:17:29,801 | DEBUG: Data: None
2023-07-05 07:17:29,801 | DEBUG: Params: {'limit': 2048, 'sort': 'confidence', 'raw_json': 1}
2023-07-05 07:17:30,670 | DEBUG: https://oauth.reddit.com:443 "GET /comments/14q25op/?limit=2048&sort=confidence&raw_json=1 HTTP/1.1" 200 14047
2023-07-05 07:17:30,672 | DEBUG: Response: 200 (14047 bytes)
2023-07-05 07:17:30,679 | INFO: 127.0.0.1 - - [05/Jul/2023 07:17:30] "GET /watchlist?ticks=AMZN,TSLA,AMD,FB HTTP/1.1" 200 -
